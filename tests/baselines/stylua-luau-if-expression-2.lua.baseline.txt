original file
-----------------------------------
-- from full-moon tests: https://github.com/Kampfkarren/full-moon/blob/main/full-moon/tests/roblox_cases/pass/if_expression/source.lua
local x = if foo then foo.x else 5
local y = (if x then x.indices else create()):update(if shouldUpdate then information else defaults)
local z = (if bar then foo.y else 5) :: number

local a = if foo then foo.x elseif bar then bar.x else 5
local b = if foo then if bar then bar else foo else 5
local c = if foo then (foo.x :: number) elseif bar then bar.x()() else 5
local d = if foo then 5 else baz :: number

if if foo then bar else baz then
end

-----------------------------------

>-- from full-moon tests: https://github.com/Kampfkarren/full-moon/blob/main/full-moon/tests/roblox_cases/pass/if_expression/source.lua
 ^^
 source.luau comment.line.double-dash.luau
   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   source.luau comment.line.double-dash.luau
>local x = if foo then foo.x else 5
 ^^^^^
 source.luau storage.modifier.local.luau
      ^
      source.luau
       ^
       source.luau variable.other.readwrite.luau
        ^
        source.luau
         ^
         source.luau keyword.operator.assignment.luau
          ^
          source.luau
           ^^
           source.luau keyword.control.luau
             ^
             source.luau
              ^^^
              source.luau variable.other.readwrite.luau
                 ^
                 source.luau
                  ^^^^
                  source.luau keyword.control.luau
                      ^
                      source.luau
                       ^^^
                       source.luau variable.other.readwrite.luau
                          ^
                          source.luau
                           ^
                           source.luau variable.other.property.luau
                            ^
                            source.luau
                             ^^^^
                             source.luau keyword.control.luau
                                 ^
                                 source.luau
                                  ^
                                  source.luau constant.numeric.decimal.luau
>local y = (if x then x.indices else create()):update(if shouldUpdate then information else defaults)
 ^^^^^
 source.luau storage.modifier.local.luau
      ^
      source.luau
       ^
       source.luau variable.other.readwrite.luau
        ^
        source.luau
         ^
         source.luau keyword.operator.assignment.luau
          ^
          source.luau
           ^
           source.luau punctuation.arguments.begin.luau
            ^^
            source.luau keyword.control.luau
              ^
              source.luau
               ^
               source.luau variable.other.readwrite.luau
                ^
                source.luau
                 ^^^^
                 source.luau keyword.control.luau
                     ^
                     source.luau
                      ^
                      source.luau variable.other.readwrite.luau
                       ^
                       source.luau
                        ^^^^^^^
                        source.luau variable.other.property.luau
                               ^
                               source.luau
                                ^^^^
                                source.luau keyword.control.luau
                                    ^
                                    source.luau
                                     ^^^^^^
                                     source.luau entity.name.function.luau
                                           ^
                                           source.luau punctuation.arguments.begin.luau
                                            ^
                                            source.luau punctuation.arguments.end.luau
                                             ^
                                             source.luau punctuation.arguments.end.luau
                                              ^
                                              source.luau
                                               ^^^^^^
                                               source.luau entity.name.function.luau
                                                     ^
                                                     source.luau punctuation.arguments.begin.luau
                                                      ^^
                                                      source.luau keyword.control.luau
                                                        ^
                                                        source.luau
                                                         ^^^^^^^^^^^^
                                                         source.luau variable.other.readwrite.luau
                                                                     ^
                                                                     source.luau
                                                                      ^^^^
                                                                      source.luau keyword.control.luau
                                                                          ^
                                                                          source.luau
                                                                           ^^^^^^^^^^^
                                                                           source.luau variable.other.readwrite.luau
                                                                                      ^
                                                                                      source.luau
                                                                                       ^^^^
                                                                                       source.luau keyword.control.luau
                                                                                           ^
                                                                                           source.luau
                                                                                            ^^^^^^^^
                                                                                            source.luau variable.other.readwrite.luau
                                                                                                    ^
                                                                                                    source.luau punctuation.arguments.end.luau
>local z = (if bar then foo.y else 5) :: number
 ^^^^^
 source.luau storage.modifier.local.luau
      ^
      source.luau
       ^
       source.luau variable.other.readwrite.luau
        ^
        source.luau
         ^
         source.luau keyword.operator.assignment.luau
          ^
          source.luau
           ^
           source.luau punctuation.arguments.begin.luau
            ^^
            source.luau keyword.control.luau
              ^
              source.luau
               ^^^
               source.luau variable.other.readwrite.luau
                  ^
                  source.luau
                   ^^^^
                   source.luau keyword.control.luau
                       ^
                       source.luau
                        ^^^
                        source.luau variable.other.readwrite.luau
                           ^
                           source.luau
                            ^
                            source.luau variable.other.property.luau
                             ^
                             source.luau
                              ^^^^
                              source.luau keyword.control.luau
                                  ^
                                  source.luau
                                   ^
                                   source.luau constant.numeric.decimal.luau
                                    ^
                                    source.luau punctuation.arguments.end.luau
                                     ^
                                     source.luau
                                      ^^
                                      source.luau keyword.operator.typecast.luau
                                        ^
                                        source.luau
                                         ^^^^^^
                                         source.luau support.type.primitive.luau
>
 ^
 source.luau
>local a = if foo then foo.x elseif bar then bar.x else 5
 ^^^^^
 source.luau storage.modifier.local.luau
      ^
      source.luau
       ^
       source.luau variable.other.readwrite.luau
        ^
        source.luau
         ^
         source.luau keyword.operator.assignment.luau
          ^
          source.luau
           ^^
           source.luau keyword.control.luau
             ^
             source.luau
              ^^^
              source.luau variable.other.readwrite.luau
                 ^
                 source.luau
                  ^^^^
                  source.luau keyword.control.luau
                      ^
                      source.luau
                       ^^^
                       source.luau variable.other.readwrite.luau
                          ^
                          source.luau
                           ^
                           source.luau variable.other.property.luau
                            ^
                            source.luau
                             ^^^^^^
                             source.luau keyword.control.luau
                                   ^
                                   source.luau
                                    ^^^
                                    source.luau variable.other.readwrite.luau
                                       ^
                                       source.luau
                                        ^^^^
                                        source.luau keyword.control.luau
                                            ^
                                            source.luau
                                             ^^^
                                             source.luau variable.other.readwrite.luau
                                                ^
                                                source.luau
                                                 ^
                                                 source.luau variable.other.property.luau
                                                  ^
                                                  source.luau
                                                   ^^^^
                                                   source.luau keyword.control.luau
                                                       ^
                                                       source.luau
                                                        ^
                                                        source.luau constant.numeric.decimal.luau
>local b = if foo then if bar then bar else foo else 5
 ^^^^^
 source.luau storage.modifier.local.luau
      ^
      source.luau
       ^
       source.luau variable.other.readwrite.luau
        ^
        source.luau
         ^
         source.luau keyword.operator.assignment.luau
          ^
          source.luau
           ^^
           source.luau keyword.control.luau
             ^
             source.luau
              ^^^
              source.luau variable.other.readwrite.luau
                 ^
                 source.luau
                  ^^^^
                  source.luau keyword.control.luau
                      ^
                      source.luau
                       ^^
                       source.luau keyword.control.luau
                         ^
                         source.luau
                          ^^^
                          source.luau variable.other.readwrite.luau
                             ^
                             source.luau
                              ^^^^
                              source.luau keyword.control.luau
                                  ^
                                  source.luau
                                   ^^^
                                   source.luau variable.other.readwrite.luau
                                      ^
                                      source.luau
                                       ^^^^
                                       source.luau keyword.control.luau
                                           ^
                                           source.luau
                                            ^^^
                                            source.luau variable.other.readwrite.luau
                                               ^
                                               source.luau
                                                ^^^^
                                                source.luau keyword.control.luau
                                                    ^
                                                    source.luau
                                                     ^
                                                     source.luau constant.numeric.decimal.luau
>local c = if foo then (foo.x :: number) elseif bar then bar.x()() else 5
 ^^^^^
 source.luau storage.modifier.local.luau
      ^
      source.luau
       ^
       source.luau variable.other.readwrite.luau
        ^
        source.luau
         ^
         source.luau keyword.operator.assignment.luau
          ^
          source.luau
           ^^
           source.luau keyword.control.luau
             ^
             source.luau
              ^^^
              source.luau variable.other.readwrite.luau
                 ^
                 source.luau
                  ^^^^
                  source.luau keyword.control.luau
                      ^
                      source.luau
                       ^
                       source.luau punctuation.arguments.begin.luau
                        ^^^
                        source.luau variable.other.readwrite.luau
                           ^
                           source.luau
                            ^
                            source.luau variable.other.property.luau
                             ^
                             source.luau
                              ^^
                              source.luau keyword.operator.typecast.luau
                                ^
                                source.luau
                                 ^^^^^^
                                 source.luau support.type.primitive.luau
                                       ^
                                       source.luau punctuation.arguments.end.luau
                                        ^
                                        source.luau
                                         ^^^^^^
                                         source.luau keyword.control.luau
                                               ^
                                               source.luau
                                                ^^^
                                                source.luau variable.other.readwrite.luau
                                                   ^
                                                   source.luau
                                                    ^^^^
                                                    source.luau keyword.control.luau
                                                        ^
                                                        source.luau
                                                         ^^^
                                                         source.luau variable.other.readwrite.luau
                                                            ^
                                                            source.luau
                                                             ^
                                                             source.luau entity.name.function.luau
                                                              ^
                                                              source.luau punctuation.arguments.begin.luau
                                                               ^
                                                               source.luau punctuation.arguments.end.luau
                                                                ^
                                                                source.luau punctuation.arguments.begin.luau
                                                                 ^
                                                                 source.luau punctuation.arguments.end.luau
                                                                  ^
                                                                  source.luau
                                                                   ^^^^
                                                                   source.luau keyword.control.luau
                                                                       ^
                                                                       source.luau
                                                                        ^
                                                                        source.luau constant.numeric.decimal.luau
>local d = if foo then 5 else baz :: number
 ^^^^^
 source.luau storage.modifier.local.luau
      ^
      source.luau
       ^
       source.luau variable.other.readwrite.luau
        ^
        source.luau
         ^
         source.luau keyword.operator.assignment.luau
          ^
          source.luau
           ^^
           source.luau keyword.control.luau
             ^
             source.luau
              ^^^
              source.luau variable.other.readwrite.luau
                 ^
                 source.luau
                  ^^^^
                  source.luau keyword.control.luau
                      ^
                      source.luau
                       ^
                       source.luau constant.numeric.decimal.luau
                        ^
                        source.luau
                         ^^^^
                         source.luau keyword.control.luau
                             ^
                             source.luau
                              ^^^
                              source.luau variable.other.readwrite.luau
                                 ^
                                 source.luau
                                  ^^
                                  source.luau keyword.operator.typecast.luau
                                    ^
                                    source.luau
                                     ^^^^^^
                                     source.luau support.type.primitive.luau
>
 ^
 source.luau
>if if foo then bar else baz then
 ^^
 source.luau keyword.control.luau
   ^
   source.luau
    ^^
    source.luau keyword.control.luau
      ^
      source.luau
       ^^^
       source.luau variable.other.readwrite.luau
          ^
          source.luau
           ^^^^
           source.luau keyword.control.luau
               ^
               source.luau
                ^^^
                source.luau variable.other.readwrite.luau
                   ^
                   source.luau
                    ^^^^
                    source.luau keyword.control.luau
                        ^
                        source.luau
                         ^^^
                         source.luau variable.other.readwrite.luau
                            ^
                            source.luau
                             ^^^^
                             source.luau keyword.control.luau
>end
 ^^^
 source.luau keyword.control.luau
>
 ^
 source.luau