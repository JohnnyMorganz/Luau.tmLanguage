original file
-----------------------------------
local foo = (bar :: any) :: number

-- https://github.com/JohnnyMorganz/StyLua/issues/345
local foo = (if true then 0 else 1) + 1

-- https://github.com/JohnnyMorganz/StyLua/issues/383
local firstPendingUpdate = ((lastPendingUpdate.next :: any) :: Update<State>)

local x = #(value :: Array<number>)

-- https://github.com/JohnnyMorganz/StyLua/issues/425
self.mutationStore[mutationId] = (
  {
  	lolz = foreva,
  	variables = variables,
  } :: anyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy
) :: MutationStoreValue

local _name = debug.info(fn :: ((any) -> any), "n")

-- https://github.com/JohnnyMorganz/StyLua/issues/441
if string.len(string_) > (length :: number) then
    return string_:sub(1, (length :: number) + 1) .. "â€¦"
else
    return string_
end

if fiber.actualStartTime ~= nil and (fiber.actualStartTime :: number) < 0 then
    fiber.actualStartTime = now()
end

-- https://github.com/JohnnyMorganz/StyLua/issues/530
foo(
  -- testing
  (x :: string) -- testing
)

-- https://github.com/JohnnyMorganz/StyLua/issues/611
local function foo(): (number)
end

-- https://github.com/JohnnyMorganz/StyLua/issues/679
type A = B & (C | D)
type A = B & (C?)
type A = ((string) -> string) & ((number) -> number)
type A = (A | B)?
type A = (A | B) -- comment

-- https://github.com/JohnnyMorganz/StyLua/issues/729
type SomeType<T..., U...> = (T...) -> U...
local fn: SomeType<(string, number), (boolean)>

-----------------------------------

>local foo = (bar :: any) :: number
 ^^^^^
 source.luau storage.modifier.local.luau
      ^
      source.luau
       ^^^
       source.luau variable.other.readwrite.luau
          ^
          source.luau
           ^
           source.luau keyword.operator.assignment.luau
            ^
            source.luau
             ^
             source.luau punctuation.arguments.begin.luau
              ^^^
              source.luau variable.other.readwrite.luau
                 ^
                 source.luau
                  ^^
                  source.luau keyword.operator.typecast.luau
                    ^
                    source.luau
                     ^^^
                     source.luau support.type.primitive.luau
                        ^
                        source.luau punctuation.arguments.end.luau
                         ^
                         source.luau
                          ^^
                          source.luau keyword.operator.typecast.luau
                            ^
                            source.luau
                             ^^^^^^
                             source.luau support.type.primitive.luau
>
 ^
 source.luau
>-- https://github.com/JohnnyMorganz/StyLua/issues/345
 ^^
 source.luau comment.line.double-dash.luau
   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   source.luau comment.line.double-dash.luau
>local foo = (if true then 0 else 1) + 1
 ^^^^^
 source.luau storage.modifier.local.luau
      ^
      source.luau
       ^^^
       source.luau variable.other.readwrite.luau
          ^
          source.luau
           ^
           source.luau keyword.operator.assignment.luau
            ^
            source.luau
             ^
             source.luau punctuation.arguments.begin.luau
              ^^
              source.luau keyword.control.luau
                ^
                source.luau
                 ^^^^
                 source.luau constant.language.boolean.true.luau
                     ^
                     source.luau
                      ^^^^
                      source.luau keyword.control.luau
                          ^
                          source.luau
                           ^
                           source.luau constant.numeric.decimal.luau
                            ^
                            source.luau
                             ^^^^
                             source.luau keyword.control.luau
                                 ^
                                 source.luau
                                  ^
                                  source.luau constant.numeric.decimal.luau
                                   ^
                                   source.luau punctuation.arguments.end.luau
                                    ^
                                    source.luau
                                     ^
                                     source.luau keyword.operator.arithmetic.luau
                                      ^
                                      source.luau
                                       ^
                                       source.luau constant.numeric.decimal.luau
>
 ^
 source.luau
>-- https://github.com/JohnnyMorganz/StyLua/issues/383
 ^^
 source.luau comment.line.double-dash.luau
   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   source.luau comment.line.double-dash.luau
>local firstPendingUpdate = ((lastPendingUpdate.next :: any) :: Update<State>)
 ^^^^^
 source.luau storage.modifier.local.luau
      ^
      source.luau
       ^^^^^^^^^^^^^^^^^^
       source.luau variable.other.readwrite.luau
                         ^
                         source.luau
                          ^
                          source.luau keyword.operator.assignment.luau
                           ^
                           source.luau
                            ^
                            source.luau punctuation.arguments.begin.luau
                             ^
                             source.luau punctuation.arguments.begin.luau
                              ^^^^^^^^^^^^^^^^^
                              source.luau variable.other.readwrite.luau
                                               ^
                                               source.luau
                                                ^^^^
                                                source.luau variable.other.property.luau
                                                    ^
                                                    source.luau
                                                     ^^
                                                     source.luau keyword.operator.typecast.luau
                                                       ^
                                                       source.luau
                                                        ^^^
                                                        source.luau support.type.primitive.luau
                                                           ^
                                                           source.luau punctuation.arguments.end.luau
                                                            ^
                                                            source.luau
                                                             ^^
                                                             source.luau keyword.operator.typecast.luau
                                                               ^
                                                               source.luau
                                                                ^^^^^^
                                                                source.luau entity.name.type.luau
                                                                      ^
                                                                      source.luau keyword.operator.type.luau
                                                                       ^^^^^
                                                                       source.luau entity.name.type.luau
                                                                            ^
                                                                            source.luau keyword.operator.type.luau
                                                                             ^
                                                                             source.luau punctuation.arguments.end.luau
>
 ^
 source.luau
>local x = #(value :: Array<number>)
 ^^^^^
 source.luau storage.modifier.local.luau
      ^
      source.luau
       ^
       source.luau variable.other.readwrite.luau
        ^
        source.luau
         ^
         source.luau keyword.operator.assignment.luau
          ^
          source.luau
           ^
           source.luau keyword.operator.other.luau
            ^
            source.luau punctuation.arguments.begin.luau
             ^^^^^
             source.luau variable.other.readwrite.luau
                  ^
                  source.luau
                   ^^
                   source.luau keyword.operator.typecast.luau
                     ^
                     source.luau
                      ^^^^^
                      source.luau entity.name.type.luau
                           ^
                           source.luau keyword.operator.type.luau
                            ^^^^^^
                            source.luau support.type.primitive.luau
                                  ^
                                  source.luau keyword.operator.type.luau
                                   ^
                                   source.luau punctuation.arguments.end.luau
>
 ^
 source.luau
>-- https://github.com/JohnnyMorganz/StyLua/issues/425
 ^^
 source.luau comment.line.double-dash.luau
   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   source.luau comment.line.double-dash.luau
>self.mutationStore[mutationId] = (
 ^^^^
 source.luau variable.language.self.luau
     ^
     source.luau
      ^^^^^^^^^^^^^
      source.luau variable.other.property.luau
                   ^
                   source.luau
                    ^^^^^^^^^^
                    source.luau variable.other.readwrite.luau
                              ^^
                              source.luau
                                ^
                                source.luau keyword.operator.assignment.luau
                                 ^
                                 source.luau
                                  ^
                                  source.luau punctuation.arguments.begin.luau
>  {
 ^^
 source.luau
   ^
   source.luau punctuation.table.begin.luau
>  	lolz = foreva,
 ^^^
 source.luau
    ^^^^
    source.luau variable.other.readwrite.luau
        ^
        source.luau
         ^
         source.luau keyword.operator.assignment.luau
          ^
          source.luau
           ^^^^^^
           source.luau variable.other.readwrite.luau
                 ^
                 source.luau punctuation.separator.fields.luau
>  	variables = variables,
 ^^^
 source.luau
    ^^^^^^^^^
    source.luau variable.other.readwrite.luau
             ^
             source.luau
              ^
              source.luau keyword.operator.assignment.luau
               ^
               source.luau
                ^^^^^^^^^
                source.luau variable.other.readwrite.luau
                         ^
                         source.luau punctuation.separator.fields.luau
>  } :: anyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy
 ^^
 source.luau
   ^
   source.luau punctuation.table.end.luau
    ^
    source.luau
     ^^
     source.luau keyword.operator.typecast.luau
       ^
       source.luau
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        source.luau entity.name.type.luau
>) :: MutationStoreValue
 ^
 source.luau punctuation.arguments.end.luau
  ^
  source.luau
   ^^
   source.luau keyword.operator.typecast.luau
     ^
     source.luau
      ^^^^^^^^^^^^^^^^^^
      source.luau entity.name.type.luau
>
 ^
 source.luau
>local _name = debug.info(fn :: ((any) -> any), "n")
 ^^^^^
 source.luau storage.modifier.local.luau
      ^
      source.luau
       ^^^^^
       source.luau variable.other.readwrite.luau
            ^
            source.luau
             ^
             source.luau keyword.operator.assignment.luau
              ^
              source.luau
               ^^^^^^^^^^
               source.luau support.function.luau
                         ^
                         source.luau punctuation.arguments.begin.luau
                          ^^
                          source.luau variable.other.readwrite.luau
                            ^
                            source.luau
                             ^^
                             source.luau keyword.operator.typecast.luau
                               ^
                               source.luau
                                ^
                                source.luau
                                 ^
                                 source.luau
                                  ^^^
                                  source.luau support.type.primitive.luau
                                     ^
                                     source.luau
                                      ^
                                      source.luau
                                       ^^
                                       source.luau keyword.operator.type.luau
                                         ^
                                         source.luau
                                          ^^^
                                          source.luau support.type.primitive.luau
                                             ^
                                             source.luau
                                              ^
                                              source.luau punctuation.separator.arguments.luau
                                               ^
                                               source.luau
                                                ^
                                                source.luau string.quoted.double.luau
                                                 ^
                                                 source.luau string.quoted.double.luau
                                                  ^
                                                  source.luau string.quoted.double.luau
                                                   ^
                                                   source.luau punctuation.arguments.end.luau
>
 ^
 source.luau
>-- https://github.com/JohnnyMorganz/StyLua/issues/441
 ^^
 source.luau comment.line.double-dash.luau
   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   source.luau comment.line.double-dash.luau
>if string.len(string_) > (length :: number) then
 ^^
 source.luau keyword.control.luau
   ^
   source.luau
    ^^^^^^^^^^
    source.luau support.function.luau
              ^
              source.luau punctuation.arguments.begin.luau
               ^^^^^^^
               source.luau variable.other.readwrite.luau
                      ^
                      source.luau punctuation.arguments.end.luau
                       ^
                       source.luau
                        ^
                        source.luau keyword.operator.comparison.luau
                         ^
                         source.luau
                          ^
                          source.luau punctuation.arguments.begin.luau
                           ^^^^^^
                           source.luau variable.other.readwrite.luau
                                 ^
                                 source.luau
                                  ^^
                                  source.luau keyword.operator.typecast.luau
                                    ^
                                    source.luau
                                     ^^^^^^
                                     source.luau support.type.primitive.luau
                                           ^
                                           source.luau punctuation.arguments.end.luau
                                            ^
                                            source.luau
                                             ^^^^
                                             source.luau keyword.control.luau
>    return string_:sub(1, (length :: number) + 1) .. "â€¦"
 ^^^^
 source.luau
     ^^^^^^
     source.luau keyword.control.luau
           ^
           source.luau
            ^^^^^^^
            source.luau variable.other.readwrite.luau
                   ^
                   source.luau
                    ^^^
                    source.luau entity.name.function.luau
                       ^
                       source.luau punctuation.arguments.begin.luau
                        ^
                        source.luau constant.numeric.decimal.luau
                         ^
                         source.luau punctuation.separator.arguments.luau
                          ^
                          source.luau
                           ^
                           source.luau punctuation.arguments.begin.luau
                            ^^^^^^
                            source.luau variable.other.readwrite.luau
                                  ^
                                  source.luau
                                   ^^
                                   source.luau keyword.operator.typecast.luau
                                     ^
                                     source.luau
                                      ^^^^^^
                                      source.luau support.type.primitive.luau
                                            ^
                                            source.luau punctuation.arguments.end.luau
                                             ^
                                             source.luau
                                              ^
                                              source.luau keyword.operator.arithmetic.luau
                                               ^
                                               source.luau
                                                ^
                                                source.luau constant.numeric.decimal.luau
                                                 ^
                                                 source.luau punctuation.arguments.end.luau
                                                  ^
                                                  source.luau
                                                   ^^
                                                   source.luau keyword.operator.other.luau
                                                     ^
                                                     source.luau
                                                      ^
                                                      source.luau string.quoted.double.luau
                                                       ^
                                                       source.luau string.quoted.double.luau
                                                        ^
                                                        source.luau string.quoted.double.luau
>else
 ^^^^
 source.luau keyword.control.luau
>    return string_
 ^^^^
 source.luau
     ^^^^^^
     source.luau keyword.control.luau
           ^
           source.luau
            ^^^^^^^
            source.luau variable.other.readwrite.luau
>end
 ^^^
 source.luau keyword.control.luau
>
 ^
 source.luau
>if fiber.actualStartTime ~= nil and (fiber.actualStartTime :: number) < 0 then
 ^^
 source.luau keyword.control.luau
   ^
   source.luau
    ^^^^^
    source.luau variable.other.readwrite.luau
         ^
         source.luau
          ^^^^^^^^^^^^^^^
          source.luau variable.other.property.luau
                         ^
                         source.luau
                          ^^
                          source.luau keyword.operator.comparison.luau
                            ^
                            source.luau
                             ^^^
                             source.luau constant.language.nil.luau
                                ^
                                source.luau
                                 ^^^
                                 source.luau keyword.operator.logical.luau keyword.operator.wordlike.luau
                                    ^
                                    source.luau
                                     ^
                                     source.luau punctuation.arguments.begin.luau
                                      ^^^^^
                                      source.luau variable.other.readwrite.luau
                                           ^
                                           source.luau
                                            ^^^^^^^^^^^^^^^
                                            source.luau variable.other.property.luau
                                                           ^
                                                           source.luau
                                                            ^^
                                                            source.luau keyword.operator.typecast.luau
                                                              ^
                                                              source.luau
                                                               ^^^^^^
                                                               source.luau support.type.primitive.luau
                                                                     ^
                                                                     source.luau punctuation.arguments.end.luau
                                                                      ^
                                                                      source.luau
                                                                       ^
                                                                       source.luau keyword.operator.comparison.luau
                                                                        ^
                                                                        source.luau
                                                                         ^
                                                                         source.luau constant.numeric.decimal.luau
                                                                          ^
                                                                          source.luau
                                                                           ^^^^
                                                                           source.luau keyword.control.luau
>    fiber.actualStartTime = now()
 ^^^^
 source.luau
     ^^^^^
     source.luau variable.other.readwrite.luau
          ^
          source.luau
           ^^^^^^^^^^^^^^^
           source.luau variable.other.property.luau
                          ^
                          source.luau
                           ^
                           source.luau keyword.operator.assignment.luau
                            ^
                            source.luau
                             ^^^
                             source.luau entity.name.function.luau
                                ^
                                source.luau punctuation.arguments.begin.luau
                                 ^
                                 source.luau punctuation.arguments.end.luau
>end
 ^^^
 source.luau keyword.control.luau
>
 ^
 source.luau
>-- https://github.com/JohnnyMorganz/StyLua/issues/530
 ^^
 source.luau comment.line.double-dash.luau
   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   source.luau comment.line.double-dash.luau
>foo(
 ^^^
 source.luau entity.name.function.luau
    ^
    source.luau punctuation.arguments.begin.luau
>  -- testing
 ^^
 source.luau
   ^^
   source.luau comment.line.double-dash.luau
     ^^^^^^^^
     source.luau comment.line.double-dash.luau
>  (x :: string) -- testing
 ^^
 source.luau
   ^
   source.luau punctuation.arguments.begin.luau
    ^
    source.luau variable.other.readwrite.luau
     ^
     source.luau
      ^^
      source.luau keyword.operator.typecast.luau
        ^
        source.luau
         ^^^^^^
         source.luau support.type.primitive.luau
               ^
               source.luau punctuation.arguments.end.luau
                ^
                source.luau
                 ^^
                 source.luau comment.line.double-dash.luau
                   ^^^^^^^^
                   source.luau comment.line.double-dash.luau
>)
 ^
 source.luau punctuation.arguments.end.luau
>
 ^
 source.luau
>-- https://github.com/JohnnyMorganz/StyLua/issues/611
 ^^
 source.luau comment.line.double-dash.luau
   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   source.luau comment.line.double-dash.luau
>local function foo(): (number)
 ^^^^^
 source.luau meta.function.luau storage.modifier.local.luau
      ^
      source.luau meta.function.luau
       ^^^^^^^^
       source.luau meta.function.luau keyword.control.luau
               ^
               source.luau meta.function.luau
                ^^^
                source.luau meta.function.luau entity.name.function.luau
                   ^
                   source.luau meta.function.luau meta.parameter.luau punctuation.definition.parameters.begin.luau
                    ^
                    source.luau meta.function.luau meta.parameter.luau punctuation.definition.parameters.end.luau
                     ^
                     source.luau
                      ^
                      source.luau
                       ^
                       source.luau
                        ^^^^^^
                        source.luau support.type.primitive.luau
                              ^
                              source.luau
>end
 ^^^
 source.luau keyword.control.luau
>
 ^
 source.luau
>-- https://github.com/JohnnyMorganz/StyLua/issues/679
 ^^
 source.luau comment.line.double-dash.luau
   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   source.luau comment.line.double-dash.luau
>type A = B & (C | D)
 ^^^^
 source.luau storage.type.luau
     ^
     source.luau
      ^
      source.luau entity.name.type.luau
       ^
       source.luau
        ^
        source.luau keyword.operator.assignment.luau
         ^
         source.luau
          ^
          source.luau entity.name.type.luau
           ^
           source.luau
            ^
            source.luau keyword.operator.type.luau
             ^
             source.luau
              ^
              source.luau
               ^
               source.luau entity.name.type.luau
                ^
                source.luau
                 ^
                 source.luau keyword.operator.type.luau
                  ^
                  source.luau
                   ^
                   source.luau entity.name.type.luau
                    ^
                    source.luau
>type A = B & (C?)
 ^^^^
 source.luau storage.type.luau
     ^
     source.luau
      ^
      source.luau entity.name.type.luau
       ^
       source.luau
        ^
        source.luau keyword.operator.assignment.luau
         ^
         source.luau
          ^
          source.luau entity.name.type.luau
           ^
           source.luau
            ^
            source.luau keyword.operator.type.luau
             ^
             source.luau
              ^
              source.luau
               ^
               source.luau entity.name.type.luau
                ^
                source.luau keyword.operator.type.luau
                 ^
                 source.luau
>type A = ((string) -> string) & ((number) -> number)
 ^^^^
 source.luau storage.type.luau
     ^
     source.luau
      ^
      source.luau entity.name.type.luau
       ^
       source.luau
        ^
        source.luau keyword.operator.assignment.luau
         ^
         source.luau
          ^
          source.luau
           ^
           source.luau
            ^^^^^^
            source.luau support.type.primitive.luau
                  ^
                  source.luau
                   ^
                   source.luau
                    ^^
                    source.luau keyword.operator.type.luau
                      ^
                      source.luau
                       ^^^^^^
                       source.luau support.type.primitive.luau
                             ^
                             source.luau
                              ^
                              source.luau
                               ^
                               source.luau keyword.operator.type.luau
                                ^
                                source.luau
                                 ^
                                 source.luau
                                  ^
                                  source.luau
                                   ^^^^^^
                                   source.luau support.type.primitive.luau
                                         ^
                                         source.luau
                                          ^
                                          source.luau
                                           ^^
                                           source.luau keyword.operator.type.luau
                                             ^
                                             source.luau
                                              ^^^^^^
                                              source.luau support.type.primitive.luau
                                                    ^
                                                    source.luau
>type A = (A | B)?
 ^^^^
 source.luau storage.type.luau
     ^
     source.luau
      ^
      source.luau entity.name.type.luau
       ^
       source.luau
        ^
        source.luau keyword.operator.assignment.luau
         ^
         source.luau
          ^
          source.luau
           ^
           source.luau entity.name.type.luau
            ^
            source.luau
             ^
             source.luau keyword.operator.type.luau
              ^
              source.luau
               ^
               source.luau entity.name.type.luau
                ^
                source.luau
                 ^
                 source.luau keyword.operator.type.luau
>type A = (A | B) -- comment
 ^^^^
 source.luau storage.type.luau
     ^
     source.luau
      ^
      source.luau entity.name.type.luau
       ^
       source.luau
        ^
        source.luau keyword.operator.assignment.luau
         ^
         source.luau
          ^
          source.luau
           ^
           source.luau entity.name.type.luau
            ^
            source.luau
             ^
             source.luau keyword.operator.type.luau
              ^
              source.luau
               ^
               source.luau entity.name.type.luau
                ^
                source.luau
                 ^
                 source.luau
                  ^^
                  source.luau comment.line.double-dash.luau
                    ^^^^^^^^
                    source.luau comment.line.double-dash.luau
>
 ^
 source.luau
>-- https://github.com/JohnnyMorganz/StyLua/issues/729
 ^^
 source.luau comment.line.double-dash.luau
   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   source.luau comment.line.double-dash.luau
>type SomeType<T..., U...> = (T...) -> U...
 ^^^^
 source.luau storage.type.luau
     ^
     source.luau
      ^^^^^^^^
      source.luau entity.name.type.luau
              ^
              source.luau keyword.operator.type.luau
               ^
               source.luau entity.name.type.luau
                ^^^^^
                source.luau
                     ^
                     source.luau entity.name.type.luau
                      ^^^
                      source.luau
                         ^
                         source.luau keyword.operator.type.luau
                          ^
                          source.luau
                           ^
                           source.luau keyword.operator.assignment.luau
                            ^
                            source.luau
                             ^
                             source.luau
                              ^
                              source.luau entity.name.type.luau
                               ^^^
                               source.luau
                                  ^
                                  source.luau
                                   ^
                                   source.luau
                                    ^^
                                    source.luau keyword.operator.type.luau
                                      ^
                                      source.luau
                                       ^
                                       source.luau entity.name.type.luau
                                        ^^^
                                        source.luau
>local fn: SomeType<(string, number), (boolean)>
 ^^^^^
 source.luau storage.modifier.local.luau
      ^
      source.luau
       ^^
       source.luau variable.other.readwrite.luau
         ^
         source.luau keyword.operator.type.luau
          ^
          source.luau
           ^^^^^^^^
           source.luau entity.name.type.luau
                   ^
                   source.luau keyword.operator.type.luau
                    ^
                    source.luau
                     ^^^^^^
                     source.luau support.type.primitive.luau
                           ^^
                           source.luau
                             ^^^^^^
                             source.luau support.type.primitive.luau
                                   ^
                                   source.luau
                                    ^^
                                    source.luau
                                      ^
                                      source.luau
                                       ^^^^^^^
                                       source.luau support.type.primitive.luau
                                              ^
                                              source.luau
                                               ^
                                               source.luau keyword.operator.type.luau
>
 ^
 source.luau