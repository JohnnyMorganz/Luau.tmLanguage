original file
-----------------------------------
-- https://github.com/JohnnyMorganz/StyLua/issues/508
exports.ScalarLeafsRule = function(context)
  return {
  		Field = function(_self, node)
  				if type_ then
  						if not selectionSet then
  								context:reportError(
  										GraphQLError.new(
  												('Field "%s" of type "%s" must have a selection of subfields. Did you mean "%s { ... }"?'):format(
  														fieldName,
  														typeStr,
  														fieldName
  												),
  												node
  										)
  								)
  						end
  				end
  		end,
  }
end

-----------------------------------

>-- https://github.com/JohnnyMorganz/StyLua/issues/508
 ^^
 source.luau comment.line.double-dash.luau
   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   source.luau comment.line.double-dash.luau
>exports.ScalarLeafsRule = function(context)
 ^^^^^^^
 source.luau variable.other.readwrite.luau
        ^
        source.luau
         ^^^^^^^^^^^^^^^
         source.luau variable.other.property.luau
                        ^
                        source.luau
                         ^
                         source.luau keyword.operator.assignment.luau
                          ^
                          source.luau
                           ^^^^^^^^
                           source.luau meta.function.luau keyword.control.luau
                                   ^
                                   source.luau meta.function.luau meta.parameter.luau punctuation.definition.parameters.begin.luau
                                    ^^^^^^^
                                    source.luau meta.function.luau meta.parameter.luau variable.parameter.function.luau
                                           ^
                                           source.luau meta.function.luau meta.parameter.luau punctuation.definition.parameters.end.luau
>  return {
 ^^
 source.luau
   ^^^^^^
   source.luau keyword.control.luau
         ^
         source.luau
          ^
          source.luau punctuation.table.begin.luau
>  		Field = function(_self, node)
 ^^^^
 source.luau
     ^^^^^
     source.luau variable.other.readwrite.luau
          ^
          source.luau
           ^
           source.luau keyword.operator.assignment.luau
            ^
            source.luau
             ^^^^^^^^
             source.luau meta.function.luau keyword.control.luau
                     ^
                     source.luau meta.function.luau meta.parameter.luau punctuation.definition.parameters.begin.luau
                      ^^^^^
                      source.luau meta.function.luau meta.parameter.luau variable.parameter.function.luau
                           ^
                           source.luau meta.function.luau meta.parameter.luau punctuation.separator.arguments.luau
                            ^
                            source.luau meta.function.luau meta.parameter.luau
                             ^^^^
                             source.luau meta.function.luau meta.parameter.luau variable.parameter.function.luau
                                 ^
                                 source.luau meta.function.luau meta.parameter.luau punctuation.definition.parameters.end.luau
>  				if type_ then
 ^^^^^^
 source.luau
       ^^
       source.luau keyword.control.luau
         ^
         source.luau
          ^^^^^
          source.luau variable.other.readwrite.luau
               ^
               source.luau
                ^^^^
                source.luau keyword.control.luau
>  						if not selectionSet then
 ^^^^^^^^
 source.luau
         ^^
         source.luau keyword.control.luau
           ^
           source.luau
            ^^^
            source.luau keyword.operator.logical.luau keyword.operator.wordlike.luau
               ^
               source.luau
                ^^^^^^^^^^^^
                source.luau variable.other.readwrite.luau
                            ^
                            source.luau
                             ^^^^
                             source.luau keyword.control.luau
>  								context:reportError(
 ^^^^^^^^^^
 source.luau
           ^^^^^^^
           source.luau variable.other.readwrite.luau
                  ^
                  source.luau
                   ^^^^^^^^^^^
                   source.luau entity.name.function.luau
                              ^
                              source.luau punctuation.arguments.begin.luau
>  										GraphQLError.new(
 ^^^^^^^^^^^^
 source.luau
             ^^^^^^^^^^^^
             source.luau variable.other.readwrite.luau
                         ^
                         source.luau
                          ^^^
                          source.luau entity.name.function.luau
                             ^
                             source.luau punctuation.arguments.begin.luau
>  												('Field "%s" of type "%s" must have a selection of subfields. Did you mean "%s { ... }"?'):format(
 ^^^^^^^^^^^^^^
 source.luau
               ^
               source.luau punctuation.arguments.begin.luau
                ^
                source.luau string.quoted.single.luau
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                 source.luau string.quoted.single.luau
                                                                                                       ^
                                                                                                       source.luau string.quoted.single.luau
                                                                                                        ^
                                                                                                        source.luau punctuation.arguments.end.luau
                                                                                                         ^
                                                                                                         source.luau
                                                                                                          ^^^^^^
                                                                                                          source.luau entity.name.function.luau
                                                                                                                ^
                                                                                                                source.luau punctuation.arguments.begin.luau
>  														fieldName,
 ^^^^^^^^^^^^^^^^
 source.luau
                 ^^^^^^^^^
                 source.luau variable.other.readwrite.luau
                          ^
                          source.luau punctuation.separator.arguments.luau
>  														typeStr,
 ^^^^^^^^^^^^^^^^
 source.luau
                 ^^^^^^^
                 source.luau variable.other.readwrite.luau
                        ^
                        source.luau punctuation.separator.arguments.luau
>  														fieldName
 ^^^^^^^^^^^^^^^^
 source.luau
                 ^^^^^^^^^
                 source.luau variable.other.readwrite.luau
>  												),
 ^^^^^^^^^^^^^^
 source.luau
               ^
               source.luau punctuation.arguments.end.luau
                ^
                source.luau punctuation.separator.arguments.luau
>  												node
 ^^^^^^^^^^^^^^
 source.luau
               ^^^^
               source.luau variable.other.readwrite.luau
>  										)
 ^^^^^^^^^^^^
 source.luau
             ^
             source.luau punctuation.arguments.end.luau
>  								)
 ^^^^^^^^^^
 source.luau
           ^
           source.luau punctuation.arguments.end.luau
>  						end
 ^^^^^^^^
 source.luau
         ^^^
         source.luau keyword.control.luau
>  				end
 ^^^^^^
 source.luau
       ^^^
       source.luau keyword.control.luau
>  		end,
 ^^^^
 source.luau
     ^^^
     source.luau keyword.control.luau
        ^
        source.luau punctuation.separator.fields.luau
>  }
 ^^
 source.luau
   ^
   source.luau punctuation.table.end.luau
>end
 ^^^
 source.luau keyword.control.luau
>
 ^
 source.luau