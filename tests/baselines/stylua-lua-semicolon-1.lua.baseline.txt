original file
-----------------------------------
local x = 1; -- comment
do
  return; -- bad
end; -- comment

local y; -- comment
z = 5; -- comment

repeat x = x + 1 until x > 5; -- comment

for x,y in pairs(z) do
  break; -- comment
end; -- comment

if x then end; -- comment

function foo()
end; -- comment

local function bar()
end; -- comment

for i = 1, 10 do
end; -- comment

while true do
end; -- comment

call("hello"); -- comment
call"hello"; -- comment
call { foo = bar }; -- comment

return x; -- comment

-----------------------------------

>local x = 1; -- comment
 ^^^^^
 source.luau storage.modifier.local.luau
      ^
      source.luau
       ^
       source.luau variable.other.readwrite.luau
        ^
        source.luau
         ^
         source.luau keyword.operator.assignment.luau
          ^
          source.luau
           ^
           source.luau constant.numeric.decimal.luau
            ^^
            source.luau
              ^^
              source.luau comment.line.double-dash.luau
                ^^^^^^^^
                source.luau comment.line.double-dash.luau
>do
 ^^
 source.luau keyword.control.luau
>  return; -- bad
 ^^
 source.luau
   ^^^^^^
   source.luau keyword.control.luau
         ^^
         source.luau
           ^^
           source.luau comment.line.double-dash.luau
             ^^^^
             source.luau comment.line.double-dash.luau
>end; -- comment
 ^^^
 source.luau keyword.control.luau
    ^^
    source.luau
      ^^
      source.luau comment.line.double-dash.luau
        ^^^^^^^^
        source.luau comment.line.double-dash.luau
>
 ^
 source.luau
>local y; -- comment
 ^^^^^
 source.luau storage.modifier.local.luau
      ^
      source.luau
       ^
       source.luau variable.other.readwrite.luau
        ^^
        source.luau
          ^^
          source.luau comment.line.double-dash.luau
            ^^^^^^^^
            source.luau comment.line.double-dash.luau
>z = 5; -- comment
 ^
 source.luau variable.other.readwrite.luau
  ^
  source.luau
   ^
   source.luau keyword.operator.assignment.luau
    ^
    source.luau
     ^
     source.luau constant.numeric.decimal.luau
      ^^
      source.luau
        ^^
        source.luau comment.line.double-dash.luau
          ^^^^^^^^
          source.luau comment.line.double-dash.luau
>
 ^
 source.luau
>repeat x = x + 1 until x > 5; -- comment
 ^^^^^^
 source.luau keyword.control.luau
       ^
       source.luau
        ^
        source.luau variable.other.readwrite.luau
         ^
         source.luau
          ^
          source.luau keyword.operator.assignment.luau
           ^
           source.luau
            ^
            source.luau variable.other.readwrite.luau
             ^
             source.luau
              ^
              source.luau keyword.operator.arithmetic.luau
               ^
               source.luau
                ^
                source.luau constant.numeric.decimal.luau
                 ^
                 source.luau
                  ^^^^^
                  source.luau keyword.control.luau
                       ^
                       source.luau
                        ^
                        source.luau variable.other.readwrite.luau
                         ^
                         source.luau
                          ^
                          source.luau keyword.operator.comparison.luau
                           ^
                           source.luau
                            ^
                            source.luau constant.numeric.decimal.luau
                             ^^
                             source.luau
                               ^^
                               source.luau comment.line.double-dash.luau
                                 ^^^^^^^^
                                 source.luau comment.line.double-dash.luau
>
 ^
 source.luau
>for x,y in pairs(z) do
 ^^^
 source.luau keyword.control.luau
    ^
    source.luau
     ^
     source.luau variable.parameter.luau
      ^
      source.luau
       ^
       source.luau variable.parameter.luau
        ^
        source.luau
         ^^
         source.luau keyword.control.luau
           ^
           source.luau
            ^^^^^
            source.luau support.function.luau
                 ^
                 source.luau punctuation.arguments.begin.luau
                  ^
                  source.luau variable.other.readwrite.luau
                   ^
                   source.luau punctuation.arguments.end.luau
                    ^
                    source.luau
                     ^^
                     source.luau keyword.control.luau
>  break; -- comment
 ^^
 source.luau
   ^^^^^
   source.luau keyword.control.luau
        ^^
        source.luau
          ^^
          source.luau comment.line.double-dash.luau
            ^^^^^^^^
            source.luau comment.line.double-dash.luau
>end; -- comment
 ^^^
 source.luau keyword.control.luau
    ^^
    source.luau
      ^^
      source.luau comment.line.double-dash.luau
        ^^^^^^^^
        source.luau comment.line.double-dash.luau
>
 ^
 source.luau
>if x then end; -- comment
 ^^
 source.luau keyword.control.luau
   ^
   source.luau
    ^
    source.luau variable.other.readwrite.luau
     ^
     source.luau
      ^^^^
      source.luau keyword.control.luau
          ^
          source.luau
           ^^^
           source.luau keyword.control.luau
              ^^
              source.luau
                ^^
                source.luau comment.line.double-dash.luau
                  ^^^^^^^^
                  source.luau comment.line.double-dash.luau
>
 ^
 source.luau
>function foo()
 ^^^^^^^^
 source.luau meta.function.luau keyword.control.luau
         ^
         source.luau meta.function.luau
          ^^^
          source.luau meta.function.luau entity.name.function.luau
             ^
             source.luau meta.function.luau meta.parameter.luau punctuation.definition.parameters.begin.luau
              ^
              source.luau meta.function.luau meta.parameter.luau punctuation.definition.parameters.end.luau
>end; -- comment
 ^^^
 source.luau keyword.control.luau
    ^^
    source.luau
      ^^
      source.luau comment.line.double-dash.luau
        ^^^^^^^^
        source.luau comment.line.double-dash.luau
>
 ^
 source.luau
>local function bar()
 ^^^^^
 source.luau meta.function.luau storage.modifier.local.luau
      ^
      source.luau meta.function.luau
       ^^^^^^^^
       source.luau meta.function.luau keyword.control.luau
               ^
               source.luau meta.function.luau
                ^^^
                source.luau meta.function.luau entity.name.function.luau
                   ^
                   source.luau meta.function.luau meta.parameter.luau punctuation.definition.parameters.begin.luau
                    ^
                    source.luau meta.function.luau meta.parameter.luau punctuation.definition.parameters.end.luau
>end; -- comment
 ^^^
 source.luau keyword.control.luau
    ^^
    source.luau
      ^^
      source.luau comment.line.double-dash.luau
        ^^^^^^^^
        source.luau comment.line.double-dash.luau
>
 ^
 source.luau
>for i = 1, 10 do
 ^^^
 source.luau keyword.control.luau
    ^
    source.luau
     ^
     source.luau variable.parameter.luau
      ^
      source.luau
       ^
       source.luau keyword.operator.assignment.luau
        ^
        source.luau
         ^
         source.luau constant.numeric.decimal.luau
          ^^
          source.luau
            ^^
            source.luau constant.numeric.decimal.luau
              ^
              source.luau
               ^^
               source.luau keyword.control.luau
>end; -- comment
 ^^^
 source.luau keyword.control.luau
    ^^
    source.luau
      ^^
      source.luau comment.line.double-dash.luau
        ^^^^^^^^
        source.luau comment.line.double-dash.luau
>
 ^
 source.luau
>while true do
 ^^^^^
 source.luau keyword.control.luau
      ^
      source.luau
       ^^^^
       source.luau constant.language.boolean.true.luau
           ^
           source.luau
            ^^
            source.luau keyword.control.luau
>end; -- comment
 ^^^
 source.luau keyword.control.luau
    ^^
    source.luau
      ^^
      source.luau comment.line.double-dash.luau
        ^^^^^^^^
        source.luau comment.line.double-dash.luau
>
 ^
 source.luau
>call("hello"); -- comment
 ^^^^
 source.luau entity.name.function.luau
     ^
     source.luau punctuation.arguments.begin.luau
      ^
      source.luau string.quoted.double.luau
       ^^^^^
       source.luau string.quoted.double.luau
            ^
            source.luau string.quoted.double.luau
             ^
             source.luau punctuation.arguments.end.luau
              ^^
              source.luau
                ^^
                source.luau comment.line.double-dash.luau
                  ^^^^^^^^
                  source.luau comment.line.double-dash.luau
>call"hello"; -- comment
 ^^^^
 source.luau entity.name.function.luau
     ^
     source.luau string.quoted.double.luau
      ^^^^^
      source.luau string.quoted.double.luau
           ^
           source.luau string.quoted.double.luau
            ^^
            source.luau
              ^^
              source.luau comment.line.double-dash.luau
                ^^^^^^^^
                source.luau comment.line.double-dash.luau
>call { foo = bar }; -- comment
 ^^^^
 source.luau entity.name.function.luau
     ^
     source.luau
      ^
      source.luau punctuation.table.begin.luau
       ^
       source.luau
        ^^^
        source.luau variable.other.readwrite.luau
           ^
           source.luau
            ^
            source.luau keyword.operator.assignment.luau
             ^
             source.luau
              ^^^
              source.luau variable.other.readwrite.luau
                 ^
                 source.luau
                  ^
                  source.luau punctuation.table.end.luau
                   ^^
                   source.luau
                     ^^
                     source.luau comment.line.double-dash.luau
                       ^^^^^^^^
                       source.luau comment.line.double-dash.luau
>
 ^
 source.luau
>return x; -- comment
 ^^^^^^
 source.luau keyword.control.luau
       ^
       source.luau
        ^
        source.luau variable.other.readwrite.luau
         ^^
         source.luau
           ^^
           source.luau comment.line.double-dash.luau
             ^^^^^^^^
             source.luau comment.line.double-dash.luau
>
 ^
 source.luau