original file
-----------------------------------
local foo_result = foo( --a comment
  "oof"
)

local expr_result = 1 + 2 + 3 + 4 + 5 --a comment
  + 6 + 6 + 8

print"text" --a comment
foo{bar = baz} -- comment

for foo, -- test
bar in 
next, -- comment
value
do
  print("test", -- comment
  	"foo"
  )
end

if code == 9 -- \t
or code == 32 -- <space>
   then
    print(code)
end

return foo, -- a comment
bar
-----------------------------------

>local foo_result = foo( --a comment
 ^^^^^
 source.luau storage.modifier.local.luau
      ^
      source.luau
       ^^^^^^^^^^
       source.luau variable.other.readwrite.luau
                 ^
                 source.luau
                  ^
                  source.luau keyword.operator.assignment.luau
                   ^
                   source.luau
                    ^^^
                    source.luau entity.name.function.luau
                       ^
                       source.luau punctuation.arguments.begin.luau
                        ^
                        source.luau
                         ^^
                         source.luau comment.line.double-dash.luau
                           ^^^^^^^^^
                           source.luau comment.line.double-dash.luau
>  "oof"
 ^^
 source.luau
   ^
   source.luau string.quoted.double.luau
    ^^^
    source.luau string.quoted.double.luau
       ^
       source.luau string.quoted.double.luau
>)
 ^
 source.luau punctuation.arguments.end.luau
>
 ^
 source.luau
>local expr_result = 1 + 2 + 3 + 4 + 5 --a comment
 ^^^^^
 source.luau storage.modifier.local.luau
      ^
      source.luau
       ^^^^^^^^^^^
       source.luau variable.other.readwrite.luau
                  ^
                  source.luau
                   ^
                   source.luau keyword.operator.assignment.luau
                    ^
                    source.luau
                     ^
                     source.luau constant.numeric.decimal.luau
                      ^
                      source.luau
                       ^
                       source.luau keyword.operator.arithmetic.luau
                        ^
                        source.luau
                         ^
                         source.luau constant.numeric.decimal.luau
                          ^
                          source.luau
                           ^
                           source.luau keyword.operator.arithmetic.luau
                            ^
                            source.luau
                             ^
                             source.luau constant.numeric.decimal.luau
                              ^
                              source.luau
                               ^
                               source.luau keyword.operator.arithmetic.luau
                                ^
                                source.luau
                                 ^
                                 source.luau constant.numeric.decimal.luau
                                  ^
                                  source.luau
                                   ^
                                   source.luau keyword.operator.arithmetic.luau
                                    ^
                                    source.luau
                                     ^
                                     source.luau constant.numeric.decimal.luau
                                      ^
                                      source.luau
                                       ^^
                                       source.luau comment.line.double-dash.luau
                                         ^^^^^^^^^
                                         source.luau comment.line.double-dash.luau
>  + 6 + 6 + 8
 ^^
 source.luau
   ^
   source.luau keyword.operator.arithmetic.luau
    ^
    source.luau
     ^
     source.luau constant.numeric.decimal.luau
      ^
      source.luau
       ^
       source.luau keyword.operator.arithmetic.luau
        ^
        source.luau
         ^
         source.luau constant.numeric.decimal.luau
          ^
          source.luau
           ^
           source.luau keyword.operator.arithmetic.luau
            ^
            source.luau
             ^
             source.luau constant.numeric.decimal.luau
>
 ^
 source.luau
>print"text" --a comment
 ^^^^^
 source.luau support.function.luau
      ^
      source.luau string.quoted.double.luau
       ^^^^
       source.luau string.quoted.double.luau
           ^
           source.luau string.quoted.double.luau
            ^
            source.luau
             ^^
             source.luau comment.line.double-dash.luau
               ^^^^^^^^^
               source.luau comment.line.double-dash.luau
>foo{bar = baz} -- comment
 ^^^
 source.luau entity.name.function.luau
    ^
    source.luau punctuation.table.begin.luau
     ^^^
     source.luau variable.other.readwrite.luau
        ^
        source.luau
         ^
         source.luau keyword.operator.assignment.luau
          ^
          source.luau
           ^^^
           source.luau variable.other.readwrite.luau
              ^
              source.luau punctuation.table.end.luau
               ^
               source.luau
                ^^
                source.luau comment.line.double-dash.luau
                  ^^^^^^^^
                  source.luau comment.line.double-dash.luau
>
 ^
 source.luau
>for foo, -- test
 ^^^
 source.luau keyword.control.luau
    ^
    source.luau
     ^^^
     source.luau variable.parameter.luau
        ^^^^^
        source.luau
             ^^^^
             source.luau variable.parameter.luau
>bar in 
 ^^^
 source.luau variable.parameter.luau
    ^
    source.luau
     ^^
     source.luau keyword.control.luau
       ^^
       source.luau
>next, -- comment
 ^^^^
 source.luau support.function.luau
     ^^
     source.luau
       ^^
       source.luau comment.line.double-dash.luau
         ^^^^^^^^
         source.luau comment.line.double-dash.luau
>value
 ^^^^^
 source.luau variable.other.readwrite.luau
>do
 ^^
 source.luau keyword.control.luau
>  print("test", -- comment
 ^^
 source.luau
   ^^^^^
   source.luau support.function.luau
        ^
        source.luau punctuation.arguments.begin.luau
         ^
         source.luau string.quoted.double.luau
          ^^^^
          source.luau string.quoted.double.luau
              ^
              source.luau string.quoted.double.luau
               ^
               source.luau punctuation.separator.arguments.luau
                ^
                source.luau
                 ^^
                 source.luau comment.line.double-dash.luau
                   ^^^^^^^^
                   source.luau comment.line.double-dash.luau
>  	"foo"
 ^^^
 source.luau
    ^
    source.luau string.quoted.double.luau
     ^^^
     source.luau string.quoted.double.luau
        ^
        source.luau string.quoted.double.luau
>  )
 ^^
 source.luau
   ^
   source.luau punctuation.arguments.end.luau
>end
 ^^^
 source.luau keyword.control.luau
>
 ^
 source.luau
>if code == 9 -- \t
 ^^
 source.luau keyword.control.luau
   ^
   source.luau
    ^^^^
    source.luau variable.other.readwrite.luau
        ^
        source.luau
         ^^
         source.luau keyword.operator.comparison.luau
           ^
           source.luau
            ^
            source.luau constant.numeric.decimal.luau
             ^
             source.luau
              ^^
              source.luau comment.line.double-dash.luau
                ^^^
                source.luau comment.line.double-dash.luau
>or code == 32 -- <space>
 ^^
 source.luau keyword.operator.logical.luau keyword.operator.wordlike.luau
   ^
   source.luau
    ^^^^
    source.luau variable.other.readwrite.luau
        ^
        source.luau
         ^^
         source.luau keyword.operator.comparison.luau
           ^
           source.luau
            ^^
            source.luau constant.numeric.decimal.luau
              ^
              source.luau
               ^^
               source.luau comment.line.double-dash.luau
                 ^^^^^^^^
                 source.luau comment.line.double-dash.luau
>   then
 ^^^
 source.luau
    ^^^^
    source.luau keyword.control.luau
>    print(code)
 ^^^^
 source.luau
     ^^^^^
     source.luau support.function.luau
          ^
          source.luau punctuation.arguments.begin.luau
           ^^^^
           source.luau variable.other.readwrite.luau
               ^
               source.luau punctuation.arguments.end.luau
>end
 ^^^
 source.luau keyword.control.luau
>
 ^
 source.luau
>return foo, -- a comment
 ^^^^^^
 source.luau keyword.control.luau
       ^
       source.luau
        ^^^
        source.luau variable.other.readwrite.luau
           ^^
           source.luau
             ^^
             source.luau comment.line.double-dash.luau
               ^^^^^^^^^^
               source.luau comment.line.double-dash.luau
>bar
 ^^^
 source.luau variable.other.readwrite.luau