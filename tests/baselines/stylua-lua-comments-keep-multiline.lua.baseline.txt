original file
-----------------------------------
if
  this -- foobar
then
elseif
  foobar or code == 10 -- \n
then
  pos = 1
  lexer.line = 1
  lexer.lineStart = pos - 1
end

local function coerceToMap(mapLike)
  return instanceOf(mapLike, Map) and mapLike -- ROBLOX: order is preservered
  	or Map.new(Object.entries(mapLike)) -- ROBLOX: order is not preserved
end

if -- comment
  foo
then
end

if
  foo
  -- comment
then
end

while -- commend
  foo
do
end

while
  foo
  -- comment
do
end

do
  return foo -- comment
  	or bar, -- comment
  	baz and foo
end

local x = foo -- comment
  	or bar, -- comment
  	baz and foo

-----------------------------------

>if
 ^^
 source.luau keyword.control.luau
>  this -- foobar
 ^^
 source.luau
   ^^^^
   source.luau variable.other.readwrite.luau
       ^
       source.luau
        ^^
        source.luau comment.line.double-dash.luau
          ^^^^^^^
          source.luau comment.line.double-dash.luau
>then
 ^^^^
 source.luau keyword.control.luau
>elseif
 ^^^^^^
 source.luau keyword.control.luau
>  foobar or code == 10 -- \n
 ^^
 source.luau
   ^^^^^^
   source.luau variable.other.readwrite.luau
         ^
         source.luau
          ^^
          source.luau keyword.operator.logical.luau keyword.operator.wordlike.luau
            ^
            source.luau
             ^^^^
             source.luau variable.other.readwrite.luau
                 ^
                 source.luau
                  ^^
                  source.luau keyword.operator.comparison.luau
                    ^
                    source.luau
                     ^^
                     source.luau constant.numeric.decimal.luau
                       ^
                       source.luau
                        ^^
                        source.luau comment.line.double-dash.luau
                          ^^^
                          source.luau comment.line.double-dash.luau
>then
 ^^^^
 source.luau keyword.control.luau
>  pos = 1
 ^^
 source.luau
   ^^^
   source.luau variable.other.readwrite.luau
      ^
      source.luau
       ^
       source.luau keyword.operator.assignment.luau
        ^
        source.luau
         ^
         source.luau constant.numeric.decimal.luau
>  lexer.line = 1
 ^^
 source.luau
   ^^^^^
   source.luau variable.other.readwrite.luau
        ^
        source.luau
         ^^^^
         source.luau variable.other.property.luau
             ^
             source.luau
              ^
              source.luau keyword.operator.assignment.luau
               ^
               source.luau
                ^
                source.luau constant.numeric.decimal.luau
>  lexer.lineStart = pos - 1
 ^^
 source.luau
   ^^^^^
   source.luau variable.other.readwrite.luau
        ^
        source.luau
         ^^^^^^^^^
         source.luau variable.other.property.luau
                  ^
                  source.luau
                   ^
                   source.luau keyword.operator.assignment.luau
                    ^
                    source.luau
                     ^^^
                     source.luau variable.other.readwrite.luau
                        ^
                        source.luau
                         ^
                         source.luau keyword.operator.arithmetic.luau
                          ^
                          source.luau
                           ^
                           source.luau constant.numeric.decimal.luau
>end
 ^^^
 source.luau keyword.control.luau
>
 ^
 source.luau
>local function coerceToMap(mapLike)
 ^^^^^
 source.luau meta.function.luau storage.modifier.local.luau
      ^
      source.luau meta.function.luau
       ^^^^^^^^
       source.luau meta.function.luau keyword.control.luau
               ^
               source.luau meta.function.luau
                ^^^^^^^^^^^
                source.luau meta.function.luau entity.name.function.luau
                           ^
                           source.luau meta.function.luau meta.parameter.luau punctuation.definition.parameters.begin.luau
                            ^^^^^^^
                            source.luau meta.function.luau meta.parameter.luau variable.parameter.function.luau
                                   ^
                                   source.luau meta.function.luau meta.parameter.luau punctuation.definition.parameters.end.luau
>  return instanceOf(mapLike, Map) and mapLike -- ROBLOX: order is preservered
 ^^
 source.luau
   ^^^^^^
   source.luau keyword.control.luau
         ^
         source.luau
          ^^^^^^^^^^
          source.luau entity.name.function.luau
                    ^
                    source.luau punctuation.arguments.begin.luau
                     ^^^^^^^
                     source.luau variable.other.readwrite.luau
                            ^
                            source.luau punctuation.separator.arguments.luau
                             ^
                             source.luau
                              ^^^
                              source.luau variable.other.readwrite.luau
                                 ^
                                 source.luau punctuation.arguments.end.luau
                                  ^
                                  source.luau
                                   ^^^
                                   source.luau keyword.operator.logical.luau keyword.operator.wordlike.luau
                                      ^
                                      source.luau
                                       ^^^^^^^
                                       source.luau variable.other.readwrite.luau
                                              ^
                                              source.luau
                                               ^^
                                               source.luau comment.line.double-dash.luau
                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                                                 source.luau comment.line.double-dash.luau
>  	or Map.new(Object.entries(mapLike)) -- ROBLOX: order is not preserved
 ^^^
 source.luau
    ^^
    source.luau keyword.operator.logical.luau keyword.operator.wordlike.luau
      ^
      source.luau
       ^^^
       source.luau variable.other.readwrite.luau
          ^
          source.luau
           ^^^
           source.luau entity.name.function.luau
              ^
              source.luau punctuation.arguments.begin.luau
               ^^^^^^
               source.luau variable.other.readwrite.luau
                     ^
                     source.luau
                      ^^^^^^^
                      source.luau entity.name.function.luau
                             ^
                             source.luau punctuation.arguments.begin.luau
                              ^^^^^^^
                              source.luau variable.other.readwrite.luau
                                     ^
                                     source.luau punctuation.arguments.end.luau
                                      ^
                                      source.luau punctuation.arguments.end.luau
                                       ^
                                       source.luau
                                        ^^
                                        source.luau comment.line.double-dash.luau
                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                                          source.luau comment.line.double-dash.luau
>end
 ^^^
 source.luau keyword.control.luau
>
 ^
 source.luau
>if -- comment
 ^^
 source.luau keyword.control.luau
   ^
   source.luau
    ^^
    source.luau comment.line.double-dash.luau
      ^^^^^^^^
      source.luau comment.line.double-dash.luau
>  foo
 ^^
 source.luau
   ^^^
   source.luau variable.other.readwrite.luau
>then
 ^^^^
 source.luau keyword.control.luau
>end
 ^^^
 source.luau keyword.control.luau
>
 ^
 source.luau
>if
 ^^
 source.luau keyword.control.luau
>  foo
 ^^
 source.luau
   ^^^
   source.luau variable.other.readwrite.luau
>  -- comment
 ^^
 source.luau
   ^^
   source.luau comment.line.double-dash.luau
     ^^^^^^^^
     source.luau comment.line.double-dash.luau
>then
 ^^^^
 source.luau keyword.control.luau
>end
 ^^^
 source.luau keyword.control.luau
>
 ^
 source.luau
>while -- commend
 ^^^^^
 source.luau keyword.control.luau
      ^
      source.luau
       ^^
       source.luau comment.line.double-dash.luau
         ^^^^^^^^
         source.luau comment.line.double-dash.luau
>  foo
 ^^
 source.luau
   ^^^
   source.luau variable.other.readwrite.luau
>do
 ^^
 source.luau keyword.control.luau
>end
 ^^^
 source.luau keyword.control.luau
>
 ^
 source.luau
>while
 ^^^^^
 source.luau keyword.control.luau
>  foo
 ^^
 source.luau
   ^^^
   source.luau variable.other.readwrite.luau
>  -- comment
 ^^
 source.luau
   ^^
   source.luau comment.line.double-dash.luau
     ^^^^^^^^
     source.luau comment.line.double-dash.luau
>do
 ^^
 source.luau keyword.control.luau
>end
 ^^^
 source.luau keyword.control.luau
>
 ^
 source.luau
>do
 ^^
 source.luau keyword.control.luau
>  return foo -- comment
 ^^
 source.luau
   ^^^^^^
   source.luau keyword.control.luau
         ^
         source.luau
          ^^^
          source.luau variable.other.readwrite.luau
             ^
             source.luau
              ^^
              source.luau comment.line.double-dash.luau
                ^^^^^^^^
                source.luau comment.line.double-dash.luau
>  	or bar, -- comment
 ^^^
 source.luau
    ^^
    source.luau keyword.operator.logical.luau keyword.operator.wordlike.luau
      ^
      source.luau
       ^^^
       source.luau variable.other.readwrite.luau
          ^^
          source.luau
            ^^
            source.luau comment.line.double-dash.luau
              ^^^^^^^^
              source.luau comment.line.double-dash.luau
>  	baz and foo
 ^^^
 source.luau
    ^^^
    source.luau variable.other.readwrite.luau
       ^
       source.luau
        ^^^
        source.luau keyword.operator.logical.luau keyword.operator.wordlike.luau
           ^
           source.luau
            ^^^
            source.luau variable.other.readwrite.luau
>end
 ^^^
 source.luau keyword.control.luau
>
 ^
 source.luau
>local x = foo -- comment
 ^^^^^
 source.luau storage.modifier.local.luau
      ^
      source.luau
       ^
       source.luau variable.other.readwrite.luau
        ^
        source.luau
         ^
         source.luau keyword.operator.assignment.luau
          ^
          source.luau
           ^^^
           source.luau variable.other.readwrite.luau
              ^
              source.luau
               ^^
               source.luau comment.line.double-dash.luau
                 ^^^^^^^^
                 source.luau comment.line.double-dash.luau
>  	or bar, -- comment
 ^^^
 source.luau
    ^^
    source.luau keyword.operator.logical.luau keyword.operator.wordlike.luau
      ^
      source.luau
       ^^^
       source.luau variable.other.readwrite.luau
          ^^
          source.luau
            ^^
            source.luau comment.line.double-dash.luau
              ^^^^^^^^
              source.luau comment.line.double-dash.luau
>  	baz and foo
 ^^^
 source.luau
    ^^^
    source.luau variable.other.readwrite.luau
       ^
       source.luau
        ^^^
        source.luau keyword.operator.logical.luau keyword.operator.wordlike.luau
           ^
           source.luau
            ^^^
            source.luau variable.other.readwrite.luau
>
 ^
 source.luau