original file
-----------------------------------
--!strict

type Array<T> = { [number]: T }
type Dictionary<T> = { [string]: T }

local RunService = game:GetService("RunService")

local INVALID_DUMP_VERSION = "API dump is an invalid version `%i` (expected version 1)"
local MODULE_NOT_READY_MESSAGE = "API has not been fetched yet; try using API.isReady() before calling API functions"
local CLASS_NOT_REAL_MESSAGE = "Class `%s` is not a valid Roblox class"
local API_REQUEST_FAILED_MESSAGE = "Could not get API dump: `%s`. Retrying in %i seconds."

local ApiTypes = require(script.ApiTypes)
local FetchApi = require(script.FetchApi)
local Filters = require(script.Filters)
local Util = require(script.Util)

local ReadyBindable = Instance.new("BindableEvent")

local classMap: Dictionary<ApiTypes.Class> = {}
local superClassMap: Dictionary<Array<ApiTypes.Class>> = {}

local dump: ApiTypes.API

local filterSecurity = Util.filterSecurity
local filterTags = Util.filterTags
local lookupify = Util.lookupify
local cloneMember = Util.cloneMember


local function tryAPI(): ()
  if dump then return end
  
  dump = FetchApi()
  
  if dump.Version ~= 1 then
  	error(string.format(INVALID_DUMP_VERSION, dump.Version), 2)
  end
  
  for _, class in ipairs(dump.Classes) do
  	classMap[class.Name] = class
  end
  
  for className in pairs(classMap) do
  	local classTables = {}
  	local root = className
  	while classMap[root] do
  		table.insert(classTables, 1, classMap[root])
  		root = classMap[root].Superclass
  	end
  	superClassMap[className] = classTables
  end
end

local API = {}

API.readyEvent = ReadyBindable.Event
API.filters = Filters

function API.isReady()
  return not not dump
end

function API.getMembers(class: string, tagFilter: Array<string>?, securityFilter: Array<string>?): Dictionary<ApiTypes.Member>
  if not dump then
  	error(MODULE_NOT_READY_MESSAGE, 2)
  end
  
  local superClasses: Array<ApiTypes.Class> = superClassMap[class]
  if not superClasses then
  	error(string.format(CLASS_NOT_REAL_MESSAGE, class), 2)
  end
  
  local tagLookup: Dictionary<boolean> = lookupify(tagFilter)
  local securityLookup: Dictionary<boolean> = lookupify(securityFilter)
  
  local memberList: Dictionary<ApiTypes.Member> = {}
  for _, class in ipairs(superClasses) do
  	for _, v in ipairs(class.Members) do
  		if filterSecurity(v.Security, securityLookup) then continue end
  		if filterTags(v.Tags, tagLookup) then continue end
  		
  		memberList[v.Name] = cloneMember(v)
  	end
  end
  
  return memberList
end

function API.getProperties(class: string, tagFilter: Array<string>?, securityFilter: Array<string>?): Dictionary<ApiTypes.Property>
  if not dump then
  	error(MODULE_NOT_READY_MESSAGE, 2)
  end
  
  local superClasses: Array<ApiTypes.Class> = superClassMap[class]
  if not superClasses then
  	error(string.format(CLASS_NOT_REAL_MESSAGE, class), 2)
  end
  
  local tagLookup: Dictionary<boolean> = lookupify(tagFilter)
  local securityLookup: Dictionary<boolean> = lookupify(securityFilter)
  
  local memberList: Dictionary<ApiTypes.Property> = {}
  for _, class in ipairs(superClasses) do
  	for _, v in ipairs(class.Members) do
  		if v.MemberType ~= "Property" then continue end
  		if filterSecurity(v.Security, securityLookup) then continue end
  		if filterTags(v.Tags, tagLookup) then continue end
  		
  		memberList[v.Name] = cloneMember(v)
  	end
  end
  
  return memberList
end


function API.getFunctions(class: string, tagFilter: Array<string>?, securityFilter: Array<string>?): Dictionary<ApiTypes.Function>
  if not dump then
  	error(MODULE_NOT_READY_MESSAGE, 2)
  end
  
  local superClasses: Array<ApiTypes.Class> = superClassMap[class]
  if not superClasses then
  	error(string.format(CLASS_NOT_REAL_MESSAGE, class), 2)
  end
  
  local tagLookup: Dictionary<boolean> = lookupify(tagFilter)
  local securityLookup: Dictionary<boolean> = lookupify(securityFilter)
  
  local memberList: Dictionary<ApiTypes.Function> = {}
  for _, class in ipairs(superClasses) do
  	for _, v in ipairs(class.Members) do
  		if v.MemberType ~= "Function" then continue end
  		if filterSecurity(v.Security, securityLookup) then continue end
  		if filterTags(v.Tags, tagLookup) then continue end
  		
  		memberList[v.Name] = cloneMember(v)
  	end
  end
  
  return memberList
end

function API.getEvents(class: string, tagFilter: Array<string>?, securityFilter: Array<string>?): Dictionary<ApiTypes.Event>
  if not dump then
  	error(MODULE_NOT_READY_MESSAGE, 2)
  end
  
  local superClasses: Array<ApiTypes.Class> = superClassMap[class]
  if not superClasses then
  	error(string.format(CLASS_NOT_REAL_MESSAGE, class), 2)
  end
  
  local tagLookup: Dictionary<boolean> = lookupify(tagFilter)
  local securityLookup: Dictionary<boolean> = lookupify(securityFilter)
  
  local memberList: Dictionary<ApiTypes.Event> = {}
  for _, class in ipairs(superClasses) do
  	for _, v in ipairs(class.Members) do
  		if v.MemberType ~= "Event" then continue end
  		if filterSecurity(v.Security, securityLookup) then continue end
  		if filterTags(v.Tags, tagLookup) then continue end
  		
  		memberList[v.Name] = cloneMember(v)
  	end
  end
  
  return memberList
end


function API.getCallbacks(class: string, tagFilter: Array<string>?, securityFilter: Array<string>?): Dictionary<ApiTypes.Callback>
  if not dump then
  	error(MODULE_NOT_READY_MESSAGE, 2)
  end
  
  local superClasses: Array<ApiTypes.Class> = superClassMap[class]
  if not superClasses then
  	error(string.format(CLASS_NOT_REAL_MESSAGE, class), 2)
  end
  
  local tagLookup: Dictionary<boolean> = lookupify(tagFilter)
  local securityLookup: Dictionary<boolean> = lookupify(securityFilter)
  
  local memberList: Dictionary<ApiTypes.Callback> = {}
  for _, class in ipairs(superClasses) do
  	for _, v in ipairs(class.Members) do
  		if v.MemberType ~= "Callback" then continue end
  		if filterSecurity(v.Security, securityLookup) then continue end
  		if filterTags(v.Tags, tagLookup) then continue end
  		
  		memberList[v.Name] = cloneMember(v)
  	end
  end
  
  return memberList
end

function API.getSuperclasses(class: string): Array<string>
  if not dump then
  	error(MODULE_NOT_READY_MESSAGE, 2)
  end
  
  local superClasses: Array<ApiTypes.Class> = superClassMap[class]
  if not superClasses then
  	error(string.format(CLASS_NOT_REAL_MESSAGE, class), 2)
  end
  
  local list = {}
  for i, class in ipairs(superClasses) do
  	list[i] = class.Name
  end
  
  return list
end

function API.isDeprecated(class: string, member: string?): boolean
  if not dump then
  	error(MODULE_NOT_READY_MESSAGE, 2)
  end
  
  local classTable: ApiTypes.Class = classMap[class]
  if not classTable then
  	error(string.format(CLASS_NOT_REAL_MESSAGE, class), 2)
  end
  
  if member then
  	local members = API.getMembers(class, {"Deprecated"})
  	if members[member] then
  		return true
  	else
  		return false
  	end
  else
  	local tags: typeof(classTable.Tags) = classTable.Tags
  	if tags then
  		if table.find(tags, "Deprecated") then
  			return true
  		end
  	end
  end
  return false
end

function API.isService(class: string): boolean
  if not dump then
  	error(MODULE_NOT_READY_MESSAGE, 2)
  end
  
  local classTable: ApiTypes.Class = classMap[class]
  if not classTable then
  	error(string.format(CLASS_NOT_REAL_MESSAGE, class), 2)
  end
  
  local tags: typeof(classTable.Tags) = classTable.Tags
  if tags then
  	if table.find(tags, "Service") then
  		return true
  	end
  end
  return false
end

function API.getClasses(filter: Array<string>?): Array<string>
  if not dump then
  	error(MODULE_NOT_READY_MESSAGE, 2)
  end
  local classList: Array<string> = {}
  
  local tagLookup: Dictionary<boolean> = lookupify(filter)
  
  local classCount = 1
  
  for _, v in ipairs(dump.Classes) do
  	if filterTags(v.Tags, tagLookup) then continue end
  	
  	classList[classCount] = v.Name
  	classCount += 1
  end
  
  return classList
end

function API.getEnums(filter: Array<string>?): Array<string>
  if not dump then
  	error(MODULE_NOT_READY_MESSAGE, 2)
  end
  local enumList: Array<string> = {}
  
  local tagLookup: Dictionary<boolean> = lookupify(filter)
  
  local enumCount = 1
  
  for _, v in ipairs(dump.Enums) do
  	if filterTags(v.Tags, tagLookup) then continue end
  	
  	enumList[enumCount] = v.Name
  	enumCount += 1
  end
  
  return enumList
end

export type Member = ApiTypes.Member
export type Property = ApiTypes.Property
export type Function = ApiTypes.Function
export type Event = ApiTypes.Event
export type Callback = ApiTypes.Callback

return API

-----------------------------------

>--!strict
 ^^
 source.luau comment.line.double-dash.luau
   ^^^^^^^
   source.luau comment.line.double-dash.luau
>
 ^
 source.luau
>type Array<T> = { [number]: T }
 ^^^^
 source.luau storage.type.luau
     ^
     source.luau
      ^^^^^
      source.luau entity.name.type.luau
           ^
           source.luau keyword.operator.type.luau
            ^
            source.luau entity.name.type.luau
             ^
             source.luau keyword.operator.type.luau
              ^
              source.luau
               ^
               source.luau keyword.operator.assignment.luau
                ^
                source.luau
                 ^
                 source.luau
                  ^
                  source.luau
                   ^
                   source.luau
                    ^^^^^^
                    source.luau support.type.primitive.luau
                          ^
                          source.luau
                           ^^
                           source.luau
                             ^
                             source.luau entity.name.type.luau
                              ^
                              source.luau
                               ^
                               source.luau
>type Dictionary<T> = { [string]: T }
 ^^^^
 source.luau storage.type.luau
     ^
     source.luau
      ^^^^^^^^^^
      source.luau entity.name.type.luau
                ^
                source.luau keyword.operator.type.luau
                 ^
                 source.luau entity.name.type.luau
                  ^
                  source.luau keyword.operator.type.luau
                   ^
                   source.luau
                    ^
                    source.luau keyword.operator.assignment.luau
                     ^
                     source.luau
                      ^
                      source.luau
                       ^
                       source.luau
                        ^
                        source.luau
                         ^^^^^^
                         source.luau support.type.primitive.luau
                               ^
                               source.luau
                                ^^
                                source.luau
                                  ^
                                  source.luau entity.name.type.luau
                                   ^
                                   source.luau
                                    ^
                                    source.luau
>
 ^
 source.luau
>local RunService = game:GetService("RunService")
 ^^^^^
 source.luau storage.modifier.local.luau
      ^
      source.luau
       ^^^^^^^^^^
       source.luau variable.other.readwrite.luau
                 ^
                 source.luau
                  ^
                  source.luau keyword.operator.assignment.luau
                   ^
                   source.luau
                    ^^^^
                    source.luau constant.language.luau
                        ^
                        source.luau
                         ^^^^^^^^^^
                         source.luau entity.name.function.luau
                                   ^
                                   source.luau punctuation.arguments.begin.luau
                                    ^
                                    source.luau string.quoted.double.luau
                                     ^^^^^^^^^^
                                     source.luau string.quoted.double.luau
                                               ^
                                               source.luau string.quoted.double.luau
                                                ^
                                                source.luau punctuation.arguments.end.luau
>
 ^
 source.luau
>local INVALID_DUMP_VERSION = "API dump is an invalid version `%i` (expected version 1)"
 ^^^^^
 source.luau storage.modifier.local.luau
      ^
      source.luau
       ^^^^^^^^^^^^^^^^^^^^
       source.luau variable.other.constant.luau
                           ^
                           source.luau
                            ^
                            source.luau keyword.operator.assignment.luau
                             ^
                             source.luau
                              ^
                              source.luau string.quoted.double.luau
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                               source.luau string.quoted.double.luau
                                                                                       ^
                                                                                       source.luau string.quoted.double.luau
>local MODULE_NOT_READY_MESSAGE = "API has not been fetched yet; try using API.isReady() before calling API functions"
 ^^^^^
 source.luau storage.modifier.local.luau
      ^
      source.luau
       ^^^^^^^^^^^^^^^^^^^^^^^^
       source.luau variable.other.constant.luau
                               ^
                               source.luau
                                ^
                                source.luau keyword.operator.assignment.luau
                                 ^
                                 source.luau
                                  ^
                                  source.luau string.quoted.double.luau
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                                   source.luau string.quoted.double.luau
                                                                                                                     ^
                                                                                                                     source.luau string.quoted.double.luau
>local CLASS_NOT_REAL_MESSAGE = "Class `%s` is not a valid Roblox class"
 ^^^^^
 source.luau storage.modifier.local.luau
      ^
      source.luau
       ^^^^^^^^^^^^^^^^^^^^^^
       source.luau variable.other.constant.luau
                             ^
                             source.luau
                              ^
                              source.luau keyword.operator.assignment.luau
                               ^
                               source.luau
                                ^
                                source.luau string.quoted.double.luau
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                                 source.luau string.quoted.double.luau
                                                                       ^
                                                                       source.luau string.quoted.double.luau
>local API_REQUEST_FAILED_MESSAGE = "Could not get API dump: `%s`. Retrying in %i seconds."
 ^^^^^
 source.luau storage.modifier.local.luau
      ^
      source.luau
       ^^^^^^^^^^^^^^^^^^^^^^^^^^
       source.luau variable.other.constant.luau
                                 ^
                                 source.luau
                                  ^
                                  source.luau keyword.operator.assignment.luau
                                   ^
                                   source.luau
                                    ^
                                    source.luau string.quoted.double.luau
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                                     source.luau string.quoted.double.luau
                                                                                          ^
                                                                                          source.luau string.quoted.double.luau
>
 ^
 source.luau
>local ApiTypes = require(script.ApiTypes)
 ^^^^^
 source.luau storage.modifier.local.luau
      ^
      source.luau
       ^^^^^^^^
       source.luau variable.other.readwrite.luau
               ^
               source.luau
                ^
                source.luau keyword.operator.assignment.luau
                 ^
                 source.luau
                  ^^^^^^^
                  source.luau support.function.luau
                         ^
                         source.luau punctuation.arguments.begin.luau
                          ^^^^^^
                          source.luau constant.language.luau
                                ^
                                source.luau
                                 ^^^^^^^^
                                 source.luau variable.other.property.luau
                                         ^
                                         source.luau punctuation.arguments.end.luau
>local FetchApi = require(script.FetchApi)
 ^^^^^
 source.luau storage.modifier.local.luau
      ^
      source.luau
       ^^^^^^^^
       source.luau variable.other.readwrite.luau
               ^
               source.luau
                ^
                source.luau keyword.operator.assignment.luau
                 ^
                 source.luau
                  ^^^^^^^
                  source.luau support.function.luau
                         ^
                         source.luau punctuation.arguments.begin.luau
                          ^^^^^^
                          source.luau constant.language.luau
                                ^
                                source.luau
                                 ^^^^^^^^
                                 source.luau variable.other.property.luau
                                         ^
                                         source.luau punctuation.arguments.end.luau
>local Filters = require(script.Filters)
 ^^^^^
 source.luau storage.modifier.local.luau
      ^
      source.luau
       ^^^^^^^
       source.luau variable.other.readwrite.luau
              ^
              source.luau
               ^
               source.luau keyword.operator.assignment.luau
                ^
                source.luau
                 ^^^^^^^
                 source.luau support.function.luau
                        ^
                        source.luau punctuation.arguments.begin.luau
                         ^^^^^^
                         source.luau constant.language.luau
                               ^
                               source.luau
                                ^^^^^^^
                                source.luau variable.other.property.luau
                                       ^
                                       source.luau punctuation.arguments.end.luau
>local Util = require(script.Util)
 ^^^^^
 source.luau storage.modifier.local.luau
      ^
      source.luau
       ^^^^
       source.luau variable.other.readwrite.luau
           ^
           source.luau
            ^
            source.luau keyword.operator.assignment.luau
             ^
             source.luau
              ^^^^^^^
              source.luau support.function.luau
                     ^
                     source.luau punctuation.arguments.begin.luau
                      ^^^^^^
                      source.luau constant.language.luau
                            ^
                            source.luau
                             ^^^^
                             source.luau variable.other.property.luau
                                 ^
                                 source.luau punctuation.arguments.end.luau
>
 ^
 source.luau
>local ReadyBindable = Instance.new("BindableEvent")
 ^^^^^
 source.luau storage.modifier.local.luau
      ^
      source.luau
       ^^^^^^^^^^^^^
       source.luau variable.other.readwrite.luau
                    ^
                    source.luau
                     ^
                     source.luau keyword.operator.assignment.luau
                      ^
                      source.luau
                       ^^^^^^^^
                       source.luau variable.other.readwrite.luau
                               ^
                               source.luau
                                ^^^
                                source.luau entity.name.function.luau
                                   ^
                                   source.luau punctuation.arguments.begin.luau
                                    ^
                                    source.luau string.quoted.double.luau
                                     ^^^^^^^^^^^^^
                                     source.luau string.quoted.double.luau
                                                  ^
                                                  source.luau string.quoted.double.luau
                                                   ^
                                                   source.luau punctuation.arguments.end.luau
>
 ^
 source.luau
>local classMap: Dictionary<ApiTypes.Class> = {}
 ^^^^^
 source.luau storage.modifier.local.luau
      ^
      source.luau
       ^^^^^^^^
       source.luau variable.other.readwrite.luau
               ^
               source.luau keyword.operator.type.luau
                ^
                source.luau
                 ^^^^^^^^^^
                 source.luau entity.name.type.luau
                           ^
                           source.luau keyword.operator.type.luau
                            ^^^^^^^^
                            source.luau entity.name.type.luau
                                    ^
                                    source.luau
                                     ^^^^^
                                     source.luau entity.name.type.luau
                                          ^
                                          source.luau keyword.operator.type.luau
                                           ^
                                           source.luau
                                            ^
                                            source.luau keyword.operator.assignment.luau
                                             ^
                                             source.luau
                                              ^
                                              source.luau punctuation.table.begin.luau
                                               ^
                                               source.luau punctuation.table.end.luau
>local superClassMap: Dictionary<Array<ApiTypes.Class>> = {}
 ^^^^^
 source.luau storage.modifier.local.luau
      ^
      source.luau
       ^^^^^^^^^^^^^
       source.luau variable.other.readwrite.luau
                    ^
                    source.luau keyword.operator.type.luau
                     ^
                     source.luau
                      ^^^^^^^^^^
                      source.luau entity.name.type.luau
                                ^
                                source.luau keyword.operator.type.luau
                                 ^^^^^
                                 source.luau entity.name.type.luau
                                      ^
                                      source.luau keyword.operator.type.luau
                                       ^^^^^^^^
                                       source.luau entity.name.type.luau
                                               ^
                                               source.luau
                                                ^^^^^
                                                source.luau entity.name.type.luau
                                                     ^
                                                     source.luau keyword.operator.type.luau
                                                      ^
                                                      source.luau keyword.operator.type.luau
                                                       ^
                                                       source.luau
                                                        ^
                                                        source.luau keyword.operator.assignment.luau
                                                         ^
                                                         source.luau
                                                          ^
                                                          source.luau punctuation.table.begin.luau
                                                           ^
                                                           source.luau punctuation.table.end.luau
>
 ^
 source.luau
>local dump: ApiTypes.API
 ^^^^^
 source.luau storage.modifier.local.luau
      ^
      source.luau
       ^^^^
       source.luau variable.other.readwrite.luau
           ^
           source.luau keyword.operator.type.luau
            ^
            source.luau
             ^^^^^^^^
             source.luau entity.name.type.luau
                     ^
                     source.luau
                      ^^^
                      source.luau entity.name.type.luau
>
 ^
 source.luau
>local filterSecurity = Util.filterSecurity
 ^^^^^
 source.luau storage.modifier.local.luau
      ^
      source.luau
       ^^^^^^^^^^^^^^
       source.luau variable.other.readwrite.luau
                     ^
                     source.luau
                      ^
                      source.luau keyword.operator.assignment.luau
                       ^
                       source.luau
                        ^^^^
                        source.luau variable.other.readwrite.luau
                            ^
                            source.luau
                             ^^^^^^^^^^^^^^
                             source.luau variable.other.property.luau
>local filterTags = Util.filterTags
 ^^^^^
 source.luau storage.modifier.local.luau
      ^
      source.luau
       ^^^^^^^^^^
       source.luau variable.other.readwrite.luau
                 ^
                 source.luau
                  ^
                  source.luau keyword.operator.assignment.luau
                   ^
                   source.luau
                    ^^^^
                    source.luau variable.other.readwrite.luau
                        ^
                        source.luau
                         ^^^^^^^^^^
                         source.luau variable.other.property.luau
>local lookupify = Util.lookupify
 ^^^^^
 source.luau storage.modifier.local.luau
      ^
      source.luau
       ^^^^^^^^^
       source.luau variable.other.readwrite.luau
                ^
                source.luau
                 ^
                 source.luau keyword.operator.assignment.luau
                  ^
                  source.luau
                   ^^^^
                   source.luau variable.other.readwrite.luau
                       ^
                       source.luau
                        ^^^^^^^^^
                        source.luau variable.other.property.luau
>local cloneMember = Util.cloneMember
 ^^^^^
 source.luau storage.modifier.local.luau
      ^
      source.luau
       ^^^^^^^^^^^
       source.luau variable.other.readwrite.luau
                  ^
                  source.luau
                   ^
                   source.luau keyword.operator.assignment.luau
                    ^
                    source.luau
                     ^^^^
                     source.luau variable.other.readwrite.luau
                         ^
                         source.luau
                          ^^^^^^^^^^^
                          source.luau variable.other.property.luau
>
 ^
 source.luau
>
 ^
 source.luau
>local function tryAPI(): ()
 ^^^^^
 source.luau meta.function.luau storage.modifier.local.luau
      ^
      source.luau meta.function.luau
       ^^^^^^^^
       source.luau meta.function.luau keyword.control.luau
               ^
               source.luau meta.function.luau
                ^^^^^^
                source.luau meta.function.luau entity.name.function.luau
                      ^
                      source.luau meta.function.luau meta.parameter.luau punctuation.definition.parameters.begin.luau
                       ^
                       source.luau meta.function.luau meta.parameter.luau punctuation.definition.parameters.end.luau
                        ^
                        source.luau
                         ^
                         source.luau
                          ^
                          source.luau
                           ^
                           source.luau
>  if dump then return end
 ^^
 source.luau
   ^^
   source.luau keyword.control.luau
     ^
     source.luau
      ^^^^
      source.luau variable.other.readwrite.luau
          ^
          source.luau
           ^^^^
           source.luau keyword.control.luau
               ^
               source.luau
                ^^^^^^
                source.luau keyword.control.luau
                      ^
                      source.luau
                       ^^^
                       source.luau keyword.control.luau
>  
 ^^^
 source.luau
>  dump = FetchApi()
 ^^
 source.luau
   ^^^^
   source.luau variable.other.readwrite.luau
       ^
       source.luau
        ^
        source.luau keyword.operator.assignment.luau
         ^
         source.luau
          ^^^^^^^^
          source.luau entity.name.function.luau
                  ^
                  source.luau punctuation.arguments.begin.luau
                   ^
                   source.luau punctuation.arguments.end.luau
>  
 ^^^
 source.luau
>  if dump.Version ~= 1 then
 ^^
 source.luau
   ^^
   source.luau keyword.control.luau
     ^
     source.luau
      ^^^^
      source.luau variable.other.readwrite.luau
          ^
          source.luau
           ^^^^^^^
           source.luau variable.other.property.luau
                  ^
                  source.luau
                   ^^
                   source.luau keyword.operator.comparison.luau
                     ^
                     source.luau
                      ^
                      source.luau constant.numeric.decimal.luau
                       ^
                       source.luau
                        ^^^^
                        source.luau keyword.control.luau
>  	error(string.format(INVALID_DUMP_VERSION, dump.Version), 2)
 ^^^
 source.luau
    ^^^^^
    source.luau support.function.luau
         ^
         source.luau punctuation.arguments.begin.luau
          ^^^^^^^^^^^^^
          source.luau support.function.luau
                       ^
                       source.luau punctuation.arguments.begin.luau
                        ^^^^^^^^^^^^^^^^^^^^
                        source.luau variable.other.constant.luau
                                            ^
                                            source.luau punctuation.separator.arguments.luau
                                             ^
                                             source.luau
                                              ^^^^
                                              source.luau variable.other.readwrite.luau
                                                  ^
                                                  source.luau
                                                   ^^^^^^^
                                                   source.luau variable.other.property.luau
                                                          ^
                                                          source.luau punctuation.arguments.end.luau
                                                           ^
                                                           source.luau punctuation.separator.arguments.luau
                                                            ^
                                                            source.luau
                                                             ^
                                                             source.luau constant.numeric.decimal.luau
                                                              ^
                                                              source.luau punctuation.arguments.end.luau
>  end
 ^^
 source.luau
   ^^^
   source.luau keyword.control.luau
>  
 ^^^
 source.luau
>  for _, class in ipairs(dump.Classes) do
 ^^
 source.luau
   ^^^
   source.luau keyword.control.luau
      ^
      source.luau
       ^
       source.luau variable.parameter.luau
        ^^
        source.luau
          ^^^^^
          source.luau variable.parameter.luau
               ^
               source.luau
                ^^
                source.luau keyword.control.luau
                  ^
                  source.luau
                   ^^^^^^
                   source.luau support.function.luau
                         ^
                         source.luau punctuation.arguments.begin.luau
                          ^^^^
                          source.luau variable.other.readwrite.luau
                              ^
                              source.luau
                               ^^^^^^^
                               source.luau variable.other.property.luau
                                      ^
                                      source.luau punctuation.arguments.end.luau
                                       ^
                                       source.luau
                                        ^^
                                        source.luau keyword.control.luau
>  	classMap[class.Name] = class
 ^^^
 source.luau
    ^^^^^^^^
    source.luau variable.other.readwrite.luau
            ^
            source.luau
             ^^^^^
             source.luau variable.other.readwrite.luau
                  ^
                  source.luau
                   ^^^^
                   source.luau variable.other.property.luau
                       ^^
                       source.luau
                         ^
                         source.luau keyword.operator.assignment.luau
                          ^
                          source.luau
                           ^^^^^
                           source.luau variable.other.readwrite.luau
>  end
 ^^
 source.luau
   ^^^
   source.luau keyword.control.luau
>  
 ^^^
 source.luau
>  for className in pairs(classMap) do
 ^^
 source.luau
   ^^^
   source.luau keyword.control.luau
      ^
      source.luau
       ^^^^^^^^^
       source.luau variable.parameter.luau
                ^
                source.luau
                 ^^
                 source.luau keyword.control.luau
                   ^
                   source.luau
                    ^^^^^
                    source.luau support.function.luau
                         ^
                         source.luau punctuation.arguments.begin.luau
                          ^^^^^^^^
                          source.luau variable.other.readwrite.luau
                                  ^
                                  source.luau punctuation.arguments.end.luau
                                   ^
                                   source.luau
                                    ^^
                                    source.luau keyword.control.luau
>  	local classTables = {}
 ^^^
 source.luau
    ^^^^^
    source.luau storage.modifier.local.luau
         ^
         source.luau
          ^^^^^^^^^^^
          source.luau variable.other.readwrite.luau
                     ^
                     source.luau
                      ^
                      source.luau keyword.operator.assignment.luau
                       ^
                       source.luau
                        ^
                        source.luau punctuation.table.begin.luau
                         ^
                         source.luau punctuation.table.end.luau
>  	local root = className
 ^^^
 source.luau
    ^^^^^
    source.luau storage.modifier.local.luau
         ^
         source.luau
          ^^^^
          source.luau variable.other.readwrite.luau
              ^
              source.luau
               ^
               source.luau keyword.operator.assignment.luau
                ^
                source.luau
                 ^^^^^^^^^
                 source.luau variable.other.readwrite.luau
>  	while classMap[root] do
 ^^^
 source.luau
    ^^^^^
    source.luau keyword.control.luau
         ^
         source.luau
          ^^^^^^^^
          source.luau variable.other.readwrite.luau
                  ^
                  source.luau
                   ^^^^
                   source.luau variable.other.readwrite.luau
                       ^^
                       source.luau
                         ^^
                         source.luau keyword.control.luau
>  		table.insert(classTables, 1, classMap[root])
 ^^^^
 source.luau
     ^^^^^^^^^^^^
     source.luau support.function.luau
                 ^
                 source.luau punctuation.arguments.begin.luau
                  ^^^^^^^^^^^
                  source.luau variable.other.readwrite.luau
                             ^
                             source.luau punctuation.separator.arguments.luau
                              ^
                              source.luau
                               ^
                               source.luau constant.numeric.decimal.luau
                                ^
                                source.luau punctuation.separator.arguments.luau
                                 ^
                                 source.luau
                                  ^^^^^^^^
                                  source.luau variable.other.readwrite.luau
                                          ^
                                          source.luau
                                           ^^^^
                                           source.luau variable.other.readwrite.luau
                                               ^
                                               source.luau
                                                ^
                                                source.luau punctuation.arguments.end.luau
>  		root = classMap[root].Superclass
 ^^^^
 source.luau
     ^^^^
     source.luau variable.other.readwrite.luau
         ^
         source.luau
          ^
          source.luau keyword.operator.assignment.luau
           ^
           source.luau
            ^^^^^^^^
            source.luau variable.other.readwrite.luau
                    ^
                    source.luau
                     ^^^^
                     source.luau variable.other.readwrite.luau
                         ^^
                         source.luau
                           ^^^^^^^^^^
                           source.luau variable.other.property.luau
>  	end
 ^^^
 source.luau
    ^^^
    source.luau keyword.control.luau
>  	superClassMap[className] = classTables
 ^^^
 source.luau
    ^^^^^^^^^^^^^
    source.luau variable.other.readwrite.luau
                 ^
                 source.luau
                  ^^^^^^^^^
                  source.luau variable.other.readwrite.luau
                           ^^
                           source.luau
                             ^
                             source.luau keyword.operator.assignment.luau
                              ^
                              source.luau
                               ^^^^^^^^^^^
                               source.luau variable.other.readwrite.luau
>  end
 ^^
 source.luau
   ^^^
   source.luau keyword.control.luau
>end
 ^^^
 source.luau keyword.control.luau
>
 ^
 source.luau
>local API = {}
 ^^^^^
 source.luau storage.modifier.local.luau
      ^
      source.luau
       ^^^
       source.luau variable.other.constant.luau
          ^
          source.luau
           ^
           source.luau keyword.operator.assignment.luau
            ^
            source.luau
             ^
             source.luau punctuation.table.begin.luau
              ^
              source.luau punctuation.table.end.luau
>
 ^
 source.luau
>API.readyEvent = ReadyBindable.Event
 ^^^
 source.luau variable.other.constant.luau
    ^
    source.luau
     ^^^^^^^^^^
     source.luau variable.other.property.luau
               ^
               source.luau
                ^
                source.luau keyword.operator.assignment.luau
                 ^
                 source.luau
                  ^^^^^^^^^^^^^
                  source.luau variable.other.readwrite.luau
                               ^
                               source.luau
                                ^^^^^
                                source.luau variable.other.property.luau
>API.filters = Filters
 ^^^
 source.luau variable.other.constant.luau
    ^
    source.luau
     ^^^^^^^
     source.luau variable.other.property.luau
            ^
            source.luau
             ^
             source.luau keyword.operator.assignment.luau
              ^
              source.luau
               ^^^^^^^
               source.luau variable.other.readwrite.luau
>
 ^
 source.luau
>function API.isReady()
 ^^^^^^^^
 source.luau meta.function.luau keyword.control.luau
         ^
         source.luau meta.function.luau
          ^^^
          source.luau meta.function.luau entity.name.function.luau
             ^
             source.luau meta.function.luau
              ^^^^^^^
              source.luau meta.function.luau entity.name.function.luau
                     ^
                     source.luau meta.function.luau meta.parameter.luau punctuation.definition.parameters.begin.luau
                      ^
                      source.luau meta.function.luau meta.parameter.luau punctuation.definition.parameters.end.luau
>  return not not dump
 ^^
 source.luau
   ^^^^^^
   source.luau keyword.control.luau
         ^
         source.luau
          ^^^
          source.luau keyword.operator.logical.luau keyword.operator.wordlike.luau
             ^
             source.luau
              ^^^
              source.luau keyword.operator.logical.luau keyword.operator.wordlike.luau
                 ^
                 source.luau
                  ^^^^
                  source.luau variable.other.readwrite.luau
>end
 ^^^
 source.luau keyword.control.luau
>
 ^
 source.luau
>function API.getMembers(class: string, tagFilter: Array<string>?, securityFilter: Array<string>?): Dictionary<ApiTypes.Member>
 ^^^^^^^^
 source.luau meta.function.luau keyword.control.luau
         ^
         source.luau meta.function.luau
          ^^^
          source.luau meta.function.luau entity.name.function.luau
             ^
             source.luau meta.function.luau
              ^^^^^^^^^^
              source.luau meta.function.luau entity.name.function.luau
                        ^
                        source.luau meta.function.luau meta.parameter.luau punctuation.definition.parameters.begin.luau
                         ^^^^^
                         source.luau meta.function.luau meta.parameter.luau variable.parameter.function.luau
                              ^
                              source.luau meta.function.luau meta.parameter.luau keyword.operator.type.luau
                               ^
                               source.luau meta.function.luau meta.parameter.luau
                                ^^^^^^
                                source.luau meta.function.luau meta.parameter.luau support.type.primitive.luau
                                      ^
                                      source.luau meta.function.luau meta.parameter.luau punctuation.separator.arguments.luau
                                       ^
                                       source.luau meta.function.luau meta.parameter.luau
                                        ^^^^^^^^^
                                        source.luau meta.function.luau meta.parameter.luau variable.parameter.function.luau
                                                 ^
                                                 source.luau meta.function.luau meta.parameter.luau keyword.operator.type.luau
                                                  ^
                                                  source.luau meta.function.luau meta.parameter.luau
                                                   ^^^^^
                                                   source.luau meta.function.luau meta.parameter.luau entity.name.type.luau
                                                        ^
                                                        source.luau meta.function.luau meta.parameter.luau keyword.operator.type.luau
                                                         ^^^^^^
                                                         source.luau meta.function.luau meta.parameter.luau support.type.primitive.luau
                                                               ^
                                                               source.luau meta.function.luau meta.parameter.luau keyword.operator.type.luau
                                                                ^
                                                                source.luau meta.function.luau meta.parameter.luau keyword.operator.type.luau
                                                                 ^
                                                                 source.luau meta.function.luau meta.parameter.luau punctuation.separator.arguments.luau
                                                                  ^
                                                                  source.luau meta.function.luau meta.parameter.luau
                                                                   ^^^^^^^^^^^^^^
                                                                   source.luau meta.function.luau meta.parameter.luau variable.parameter.function.luau
                                                                                 ^
                                                                                 source.luau meta.function.luau meta.parameter.luau keyword.operator.type.luau
                                                                                  ^
                                                                                  source.luau meta.function.luau meta.parameter.luau
                                                                                   ^^^^^
                                                                                   source.luau meta.function.luau meta.parameter.luau entity.name.type.luau
                                                                                        ^
                                                                                        source.luau meta.function.luau meta.parameter.luau keyword.operator.type.luau
                                                                                         ^^^^^^
                                                                                         source.luau meta.function.luau meta.parameter.luau support.type.primitive.luau
                                                                                               ^
                                                                                               source.luau meta.function.luau meta.parameter.luau keyword.operator.type.luau
                                                                                                ^
                                                                                                source.luau meta.function.luau meta.parameter.luau keyword.operator.type.luau
                                                                                                 ^
                                                                                                 source.luau meta.function.luau meta.parameter.luau punctuation.definition.parameters.end.luau
                                                                                                  ^
                                                                                                  source.luau
                                                                                                   ^
                                                                                                   source.luau
                                                                                                    ^^^^^^^^^^
                                                                                                    source.luau entity.name.type.luau
                                                                                                              ^
                                                                                                              source.luau keyword.operator.type.luau
                                                                                                               ^^^^^^^^
                                                                                                               source.luau entity.name.type.luau
                                                                                                                       ^
                                                                                                                       source.luau
                                                                                                                        ^^^^^^
                                                                                                                        source.luau entity.name.type.luau
                                                                                                                              ^
                                                                                                                              source.luau keyword.operator.type.luau
>  if not dump then
 ^^
 source.luau
   ^^
   source.luau keyword.control.luau
     ^
     source.luau
      ^^^
      source.luau keyword.operator.logical.luau keyword.operator.wordlike.luau
         ^
         source.luau
          ^^^^
          source.luau variable.other.readwrite.luau
              ^
              source.luau
               ^^^^
               source.luau keyword.control.luau
>  	error(MODULE_NOT_READY_MESSAGE, 2)
 ^^^
 source.luau
    ^^^^^
    source.luau support.function.luau
         ^
         source.luau punctuation.arguments.begin.luau
          ^^^^^^^^^^^^^^^^^^^^^^^^
          source.luau variable.other.constant.luau
                                  ^
                                  source.luau punctuation.separator.arguments.luau
                                   ^
                                   source.luau
                                    ^
                                    source.luau constant.numeric.decimal.luau
                                     ^
                                     source.luau punctuation.arguments.end.luau
>  end
 ^^
 source.luau
   ^^^
   source.luau keyword.control.luau
>  
 ^^^
 source.luau
>  local superClasses: Array<ApiTypes.Class> = superClassMap[class]
 ^^
 source.luau
   ^^^^^
   source.luau storage.modifier.local.luau
        ^
        source.luau
         ^^^^^^^^^^^^
         source.luau variable.other.readwrite.luau
                     ^
                     source.luau keyword.operator.type.luau
                      ^
                      source.luau
                       ^^^^^
                       source.luau entity.name.type.luau
                            ^
                            source.luau keyword.operator.type.luau
                             ^^^^^^^^
                             source.luau entity.name.type.luau
                                     ^
                                     source.luau
                                      ^^^^^
                                      source.luau entity.name.type.luau
                                           ^
                                           source.luau keyword.operator.type.luau
                                            ^
                                            source.luau
                                             ^
                                             source.luau keyword.operator.assignment.luau
                                              ^
                                              source.luau
                                               ^^^^^^^^^^^^^
                                               source.luau variable.other.readwrite.luau
                                                            ^
                                                            source.luau
                                                             ^^^^^
                                                             source.luau variable.other.readwrite.luau
                                                                  ^^
                                                                  source.luau
>  if not superClasses then
 ^^
 source.luau
   ^^
   source.luau keyword.control.luau
     ^
     source.luau
      ^^^
      source.luau keyword.operator.logical.luau keyword.operator.wordlike.luau
         ^
         source.luau
          ^^^^^^^^^^^^
          source.luau variable.other.readwrite.luau
                      ^
                      source.luau
                       ^^^^
                       source.luau keyword.control.luau
>  	error(string.format(CLASS_NOT_REAL_MESSAGE, class), 2)
 ^^^
 source.luau
    ^^^^^
    source.luau support.function.luau
         ^
         source.luau punctuation.arguments.begin.luau
          ^^^^^^^^^^^^^
          source.luau support.function.luau
                       ^
                       source.luau punctuation.arguments.begin.luau
                        ^^^^^^^^^^^^^^^^^^^^^^
                        source.luau variable.other.constant.luau
                                              ^
                                              source.luau punctuation.separator.arguments.luau
                                               ^
                                               source.luau
                                                ^^^^^
                                                source.luau variable.other.readwrite.luau
                                                     ^
                                                     source.luau punctuation.arguments.end.luau
                                                      ^
                                                      source.luau punctuation.separator.arguments.luau
                                                       ^
                                                       source.luau
                                                        ^
                                                        source.luau constant.numeric.decimal.luau
                                                         ^
                                                         source.luau punctuation.arguments.end.luau
>  end
 ^^
 source.luau
   ^^^
   source.luau keyword.control.luau
>  
 ^^^
 source.luau
>  local tagLookup: Dictionary<boolean> = lookupify(tagFilter)
 ^^
 source.luau
   ^^^^^
   source.luau storage.modifier.local.luau
        ^
        source.luau
         ^^^^^^^^^
         source.luau variable.other.readwrite.luau
                  ^
                  source.luau keyword.operator.type.luau
                   ^
                   source.luau
                    ^^^^^^^^^^
                    source.luau entity.name.type.luau
                              ^
                              source.luau keyword.operator.type.luau
                               ^^^^^^^
                               source.luau support.type.primitive.luau
                                      ^
                                      source.luau keyword.operator.type.luau
                                       ^
                                       source.luau
                                        ^
                                        source.luau keyword.operator.assignment.luau
                                         ^
                                         source.luau
                                          ^^^^^^^^^
                                          source.luau entity.name.function.luau
                                                   ^
                                                   source.luau punctuation.arguments.begin.luau
                                                    ^^^^^^^^^
                                                    source.luau variable.other.readwrite.luau
                                                             ^
                                                             source.luau punctuation.arguments.end.luau
>  local securityLookup: Dictionary<boolean> = lookupify(securityFilter)
 ^^
 source.luau
   ^^^^^
   source.luau storage.modifier.local.luau
        ^
        source.luau
         ^^^^^^^^^^^^^^
         source.luau variable.other.readwrite.luau
                       ^
                       source.luau keyword.operator.type.luau
                        ^
                        source.luau
                         ^^^^^^^^^^
                         source.luau entity.name.type.luau
                                   ^
                                   source.luau keyword.operator.type.luau
                                    ^^^^^^^
                                    source.luau support.type.primitive.luau
                                           ^
                                           source.luau keyword.operator.type.luau
                                            ^
                                            source.luau
                                             ^
                                             source.luau keyword.operator.assignment.luau
                                              ^
                                              source.luau
                                               ^^^^^^^^^
                                               source.luau entity.name.function.luau
                                                        ^
                                                        source.luau punctuation.arguments.begin.luau
                                                         ^^^^^^^^^^^^^^
                                                         source.luau variable.other.readwrite.luau
                                                                       ^
                                                                       source.luau punctuation.arguments.end.luau
>  
 ^^^
 source.luau
>  local memberList: Dictionary<ApiTypes.Member> = {}
 ^^
 source.luau
   ^^^^^
   source.luau storage.modifier.local.luau
        ^
        source.luau
         ^^^^^^^^^^
         source.luau variable.other.readwrite.luau
                   ^
                   source.luau keyword.operator.type.luau
                    ^
                    source.luau
                     ^^^^^^^^^^
                     source.luau entity.name.type.luau
                               ^
                               source.luau keyword.operator.type.luau
                                ^^^^^^^^
                                source.luau entity.name.type.luau
                                        ^
                                        source.luau
                                         ^^^^^^
                                         source.luau entity.name.type.luau
                                               ^
                                               source.luau keyword.operator.type.luau
                                                ^
                                                source.luau
                                                 ^
                                                 source.luau keyword.operator.assignment.luau
                                                  ^
                                                  source.luau
                                                   ^
                                                   source.luau punctuation.table.begin.luau
                                                    ^
                                                    source.luau punctuation.table.end.luau
>  for _, class in ipairs(superClasses) do
 ^^
 source.luau
   ^^^
   source.luau keyword.control.luau
      ^
      source.luau
       ^
       source.luau variable.parameter.luau
        ^^
        source.luau
          ^^^^^
          source.luau variable.parameter.luau
               ^
               source.luau
                ^^
                source.luau keyword.control.luau
                  ^
                  source.luau
                   ^^^^^^
                   source.luau support.function.luau
                         ^
                         source.luau punctuation.arguments.begin.luau
                          ^^^^^^^^^^^^
                          source.luau variable.other.readwrite.luau
                                      ^
                                      source.luau punctuation.arguments.end.luau
                                       ^
                                       source.luau
                                        ^^
                                        source.luau keyword.control.luau
>  	for _, v in ipairs(class.Members) do
 ^^^
 source.luau
    ^^^
    source.luau keyword.control.luau
       ^
       source.luau
        ^
        source.luau variable.parameter.luau
         ^^
         source.luau
           ^
           source.luau variable.parameter.luau
            ^
            source.luau
             ^^
             source.luau keyword.control.luau
               ^
               source.luau
                ^^^^^^
                source.luau support.function.luau
                      ^
                      source.luau punctuation.arguments.begin.luau
                       ^^^^^
                       source.luau variable.other.readwrite.luau
                            ^
                            source.luau
                             ^^^^^^^
                             source.luau variable.other.property.luau
                                    ^
                                    source.luau punctuation.arguments.end.luau
                                     ^
                                     source.luau
                                      ^^
                                      source.luau keyword.control.luau
>  		if filterSecurity(v.Security, securityLookup) then continue end
 ^^^^
 source.luau
     ^^
     source.luau keyword.control.luau
       ^
       source.luau
        ^^^^^^^^^^^^^^
        source.luau entity.name.function.luau
                      ^
                      source.luau punctuation.arguments.begin.luau
                       ^
                       source.luau variable.other.readwrite.luau
                        ^
                        source.luau
                         ^^^^^^^^
                         source.luau variable.other.property.luau
                                 ^
                                 source.luau punctuation.separator.arguments.luau
                                  ^
                                  source.luau
                                   ^^^^^^^^^^^^^^
                                   source.luau variable.other.readwrite.luau
                                                 ^
                                                 source.luau punctuation.arguments.end.luau
                                                  ^
                                                  source.luau
                                                   ^^^^
                                                   source.luau keyword.control.luau
                                                       ^
                                                       source.luau
                                                        ^^^^^^^^
                                                        source.luau keyword.control.luau
                                                                ^
                                                                source.luau
                                                                 ^^^
                                                                 source.luau keyword.control.luau
>  		if filterTags(v.Tags, tagLookup) then continue end
 ^^^^
 source.luau
     ^^
     source.luau keyword.control.luau
       ^
       source.luau
        ^^^^^^^^^^
        source.luau entity.name.function.luau
                  ^
                  source.luau punctuation.arguments.begin.luau
                   ^
                   source.luau variable.other.readwrite.luau
                    ^
                    source.luau
                     ^^^^
                     source.luau variable.other.property.luau
                         ^
                         source.luau punctuation.separator.arguments.luau
                          ^
                          source.luau
                           ^^^^^^^^^
                           source.luau variable.other.readwrite.luau
                                    ^
                                    source.luau punctuation.arguments.end.luau
                                     ^
                                     source.luau
                                      ^^^^
                                      source.luau keyword.control.luau
                                          ^
                                          source.luau
                                           ^^^^^^^^
                                           source.luau keyword.control.luau
                                                   ^
                                                   source.luau
                                                    ^^^
                                                    source.luau keyword.control.luau
>  		
 ^^^^^
 source.luau
>  		memberList[v.Name] = cloneMember(v)
 ^^^^
 source.luau
     ^^^^^^^^^^
     source.luau variable.other.readwrite.luau
               ^
               source.luau
                ^
                source.luau variable.other.readwrite.luau
                 ^
                 source.luau
                  ^^^^
                  source.luau variable.other.property.luau
                      ^^
                      source.luau
                        ^
                        source.luau keyword.operator.assignment.luau
                         ^
                         source.luau
                          ^^^^^^^^^^^
                          source.luau entity.name.function.luau
                                     ^
                                     source.luau punctuation.arguments.begin.luau
                                      ^
                                      source.luau variable.other.readwrite.luau
                                       ^
                                       source.luau punctuation.arguments.end.luau
>  	end
 ^^^
 source.luau
    ^^^
    source.luau keyword.control.luau
>  end
 ^^
 source.luau
   ^^^
   source.luau keyword.control.luau
>  
 ^^^
 source.luau
>  return memberList
 ^^
 source.luau
   ^^^^^^
   source.luau keyword.control.luau
         ^
         source.luau
          ^^^^^^^^^^
          source.luau variable.other.readwrite.luau
>end
 ^^^
 source.luau keyword.control.luau
>
 ^
 source.luau
>function API.getProperties(class: string, tagFilter: Array<string>?, securityFilter: Array<string>?): Dictionary<ApiTypes.Property>
 ^^^^^^^^
 source.luau meta.function.luau keyword.control.luau
         ^
         source.luau meta.function.luau
          ^^^
          source.luau meta.function.luau entity.name.function.luau
             ^
             source.luau meta.function.luau
              ^^^^^^^^^^^^^
              source.luau meta.function.luau entity.name.function.luau
                           ^
                           source.luau meta.function.luau meta.parameter.luau punctuation.definition.parameters.begin.luau
                            ^^^^^
                            source.luau meta.function.luau meta.parameter.luau variable.parameter.function.luau
                                 ^
                                 source.luau meta.function.luau meta.parameter.luau keyword.operator.type.luau
                                  ^
                                  source.luau meta.function.luau meta.parameter.luau
                                   ^^^^^^
                                   source.luau meta.function.luau meta.parameter.luau support.type.primitive.luau
                                         ^
                                         source.luau meta.function.luau meta.parameter.luau punctuation.separator.arguments.luau
                                          ^
                                          source.luau meta.function.luau meta.parameter.luau
                                           ^^^^^^^^^
                                           source.luau meta.function.luau meta.parameter.luau variable.parameter.function.luau
                                                    ^
                                                    source.luau meta.function.luau meta.parameter.luau keyword.operator.type.luau
                                                     ^
                                                     source.luau meta.function.luau meta.parameter.luau
                                                      ^^^^^
                                                      source.luau meta.function.luau meta.parameter.luau entity.name.type.luau
                                                           ^
                                                           source.luau meta.function.luau meta.parameter.luau keyword.operator.type.luau
                                                            ^^^^^^
                                                            source.luau meta.function.luau meta.parameter.luau support.type.primitive.luau
                                                                  ^
                                                                  source.luau meta.function.luau meta.parameter.luau keyword.operator.type.luau
                                                                   ^
                                                                   source.luau meta.function.luau meta.parameter.luau keyword.operator.type.luau
                                                                    ^
                                                                    source.luau meta.function.luau meta.parameter.luau punctuation.separator.arguments.luau
                                                                     ^
                                                                     source.luau meta.function.luau meta.parameter.luau
                                                                      ^^^^^^^^^^^^^^
                                                                      source.luau meta.function.luau meta.parameter.luau variable.parameter.function.luau
                                                                                    ^
                                                                                    source.luau meta.function.luau meta.parameter.luau keyword.operator.type.luau
                                                                                     ^
                                                                                     source.luau meta.function.luau meta.parameter.luau
                                                                                      ^^^^^
                                                                                      source.luau meta.function.luau meta.parameter.luau entity.name.type.luau
                                                                                           ^
                                                                                           source.luau meta.function.luau meta.parameter.luau keyword.operator.type.luau
                                                                                            ^^^^^^
                                                                                            source.luau meta.function.luau meta.parameter.luau support.type.primitive.luau
                                                                                                  ^
                                                                                                  source.luau meta.function.luau meta.parameter.luau keyword.operator.type.luau
                                                                                                   ^
                                                                                                   source.luau meta.function.luau meta.parameter.luau keyword.operator.type.luau
                                                                                                    ^
                                                                                                    source.luau meta.function.luau meta.parameter.luau punctuation.definition.parameters.end.luau
                                                                                                     ^
                                                                                                     source.luau
                                                                                                      ^
                                                                                                      source.luau
                                                                                                       ^^^^^^^^^^
                                                                                                       source.luau entity.name.type.luau
                                                                                                                 ^
                                                                                                                 source.luau keyword.operator.type.luau
                                                                                                                  ^^^^^^^^
                                                                                                                  source.luau entity.name.type.luau
                                                                                                                          ^
                                                                                                                          source.luau
                                                                                                                           ^^^^^^^^
                                                                                                                           source.luau entity.name.type.luau
                                                                                                                                   ^
                                                                                                                                   source.luau keyword.operator.type.luau
>  if not dump then
 ^^
 source.luau
   ^^
   source.luau keyword.control.luau
     ^
     source.luau
      ^^^
      source.luau keyword.operator.logical.luau keyword.operator.wordlike.luau
         ^
         source.luau
          ^^^^
          source.luau variable.other.readwrite.luau
              ^
              source.luau
               ^^^^
               source.luau keyword.control.luau
>  	error(MODULE_NOT_READY_MESSAGE, 2)
 ^^^
 source.luau
    ^^^^^
    source.luau support.function.luau
         ^
         source.luau punctuation.arguments.begin.luau
          ^^^^^^^^^^^^^^^^^^^^^^^^
          source.luau variable.other.constant.luau
                                  ^
                                  source.luau punctuation.separator.arguments.luau
                                   ^
                                   source.luau
                                    ^
                                    source.luau constant.numeric.decimal.luau
                                     ^
                                     source.luau punctuation.arguments.end.luau
>  end
 ^^
 source.luau
   ^^^
   source.luau keyword.control.luau
>  
 ^^^
 source.luau
>  local superClasses: Array<ApiTypes.Class> = superClassMap[class]
 ^^
 source.luau
   ^^^^^
   source.luau storage.modifier.local.luau
        ^
        source.luau
         ^^^^^^^^^^^^
         source.luau variable.other.readwrite.luau
                     ^
                     source.luau keyword.operator.type.luau
                      ^
                      source.luau
                       ^^^^^
                       source.luau entity.name.type.luau
                            ^
                            source.luau keyword.operator.type.luau
                             ^^^^^^^^
                             source.luau entity.name.type.luau
                                     ^
                                     source.luau
                                      ^^^^^
                                      source.luau entity.name.type.luau
                                           ^
                                           source.luau keyword.operator.type.luau
                                            ^
                                            source.luau
                                             ^
                                             source.luau keyword.operator.assignment.luau
                                              ^
                                              source.luau
                                               ^^^^^^^^^^^^^
                                               source.luau variable.other.readwrite.luau
                                                            ^
                                                            source.luau
                                                             ^^^^^
                                                             source.luau variable.other.readwrite.luau
                                                                  ^^
                                                                  source.luau
>  if not superClasses then
 ^^
 source.luau
   ^^
   source.luau keyword.control.luau
     ^
     source.luau
      ^^^
      source.luau keyword.operator.logical.luau keyword.operator.wordlike.luau
         ^
         source.luau
          ^^^^^^^^^^^^
          source.luau variable.other.readwrite.luau
                      ^
                      source.luau
                       ^^^^
                       source.luau keyword.control.luau
>  	error(string.format(CLASS_NOT_REAL_MESSAGE, class), 2)
 ^^^
 source.luau
    ^^^^^
    source.luau support.function.luau
         ^
         source.luau punctuation.arguments.begin.luau
          ^^^^^^^^^^^^^
          source.luau support.function.luau
                       ^
                       source.luau punctuation.arguments.begin.luau
                        ^^^^^^^^^^^^^^^^^^^^^^
                        source.luau variable.other.constant.luau
                                              ^
                                              source.luau punctuation.separator.arguments.luau
                                               ^
                                               source.luau
                                                ^^^^^
                                                source.luau variable.other.readwrite.luau
                                                     ^
                                                     source.luau punctuation.arguments.end.luau
                                                      ^
                                                      source.luau punctuation.separator.arguments.luau
                                                       ^
                                                       source.luau
                                                        ^
                                                        source.luau constant.numeric.decimal.luau
                                                         ^
                                                         source.luau punctuation.arguments.end.luau
>  end
 ^^
 source.luau
   ^^^
   source.luau keyword.control.luau
>  
 ^^^
 source.luau
>  local tagLookup: Dictionary<boolean> = lookupify(tagFilter)
 ^^
 source.luau
   ^^^^^
   source.luau storage.modifier.local.luau
        ^
        source.luau
         ^^^^^^^^^
         source.luau variable.other.readwrite.luau
                  ^
                  source.luau keyword.operator.type.luau
                   ^
                   source.luau
                    ^^^^^^^^^^
                    source.luau entity.name.type.luau
                              ^
                              source.luau keyword.operator.type.luau
                               ^^^^^^^
                               source.luau support.type.primitive.luau
                                      ^
                                      source.luau keyword.operator.type.luau
                                       ^
                                       source.luau
                                        ^
                                        source.luau keyword.operator.assignment.luau
                                         ^
                                         source.luau
                                          ^^^^^^^^^
                                          source.luau entity.name.function.luau
                                                   ^
                                                   source.luau punctuation.arguments.begin.luau
                                                    ^^^^^^^^^
                                                    source.luau variable.other.readwrite.luau
                                                             ^
                                                             source.luau punctuation.arguments.end.luau
>  local securityLookup: Dictionary<boolean> = lookupify(securityFilter)
 ^^
 source.luau
   ^^^^^
   source.luau storage.modifier.local.luau
        ^
        source.luau
         ^^^^^^^^^^^^^^
         source.luau variable.other.readwrite.luau
                       ^
                       source.luau keyword.operator.type.luau
                        ^
                        source.luau
                         ^^^^^^^^^^
                         source.luau entity.name.type.luau
                                   ^
                                   source.luau keyword.operator.type.luau
                                    ^^^^^^^
                                    source.luau support.type.primitive.luau
                                           ^
                                           source.luau keyword.operator.type.luau
                                            ^
                                            source.luau
                                             ^
                                             source.luau keyword.operator.assignment.luau
                                              ^
                                              source.luau
                                               ^^^^^^^^^
                                               source.luau entity.name.function.luau
                                                        ^
                                                        source.luau punctuation.arguments.begin.luau
                                                         ^^^^^^^^^^^^^^
                                                         source.luau variable.other.readwrite.luau
                                                                       ^
                                                                       source.luau punctuation.arguments.end.luau
>  
 ^^^
 source.luau
>  local memberList: Dictionary<ApiTypes.Property> = {}
 ^^
 source.luau
   ^^^^^
   source.luau storage.modifier.local.luau
        ^
        source.luau
         ^^^^^^^^^^
         source.luau variable.other.readwrite.luau
                   ^
                   source.luau keyword.operator.type.luau
                    ^
                    source.luau
                     ^^^^^^^^^^
                     source.luau entity.name.type.luau
                               ^
                               source.luau keyword.operator.type.luau
                                ^^^^^^^^
                                source.luau entity.name.type.luau
                                        ^
                                        source.luau
                                         ^^^^^^^^
                                         source.luau entity.name.type.luau
                                                 ^
                                                 source.luau keyword.operator.type.luau
                                                  ^
                                                  source.luau
                                                   ^
                                                   source.luau keyword.operator.assignment.luau
                                                    ^
                                                    source.luau
                                                     ^
                                                     source.luau punctuation.table.begin.luau
                                                      ^
                                                      source.luau punctuation.table.end.luau
>  for _, class in ipairs(superClasses) do
 ^^
 source.luau
   ^^^
   source.luau keyword.control.luau
      ^
      source.luau
       ^
       source.luau variable.parameter.luau
        ^^
        source.luau
          ^^^^^
          source.luau variable.parameter.luau
               ^
               source.luau
                ^^
                source.luau keyword.control.luau
                  ^
                  source.luau
                   ^^^^^^
                   source.luau support.function.luau
                         ^
                         source.luau punctuation.arguments.begin.luau
                          ^^^^^^^^^^^^
                          source.luau variable.other.readwrite.luau
                                      ^
                                      source.luau punctuation.arguments.end.luau
                                       ^
                                       source.luau
                                        ^^
                                        source.luau keyword.control.luau
>  	for _, v in ipairs(class.Members) do
 ^^^
 source.luau
    ^^^
    source.luau keyword.control.luau
       ^
       source.luau
        ^
        source.luau variable.parameter.luau
         ^^
         source.luau
           ^
           source.luau variable.parameter.luau
            ^
            source.luau
             ^^
             source.luau keyword.control.luau
               ^
               source.luau
                ^^^^^^
                source.luau support.function.luau
                      ^
                      source.luau punctuation.arguments.begin.luau
                       ^^^^^
                       source.luau variable.other.readwrite.luau
                            ^
                            source.luau
                             ^^^^^^^
                             source.luau variable.other.property.luau
                                    ^
                                    source.luau punctuation.arguments.end.luau
                                     ^
                                     source.luau
                                      ^^
                                      source.luau keyword.control.luau
>  		if v.MemberType ~= "Property" then continue end
 ^^^^
 source.luau
     ^^
     source.luau keyword.control.luau
       ^
       source.luau
        ^
        source.luau variable.other.readwrite.luau
         ^
         source.luau
          ^^^^^^^^^^
          source.luau variable.other.property.luau
                    ^
                    source.luau
                     ^^
                     source.luau keyword.operator.comparison.luau
                       ^
                       source.luau
                        ^
                        source.luau string.quoted.double.luau
                         ^^^^^^^^
                         source.luau string.quoted.double.luau
                                 ^
                                 source.luau string.quoted.double.luau
                                  ^
                                  source.luau
                                   ^^^^
                                   source.luau keyword.control.luau
                                       ^
                                       source.luau
                                        ^^^^^^^^
                                        source.luau keyword.control.luau
                                                ^
                                                source.luau
                                                 ^^^
                                                 source.luau keyword.control.luau
>  		if filterSecurity(v.Security, securityLookup) then continue end
 ^^^^
 source.luau
     ^^
     source.luau keyword.control.luau
       ^
       source.luau
        ^^^^^^^^^^^^^^
        source.luau entity.name.function.luau
                      ^
                      source.luau punctuation.arguments.begin.luau
                       ^
                       source.luau variable.other.readwrite.luau
                        ^
                        source.luau
                         ^^^^^^^^
                         source.luau variable.other.property.luau
                                 ^
                                 source.luau punctuation.separator.arguments.luau
                                  ^
                                  source.luau
                                   ^^^^^^^^^^^^^^
                                   source.luau variable.other.readwrite.luau
                                                 ^
                                                 source.luau punctuation.arguments.end.luau
                                                  ^
                                                  source.luau
                                                   ^^^^
                                                   source.luau keyword.control.luau
                                                       ^
                                                       source.luau
                                                        ^^^^^^^^
                                                        source.luau keyword.control.luau
                                                                ^
                                                                source.luau
                                                                 ^^^
                                                                 source.luau keyword.control.luau
>  		if filterTags(v.Tags, tagLookup) then continue end
 ^^^^
 source.luau
     ^^
     source.luau keyword.control.luau
       ^
       source.luau
        ^^^^^^^^^^
        source.luau entity.name.function.luau
                  ^
                  source.luau punctuation.arguments.begin.luau
                   ^
                   source.luau variable.other.readwrite.luau
                    ^
                    source.luau
                     ^^^^
                     source.luau variable.other.property.luau
                         ^
                         source.luau punctuation.separator.arguments.luau
                          ^
                          source.luau
                           ^^^^^^^^^
                           source.luau variable.other.readwrite.luau
                                    ^
                                    source.luau punctuation.arguments.end.luau
                                     ^
                                     source.luau
                                      ^^^^
                                      source.luau keyword.control.luau
                                          ^
                                          source.luau
                                           ^^^^^^^^
                                           source.luau keyword.control.luau
                                                   ^
                                                   source.luau
                                                    ^^^
                                                    source.luau keyword.control.luau
>  		
 ^^^^^
 source.luau
>  		memberList[v.Name] = cloneMember(v)
 ^^^^
 source.luau
     ^^^^^^^^^^
     source.luau variable.other.readwrite.luau
               ^
               source.luau
                ^
                source.luau variable.other.readwrite.luau
                 ^
                 source.luau
                  ^^^^
                  source.luau variable.other.property.luau
                      ^^
                      source.luau
                        ^
                        source.luau keyword.operator.assignment.luau
                         ^
                         source.luau
                          ^^^^^^^^^^^
                          source.luau entity.name.function.luau
                                     ^
                                     source.luau punctuation.arguments.begin.luau
                                      ^
                                      source.luau variable.other.readwrite.luau
                                       ^
                                       source.luau punctuation.arguments.end.luau
>  	end
 ^^^
 source.luau
    ^^^
    source.luau keyword.control.luau
>  end
 ^^
 source.luau
   ^^^
   source.luau keyword.control.luau
>  
 ^^^
 source.luau
>  return memberList
 ^^
 source.luau
   ^^^^^^
   source.luau keyword.control.luau
         ^
         source.luau
          ^^^^^^^^^^
          source.luau variable.other.readwrite.luau
>end
 ^^^
 source.luau keyword.control.luau
>
 ^
 source.luau
>
 ^
 source.luau
>function API.getFunctions(class: string, tagFilter: Array<string>?, securityFilter: Array<string>?): Dictionary<ApiTypes.Function>
 ^^^^^^^^
 source.luau meta.function.luau keyword.control.luau
         ^
         source.luau meta.function.luau
          ^^^
          source.luau meta.function.luau entity.name.function.luau
             ^
             source.luau meta.function.luau
              ^^^^^^^^^^^^
              source.luau meta.function.luau entity.name.function.luau
                          ^
                          source.luau meta.function.luau meta.parameter.luau punctuation.definition.parameters.begin.luau
                           ^^^^^
                           source.luau meta.function.luau meta.parameter.luau variable.parameter.function.luau
                                ^
                                source.luau meta.function.luau meta.parameter.luau keyword.operator.type.luau
                                 ^
                                 source.luau meta.function.luau meta.parameter.luau
                                  ^^^^^^
                                  source.luau meta.function.luau meta.parameter.luau support.type.primitive.luau
                                        ^
                                        source.luau meta.function.luau meta.parameter.luau punctuation.separator.arguments.luau
                                         ^
                                         source.luau meta.function.luau meta.parameter.luau
                                          ^^^^^^^^^
                                          source.luau meta.function.luau meta.parameter.luau variable.parameter.function.luau
                                                   ^
                                                   source.luau meta.function.luau meta.parameter.luau keyword.operator.type.luau
                                                    ^
                                                    source.luau meta.function.luau meta.parameter.luau
                                                     ^^^^^
                                                     source.luau meta.function.luau meta.parameter.luau entity.name.type.luau
                                                          ^
                                                          source.luau meta.function.luau meta.parameter.luau keyword.operator.type.luau
                                                           ^^^^^^
                                                           source.luau meta.function.luau meta.parameter.luau support.type.primitive.luau
                                                                 ^
                                                                 source.luau meta.function.luau meta.parameter.luau keyword.operator.type.luau
                                                                  ^
                                                                  source.luau meta.function.luau meta.parameter.luau keyword.operator.type.luau
                                                                   ^
                                                                   source.luau meta.function.luau meta.parameter.luau punctuation.separator.arguments.luau
                                                                    ^
                                                                    source.luau meta.function.luau meta.parameter.luau
                                                                     ^^^^^^^^^^^^^^
                                                                     source.luau meta.function.luau meta.parameter.luau variable.parameter.function.luau
                                                                                   ^
                                                                                   source.luau meta.function.luau meta.parameter.luau keyword.operator.type.luau
                                                                                    ^
                                                                                    source.luau meta.function.luau meta.parameter.luau
                                                                                     ^^^^^
                                                                                     source.luau meta.function.luau meta.parameter.luau entity.name.type.luau
                                                                                          ^
                                                                                          source.luau meta.function.luau meta.parameter.luau keyword.operator.type.luau
                                                                                           ^^^^^^
                                                                                           source.luau meta.function.luau meta.parameter.luau support.type.primitive.luau
                                                                                                 ^
                                                                                                 source.luau meta.function.luau meta.parameter.luau keyword.operator.type.luau
                                                                                                  ^
                                                                                                  source.luau meta.function.luau meta.parameter.luau keyword.operator.type.luau
                                                                                                   ^
                                                                                                   source.luau meta.function.luau meta.parameter.luau punctuation.definition.parameters.end.luau
                                                                                                    ^
                                                                                                    source.luau
                                                                                                     ^
                                                                                                     source.luau
                                                                                                      ^^^^^^^^^^
                                                                                                      source.luau entity.name.type.luau
                                                                                                                ^
                                                                                                                source.luau keyword.operator.type.luau
                                                                                                                 ^^^^^^^^
                                                                                                                 source.luau entity.name.type.luau
                                                                                                                         ^
                                                                                                                         source.luau
                                                                                                                          ^^^^^^^^
                                                                                                                          source.luau entity.name.type.luau
                                                                                                                                  ^
                                                                                                                                  source.luau keyword.operator.type.luau
>  if not dump then
 ^^
 source.luau
   ^^
   source.luau keyword.control.luau
     ^
     source.luau
      ^^^
      source.luau keyword.operator.logical.luau keyword.operator.wordlike.luau
         ^
         source.luau
          ^^^^
          source.luau variable.other.readwrite.luau
              ^
              source.luau
               ^^^^
               source.luau keyword.control.luau
>  	error(MODULE_NOT_READY_MESSAGE, 2)
 ^^^
 source.luau
    ^^^^^
    source.luau support.function.luau
         ^
         source.luau punctuation.arguments.begin.luau
          ^^^^^^^^^^^^^^^^^^^^^^^^
          source.luau variable.other.constant.luau
                                  ^
                                  source.luau punctuation.separator.arguments.luau
                                   ^
                                   source.luau
                                    ^
                                    source.luau constant.numeric.decimal.luau
                                     ^
                                     source.luau punctuation.arguments.end.luau
>  end
 ^^
 source.luau
   ^^^
   source.luau keyword.control.luau
>  
 ^^^
 source.luau
>  local superClasses: Array<ApiTypes.Class> = superClassMap[class]
 ^^
 source.luau
   ^^^^^
   source.luau storage.modifier.local.luau
        ^
        source.luau
         ^^^^^^^^^^^^
         source.luau variable.other.readwrite.luau
                     ^
                     source.luau keyword.operator.type.luau
                      ^
                      source.luau
                       ^^^^^
                       source.luau entity.name.type.luau
                            ^
                            source.luau keyword.operator.type.luau
                             ^^^^^^^^
                             source.luau entity.name.type.luau
                                     ^
                                     source.luau
                                      ^^^^^
                                      source.luau entity.name.type.luau
                                           ^
                                           source.luau keyword.operator.type.luau
                                            ^
                                            source.luau
                                             ^
                                             source.luau keyword.operator.assignment.luau
                                              ^
                                              source.luau
                                               ^^^^^^^^^^^^^
                                               source.luau variable.other.readwrite.luau
                                                            ^
                                                            source.luau
                                                             ^^^^^
                                                             source.luau variable.other.readwrite.luau
                                                                  ^^
                                                                  source.luau
>  if not superClasses then
 ^^
 source.luau
   ^^
   source.luau keyword.control.luau
     ^
     source.luau
      ^^^
      source.luau keyword.operator.logical.luau keyword.operator.wordlike.luau
         ^
         source.luau
          ^^^^^^^^^^^^
          source.luau variable.other.readwrite.luau
                      ^
                      source.luau
                       ^^^^
                       source.luau keyword.control.luau
>  	error(string.format(CLASS_NOT_REAL_MESSAGE, class), 2)
 ^^^
 source.luau
    ^^^^^
    source.luau support.function.luau
         ^
         source.luau punctuation.arguments.begin.luau
          ^^^^^^^^^^^^^
          source.luau support.function.luau
                       ^
                       source.luau punctuation.arguments.begin.luau
                        ^^^^^^^^^^^^^^^^^^^^^^
                        source.luau variable.other.constant.luau
                                              ^
                                              source.luau punctuation.separator.arguments.luau
                                               ^
                                               source.luau
                                                ^^^^^
                                                source.luau variable.other.readwrite.luau
                                                     ^
                                                     source.luau punctuation.arguments.end.luau
                                                      ^
                                                      source.luau punctuation.separator.arguments.luau
                                                       ^
                                                       source.luau
                                                        ^
                                                        source.luau constant.numeric.decimal.luau
                                                         ^
                                                         source.luau punctuation.arguments.end.luau
>  end
 ^^
 source.luau
   ^^^
   source.luau keyword.control.luau
>  
 ^^^
 source.luau
>  local tagLookup: Dictionary<boolean> = lookupify(tagFilter)
 ^^
 source.luau
   ^^^^^
   source.luau storage.modifier.local.luau
        ^
        source.luau
         ^^^^^^^^^
         source.luau variable.other.readwrite.luau
                  ^
                  source.luau keyword.operator.type.luau
                   ^
                   source.luau
                    ^^^^^^^^^^
                    source.luau entity.name.type.luau
                              ^
                              source.luau keyword.operator.type.luau
                               ^^^^^^^
                               source.luau support.type.primitive.luau
                                      ^
                                      source.luau keyword.operator.type.luau
                                       ^
                                       source.luau
                                        ^
                                        source.luau keyword.operator.assignment.luau
                                         ^
                                         source.luau
                                          ^^^^^^^^^
                                          source.luau entity.name.function.luau
                                                   ^
                                                   source.luau punctuation.arguments.begin.luau
                                                    ^^^^^^^^^
                                                    source.luau variable.other.readwrite.luau
                                                             ^
                                                             source.luau punctuation.arguments.end.luau
>  local securityLookup: Dictionary<boolean> = lookupify(securityFilter)
 ^^
 source.luau
   ^^^^^
   source.luau storage.modifier.local.luau
        ^
        source.luau
         ^^^^^^^^^^^^^^
         source.luau variable.other.readwrite.luau
                       ^
                       source.luau keyword.operator.type.luau
                        ^
                        source.luau
                         ^^^^^^^^^^
                         source.luau entity.name.type.luau
                                   ^
                                   source.luau keyword.operator.type.luau
                                    ^^^^^^^
                                    source.luau support.type.primitive.luau
                                           ^
                                           source.luau keyword.operator.type.luau
                                            ^
                                            source.luau
                                             ^
                                             source.luau keyword.operator.assignment.luau
                                              ^
                                              source.luau
                                               ^^^^^^^^^
                                               source.luau entity.name.function.luau
                                                        ^
                                                        source.luau punctuation.arguments.begin.luau
                                                         ^^^^^^^^^^^^^^
                                                         source.luau variable.other.readwrite.luau
                                                                       ^
                                                                       source.luau punctuation.arguments.end.luau
>  
 ^^^
 source.luau
>  local memberList: Dictionary<ApiTypes.Function> = {}
 ^^
 source.luau
   ^^^^^
   source.luau storage.modifier.local.luau
        ^
        source.luau
         ^^^^^^^^^^
         source.luau variable.other.readwrite.luau
                   ^
                   source.luau keyword.operator.type.luau
                    ^
                    source.luau
                     ^^^^^^^^^^
                     source.luau entity.name.type.luau
                               ^
                               source.luau keyword.operator.type.luau
                                ^^^^^^^^
                                source.luau entity.name.type.luau
                                        ^
                                        source.luau
                                         ^^^^^^^^
                                         source.luau entity.name.type.luau
                                                 ^
                                                 source.luau keyword.operator.type.luau
                                                  ^
                                                  source.luau
                                                   ^
                                                   source.luau keyword.operator.assignment.luau
                                                    ^
                                                    source.luau
                                                     ^
                                                     source.luau punctuation.table.begin.luau
                                                      ^
                                                      source.luau punctuation.table.end.luau
>  for _, class in ipairs(superClasses) do
 ^^
 source.luau
   ^^^
   source.luau keyword.control.luau
      ^
      source.luau
       ^
       source.luau variable.parameter.luau
        ^^
        source.luau
          ^^^^^
          source.luau variable.parameter.luau
               ^
               source.luau
                ^^
                source.luau keyword.control.luau
                  ^
                  source.luau
                   ^^^^^^
                   source.luau support.function.luau
                         ^
                         source.luau punctuation.arguments.begin.luau
                          ^^^^^^^^^^^^
                          source.luau variable.other.readwrite.luau
                                      ^
                                      source.luau punctuation.arguments.end.luau
                                       ^
                                       source.luau
                                        ^^
                                        source.luau keyword.control.luau
>  	for _, v in ipairs(class.Members) do
 ^^^
 source.luau
    ^^^
    source.luau keyword.control.luau
       ^
       source.luau
        ^
        source.luau variable.parameter.luau
         ^^
         source.luau
           ^
           source.luau variable.parameter.luau
            ^
            source.luau
             ^^
             source.luau keyword.control.luau
               ^
               source.luau
                ^^^^^^
                source.luau support.function.luau
                      ^
                      source.luau punctuation.arguments.begin.luau
                       ^^^^^
                       source.luau variable.other.readwrite.luau
                            ^
                            source.luau
                             ^^^^^^^
                             source.luau variable.other.property.luau
                                    ^
                                    source.luau punctuation.arguments.end.luau
                                     ^
                                     source.luau
                                      ^^
                                      source.luau keyword.control.luau
>  		if v.MemberType ~= "Function" then continue end
 ^^^^
 source.luau
     ^^
     source.luau keyword.control.luau
       ^
       source.luau
        ^
        source.luau variable.other.readwrite.luau
         ^
         source.luau
          ^^^^^^^^^^
          source.luau variable.other.property.luau
                    ^
                    source.luau
                     ^^
                     source.luau keyword.operator.comparison.luau
                       ^
                       source.luau
                        ^
                        source.luau string.quoted.double.luau
                         ^^^^^^^^
                         source.luau string.quoted.double.luau
                                 ^
                                 source.luau string.quoted.double.luau
                                  ^
                                  source.luau
                                   ^^^^
                                   source.luau keyword.control.luau
                                       ^
                                       source.luau
                                        ^^^^^^^^
                                        source.luau keyword.control.luau
                                                ^
                                                source.luau
                                                 ^^^
                                                 source.luau keyword.control.luau
>  		if filterSecurity(v.Security, securityLookup) then continue end
 ^^^^
 source.luau
     ^^
     source.luau keyword.control.luau
       ^
       source.luau
        ^^^^^^^^^^^^^^
        source.luau entity.name.function.luau
                      ^
                      source.luau punctuation.arguments.begin.luau
                       ^
                       source.luau variable.other.readwrite.luau
                        ^
                        source.luau
                         ^^^^^^^^
                         source.luau variable.other.property.luau
                                 ^
                                 source.luau punctuation.separator.arguments.luau
                                  ^
                                  source.luau
                                   ^^^^^^^^^^^^^^
                                   source.luau variable.other.readwrite.luau
                                                 ^
                                                 source.luau punctuation.arguments.end.luau
                                                  ^
                                                  source.luau
                                                   ^^^^
                                                   source.luau keyword.control.luau
                                                       ^
                                                       source.luau
                                                        ^^^^^^^^
                                                        source.luau keyword.control.luau
                                                                ^
                                                                source.luau
                                                                 ^^^
                                                                 source.luau keyword.control.luau
>  		if filterTags(v.Tags, tagLookup) then continue end
 ^^^^
 source.luau
     ^^
     source.luau keyword.control.luau
       ^
       source.luau
        ^^^^^^^^^^
        source.luau entity.name.function.luau
                  ^
                  source.luau punctuation.arguments.begin.luau
                   ^
                   source.luau variable.other.readwrite.luau
                    ^
                    source.luau
                     ^^^^
                     source.luau variable.other.property.luau
                         ^
                         source.luau punctuation.separator.arguments.luau
                          ^
                          source.luau
                           ^^^^^^^^^
                           source.luau variable.other.readwrite.luau
                                    ^
                                    source.luau punctuation.arguments.end.luau
                                     ^
                                     source.luau
                                      ^^^^
                                      source.luau keyword.control.luau
                                          ^
                                          source.luau
                                           ^^^^^^^^
                                           source.luau keyword.control.luau
                                                   ^
                                                   source.luau
                                                    ^^^
                                                    source.luau keyword.control.luau
>  		
 ^^^^^
 source.luau
>  		memberList[v.Name] = cloneMember(v)
 ^^^^
 source.luau
     ^^^^^^^^^^
     source.luau variable.other.readwrite.luau
               ^
               source.luau
                ^
                source.luau variable.other.readwrite.luau
                 ^
                 source.luau
                  ^^^^
                  source.luau variable.other.property.luau
                      ^^
                      source.luau
                        ^
                        source.luau keyword.operator.assignment.luau
                         ^
                         source.luau
                          ^^^^^^^^^^^
                          source.luau entity.name.function.luau
                                     ^
                                     source.luau punctuation.arguments.begin.luau
                                      ^
                                      source.luau variable.other.readwrite.luau
                                       ^
                                       source.luau punctuation.arguments.end.luau
>  	end
 ^^^
 source.luau
    ^^^
    source.luau keyword.control.luau
>  end
 ^^
 source.luau
   ^^^
   source.luau keyword.control.luau
>  
 ^^^
 source.luau
>  return memberList
 ^^
 source.luau
   ^^^^^^
   source.luau keyword.control.luau
         ^
         source.luau
          ^^^^^^^^^^
          source.luau variable.other.readwrite.luau
>end
 ^^^
 source.luau keyword.control.luau
>
 ^
 source.luau
>function API.getEvents(class: string, tagFilter: Array<string>?, securityFilter: Array<string>?): Dictionary<ApiTypes.Event>
 ^^^^^^^^
 source.luau meta.function.luau keyword.control.luau
         ^
         source.luau meta.function.luau
          ^^^
          source.luau meta.function.luau entity.name.function.luau
             ^
             source.luau meta.function.luau
              ^^^^^^^^^
              source.luau meta.function.luau entity.name.function.luau
                       ^
                       source.luau meta.function.luau meta.parameter.luau punctuation.definition.parameters.begin.luau
                        ^^^^^
                        source.luau meta.function.luau meta.parameter.luau variable.parameter.function.luau
                             ^
                             source.luau meta.function.luau meta.parameter.luau keyword.operator.type.luau
                              ^
                              source.luau meta.function.luau meta.parameter.luau
                               ^^^^^^
                               source.luau meta.function.luau meta.parameter.luau support.type.primitive.luau
                                     ^
                                     source.luau meta.function.luau meta.parameter.luau punctuation.separator.arguments.luau
                                      ^
                                      source.luau meta.function.luau meta.parameter.luau
                                       ^^^^^^^^^
                                       source.luau meta.function.luau meta.parameter.luau variable.parameter.function.luau
                                                ^
                                                source.luau meta.function.luau meta.parameter.luau keyword.operator.type.luau
                                                 ^
                                                 source.luau meta.function.luau meta.parameter.luau
                                                  ^^^^^
                                                  source.luau meta.function.luau meta.parameter.luau entity.name.type.luau
                                                       ^
                                                       source.luau meta.function.luau meta.parameter.luau keyword.operator.type.luau
                                                        ^^^^^^
                                                        source.luau meta.function.luau meta.parameter.luau support.type.primitive.luau
                                                              ^
                                                              source.luau meta.function.luau meta.parameter.luau keyword.operator.type.luau
                                                               ^
                                                               source.luau meta.function.luau meta.parameter.luau keyword.operator.type.luau
                                                                ^
                                                                source.luau meta.function.luau meta.parameter.luau punctuation.separator.arguments.luau
                                                                 ^
                                                                 source.luau meta.function.luau meta.parameter.luau
                                                                  ^^^^^^^^^^^^^^
                                                                  source.luau meta.function.luau meta.parameter.luau variable.parameter.function.luau
                                                                                ^
                                                                                source.luau meta.function.luau meta.parameter.luau keyword.operator.type.luau
                                                                                 ^
                                                                                 source.luau meta.function.luau meta.parameter.luau
                                                                                  ^^^^^
                                                                                  source.luau meta.function.luau meta.parameter.luau entity.name.type.luau
                                                                                       ^
                                                                                       source.luau meta.function.luau meta.parameter.luau keyword.operator.type.luau
                                                                                        ^^^^^^
                                                                                        source.luau meta.function.luau meta.parameter.luau support.type.primitive.luau
                                                                                              ^
                                                                                              source.luau meta.function.luau meta.parameter.luau keyword.operator.type.luau
                                                                                               ^
                                                                                               source.luau meta.function.luau meta.parameter.luau keyword.operator.type.luau
                                                                                                ^
                                                                                                source.luau meta.function.luau meta.parameter.luau punctuation.definition.parameters.end.luau
                                                                                                 ^
                                                                                                 source.luau
                                                                                                  ^
                                                                                                  source.luau
                                                                                                   ^^^^^^^^^^
                                                                                                   source.luau entity.name.type.luau
                                                                                                             ^
                                                                                                             source.luau keyword.operator.type.luau
                                                                                                              ^^^^^^^^
                                                                                                              source.luau entity.name.type.luau
                                                                                                                      ^
                                                                                                                      source.luau
                                                                                                                       ^^^^^
                                                                                                                       source.luau entity.name.type.luau
                                                                                                                            ^
                                                                                                                            source.luau keyword.operator.type.luau
>  if not dump then
 ^^
 source.luau
   ^^
   source.luau keyword.control.luau
     ^
     source.luau
      ^^^
      source.luau keyword.operator.logical.luau keyword.operator.wordlike.luau
         ^
         source.luau
          ^^^^
          source.luau variable.other.readwrite.luau
              ^
              source.luau
               ^^^^
               source.luau keyword.control.luau
>  	error(MODULE_NOT_READY_MESSAGE, 2)
 ^^^
 source.luau
    ^^^^^
    source.luau support.function.luau
         ^
         source.luau punctuation.arguments.begin.luau
          ^^^^^^^^^^^^^^^^^^^^^^^^
          source.luau variable.other.constant.luau
                                  ^
                                  source.luau punctuation.separator.arguments.luau
                                   ^
                                   source.luau
                                    ^
                                    source.luau constant.numeric.decimal.luau
                                     ^
                                     source.luau punctuation.arguments.end.luau
>  end
 ^^
 source.luau
   ^^^
   source.luau keyword.control.luau
>  
 ^^^
 source.luau
>  local superClasses: Array<ApiTypes.Class> = superClassMap[class]
 ^^
 source.luau
   ^^^^^
   source.luau storage.modifier.local.luau
        ^
        source.luau
         ^^^^^^^^^^^^
         source.luau variable.other.readwrite.luau
                     ^
                     source.luau keyword.operator.type.luau
                      ^
                      source.luau
                       ^^^^^
                       source.luau entity.name.type.luau
                            ^
                            source.luau keyword.operator.type.luau
                             ^^^^^^^^
                             source.luau entity.name.type.luau
                                     ^
                                     source.luau
                                      ^^^^^
                                      source.luau entity.name.type.luau
                                           ^
                                           source.luau keyword.operator.type.luau
                                            ^
                                            source.luau
                                             ^
                                             source.luau keyword.operator.assignment.luau
                                              ^
                                              source.luau
                                               ^^^^^^^^^^^^^
                                               source.luau variable.other.readwrite.luau
                                                            ^
                                                            source.luau
                                                             ^^^^^
                                                             source.luau variable.other.readwrite.luau
                                                                  ^^
                                                                  source.luau
>  if not superClasses then
 ^^
 source.luau
   ^^
   source.luau keyword.control.luau
     ^
     source.luau
      ^^^
      source.luau keyword.operator.logical.luau keyword.operator.wordlike.luau
         ^
         source.luau
          ^^^^^^^^^^^^
          source.luau variable.other.readwrite.luau
                      ^
                      source.luau
                       ^^^^
                       source.luau keyword.control.luau
>  	error(string.format(CLASS_NOT_REAL_MESSAGE, class), 2)
 ^^^
 source.luau
    ^^^^^
    source.luau support.function.luau
         ^
         source.luau punctuation.arguments.begin.luau
          ^^^^^^^^^^^^^
          source.luau support.function.luau
                       ^
                       source.luau punctuation.arguments.begin.luau
                        ^^^^^^^^^^^^^^^^^^^^^^
                        source.luau variable.other.constant.luau
                                              ^
                                              source.luau punctuation.separator.arguments.luau
                                               ^
                                               source.luau
                                                ^^^^^
                                                source.luau variable.other.readwrite.luau
                                                     ^
                                                     source.luau punctuation.arguments.end.luau
                                                      ^
                                                      source.luau punctuation.separator.arguments.luau
                                                       ^
                                                       source.luau
                                                        ^
                                                        source.luau constant.numeric.decimal.luau
                                                         ^
                                                         source.luau punctuation.arguments.end.luau
>  end
 ^^
 source.luau
   ^^^
   source.luau keyword.control.luau
>  
 ^^^
 source.luau
>  local tagLookup: Dictionary<boolean> = lookupify(tagFilter)
 ^^
 source.luau
   ^^^^^
   source.luau storage.modifier.local.luau
        ^
        source.luau
         ^^^^^^^^^
         source.luau variable.other.readwrite.luau
                  ^
                  source.luau keyword.operator.type.luau
                   ^
                   source.luau
                    ^^^^^^^^^^
                    source.luau entity.name.type.luau
                              ^
                              source.luau keyword.operator.type.luau
                               ^^^^^^^
                               source.luau support.type.primitive.luau
                                      ^
                                      source.luau keyword.operator.type.luau
                                       ^
                                       source.luau
                                        ^
                                        source.luau keyword.operator.assignment.luau
                                         ^
                                         source.luau
                                          ^^^^^^^^^
                                          source.luau entity.name.function.luau
                                                   ^
                                                   source.luau punctuation.arguments.begin.luau
                                                    ^^^^^^^^^
                                                    source.luau variable.other.readwrite.luau
                                                             ^
                                                             source.luau punctuation.arguments.end.luau
>  local securityLookup: Dictionary<boolean> = lookupify(securityFilter)
 ^^
 source.luau
   ^^^^^
   source.luau storage.modifier.local.luau
        ^
        source.luau
         ^^^^^^^^^^^^^^
         source.luau variable.other.readwrite.luau
                       ^
                       source.luau keyword.operator.type.luau
                        ^
                        source.luau
                         ^^^^^^^^^^
                         source.luau entity.name.type.luau
                                   ^
                                   source.luau keyword.operator.type.luau
                                    ^^^^^^^
                                    source.luau support.type.primitive.luau
                                           ^
                                           source.luau keyword.operator.type.luau
                                            ^
                                            source.luau
                                             ^
                                             source.luau keyword.operator.assignment.luau
                                              ^
                                              source.luau
                                               ^^^^^^^^^
                                               source.luau entity.name.function.luau
                                                        ^
                                                        source.luau punctuation.arguments.begin.luau
                                                         ^^^^^^^^^^^^^^
                                                         source.luau variable.other.readwrite.luau
                                                                       ^
                                                                       source.luau punctuation.arguments.end.luau
>  
 ^^^
 source.luau
>  local memberList: Dictionary<ApiTypes.Event> = {}
 ^^
 source.luau
   ^^^^^
   source.luau storage.modifier.local.luau
        ^
        source.luau
         ^^^^^^^^^^
         source.luau variable.other.readwrite.luau
                   ^
                   source.luau keyword.operator.type.luau
                    ^
                    source.luau
                     ^^^^^^^^^^
                     source.luau entity.name.type.luau
                               ^
                               source.luau keyword.operator.type.luau
                                ^^^^^^^^
                                source.luau entity.name.type.luau
                                        ^
                                        source.luau
                                         ^^^^^
                                         source.luau entity.name.type.luau
                                              ^
                                              source.luau keyword.operator.type.luau
                                               ^
                                               source.luau
                                                ^
                                                source.luau keyword.operator.assignment.luau
                                                 ^
                                                 source.luau
                                                  ^
                                                  source.luau punctuation.table.begin.luau
                                                   ^
                                                   source.luau punctuation.table.end.luau
>  for _, class in ipairs(superClasses) do
 ^^
 source.luau
   ^^^
   source.luau keyword.control.luau
      ^
      source.luau
       ^
       source.luau variable.parameter.luau
        ^^
        source.luau
          ^^^^^
          source.luau variable.parameter.luau
               ^
               source.luau
                ^^
                source.luau keyword.control.luau
                  ^
                  source.luau
                   ^^^^^^
                   source.luau support.function.luau
                         ^
                         source.luau punctuation.arguments.begin.luau
                          ^^^^^^^^^^^^
                          source.luau variable.other.readwrite.luau
                                      ^
                                      source.luau punctuation.arguments.end.luau
                                       ^
                                       source.luau
                                        ^^
                                        source.luau keyword.control.luau
>  	for _, v in ipairs(class.Members) do
 ^^^
 source.luau
    ^^^
    source.luau keyword.control.luau
       ^
       source.luau
        ^
        source.luau variable.parameter.luau
         ^^
         source.luau
           ^
           source.luau variable.parameter.luau
            ^
            source.luau
             ^^
             source.luau keyword.control.luau
               ^
               source.luau
                ^^^^^^
                source.luau support.function.luau
                      ^
                      source.luau punctuation.arguments.begin.luau
                       ^^^^^
                       source.luau variable.other.readwrite.luau
                            ^
                            source.luau
                             ^^^^^^^
                             source.luau variable.other.property.luau
                                    ^
                                    source.luau punctuation.arguments.end.luau
                                     ^
                                     source.luau
                                      ^^
                                      source.luau keyword.control.luau
>  		if v.MemberType ~= "Event" then continue end
 ^^^^
 source.luau
     ^^
     source.luau keyword.control.luau
       ^
       source.luau
        ^
        source.luau variable.other.readwrite.luau
         ^
         source.luau
          ^^^^^^^^^^
          source.luau variable.other.property.luau
                    ^
                    source.luau
                     ^^
                     source.luau keyword.operator.comparison.luau
                       ^
                       source.luau
                        ^
                        source.luau string.quoted.double.luau
                         ^^^^^
                         source.luau string.quoted.double.luau
                              ^
                              source.luau string.quoted.double.luau
                               ^
                               source.luau
                                ^^^^
                                source.luau keyword.control.luau
                                    ^
                                    source.luau
                                     ^^^^^^^^
                                     source.luau keyword.control.luau
                                             ^
                                             source.luau
                                              ^^^
                                              source.luau keyword.control.luau
>  		if filterSecurity(v.Security, securityLookup) then continue end
 ^^^^
 source.luau
     ^^
     source.luau keyword.control.luau
       ^
       source.luau
        ^^^^^^^^^^^^^^
        source.luau entity.name.function.luau
                      ^
                      source.luau punctuation.arguments.begin.luau
                       ^
                       source.luau variable.other.readwrite.luau
                        ^
                        source.luau
                         ^^^^^^^^
                         source.luau variable.other.property.luau
                                 ^
                                 source.luau punctuation.separator.arguments.luau
                                  ^
                                  source.luau
                                   ^^^^^^^^^^^^^^
                                   source.luau variable.other.readwrite.luau
                                                 ^
                                                 source.luau punctuation.arguments.end.luau
                                                  ^
                                                  source.luau
                                                   ^^^^
                                                   source.luau keyword.control.luau
                                                       ^
                                                       source.luau
                                                        ^^^^^^^^
                                                        source.luau keyword.control.luau
                                                                ^
                                                                source.luau
                                                                 ^^^
                                                                 source.luau keyword.control.luau
>  		if filterTags(v.Tags, tagLookup) then continue end
 ^^^^
 source.luau
     ^^
     source.luau keyword.control.luau
       ^
       source.luau
        ^^^^^^^^^^
        source.luau entity.name.function.luau
                  ^
                  source.luau punctuation.arguments.begin.luau
                   ^
                   source.luau variable.other.readwrite.luau
                    ^
                    source.luau
                     ^^^^
                     source.luau variable.other.property.luau
                         ^
                         source.luau punctuation.separator.arguments.luau
                          ^
                          source.luau
                           ^^^^^^^^^
                           source.luau variable.other.readwrite.luau
                                    ^
                                    source.luau punctuation.arguments.end.luau
                                     ^
                                     source.luau
                                      ^^^^
                                      source.luau keyword.control.luau
                                          ^
                                          source.luau
                                           ^^^^^^^^
                                           source.luau keyword.control.luau
                                                   ^
                                                   source.luau
                                                    ^^^
                                                    source.luau keyword.control.luau
>  		
 ^^^^^
 source.luau
>  		memberList[v.Name] = cloneMember(v)
 ^^^^
 source.luau
     ^^^^^^^^^^
     source.luau variable.other.readwrite.luau
               ^
               source.luau
                ^
                source.luau variable.other.readwrite.luau
                 ^
                 source.luau
                  ^^^^
                  source.luau variable.other.property.luau
                      ^^
                      source.luau
                        ^
                        source.luau keyword.operator.assignment.luau
                         ^
                         source.luau
                          ^^^^^^^^^^^
                          source.luau entity.name.function.luau
                                     ^
                                     source.luau punctuation.arguments.begin.luau
                                      ^
                                      source.luau variable.other.readwrite.luau
                                       ^
                                       source.luau punctuation.arguments.end.luau
>  	end
 ^^^
 source.luau
    ^^^
    source.luau keyword.control.luau
>  end
 ^^
 source.luau
   ^^^
   source.luau keyword.control.luau
>  
 ^^^
 source.luau
>  return memberList
 ^^
 source.luau
   ^^^^^^
   source.luau keyword.control.luau
         ^
         source.luau
          ^^^^^^^^^^
          source.luau variable.other.readwrite.luau
>end
 ^^^
 source.luau keyword.control.luau
>
 ^
 source.luau
>
 ^
 source.luau
>function API.getCallbacks(class: string, tagFilter: Array<string>?, securityFilter: Array<string>?): Dictionary<ApiTypes.Callback>
 ^^^^^^^^
 source.luau meta.function.luau keyword.control.luau
         ^
         source.luau meta.function.luau
          ^^^
          source.luau meta.function.luau entity.name.function.luau
             ^
             source.luau meta.function.luau
              ^^^^^^^^^^^^
              source.luau meta.function.luau entity.name.function.luau
                          ^
                          source.luau meta.function.luau meta.parameter.luau punctuation.definition.parameters.begin.luau
                           ^^^^^
                           source.luau meta.function.luau meta.parameter.luau variable.parameter.function.luau
                                ^
                                source.luau meta.function.luau meta.parameter.luau keyword.operator.type.luau
                                 ^
                                 source.luau meta.function.luau meta.parameter.luau
                                  ^^^^^^
                                  source.luau meta.function.luau meta.parameter.luau support.type.primitive.luau
                                        ^
                                        source.luau meta.function.luau meta.parameter.luau punctuation.separator.arguments.luau
                                         ^
                                         source.luau meta.function.luau meta.parameter.luau
                                          ^^^^^^^^^
                                          source.luau meta.function.luau meta.parameter.luau variable.parameter.function.luau
                                                   ^
                                                   source.luau meta.function.luau meta.parameter.luau keyword.operator.type.luau
                                                    ^
                                                    source.luau meta.function.luau meta.parameter.luau
                                                     ^^^^^
                                                     source.luau meta.function.luau meta.parameter.luau entity.name.type.luau
                                                          ^
                                                          source.luau meta.function.luau meta.parameter.luau keyword.operator.type.luau
                                                           ^^^^^^
                                                           source.luau meta.function.luau meta.parameter.luau support.type.primitive.luau
                                                                 ^
                                                                 source.luau meta.function.luau meta.parameter.luau keyword.operator.type.luau
                                                                  ^
                                                                  source.luau meta.function.luau meta.parameter.luau keyword.operator.type.luau
                                                                   ^
                                                                   source.luau meta.function.luau meta.parameter.luau punctuation.separator.arguments.luau
                                                                    ^
                                                                    source.luau meta.function.luau meta.parameter.luau
                                                                     ^^^^^^^^^^^^^^
                                                                     source.luau meta.function.luau meta.parameter.luau variable.parameter.function.luau
                                                                                   ^
                                                                                   source.luau meta.function.luau meta.parameter.luau keyword.operator.type.luau
                                                                                    ^
                                                                                    source.luau meta.function.luau meta.parameter.luau
                                                                                     ^^^^^
                                                                                     source.luau meta.function.luau meta.parameter.luau entity.name.type.luau
                                                                                          ^
                                                                                          source.luau meta.function.luau meta.parameter.luau keyword.operator.type.luau
                                                                                           ^^^^^^
                                                                                           source.luau meta.function.luau meta.parameter.luau support.type.primitive.luau
                                                                                                 ^
                                                                                                 source.luau meta.function.luau meta.parameter.luau keyword.operator.type.luau
                                                                                                  ^
                                                                                                  source.luau meta.function.luau meta.parameter.luau keyword.operator.type.luau
                                                                                                   ^
                                                                                                   source.luau meta.function.luau meta.parameter.luau punctuation.definition.parameters.end.luau
                                                                                                    ^
                                                                                                    source.luau
                                                                                                     ^
                                                                                                     source.luau
                                                                                                      ^^^^^^^^^^
                                                                                                      source.luau entity.name.type.luau
                                                                                                                ^
                                                                                                                source.luau keyword.operator.type.luau
                                                                                                                 ^^^^^^^^
                                                                                                                 source.luau entity.name.type.luau
                                                                                                                         ^
                                                                                                                         source.luau
                                                                                                                          ^^^^^^^^
                                                                                                                          source.luau entity.name.type.luau
                                                                                                                                  ^
                                                                                                                                  source.luau keyword.operator.type.luau
>  if not dump then
 ^^
 source.luau
   ^^
   source.luau keyword.control.luau
     ^
     source.luau
      ^^^
      source.luau keyword.operator.logical.luau keyword.operator.wordlike.luau
         ^
         source.luau
          ^^^^
          source.luau variable.other.readwrite.luau
              ^
              source.luau
               ^^^^
               source.luau keyword.control.luau
>  	error(MODULE_NOT_READY_MESSAGE, 2)
 ^^^
 source.luau
    ^^^^^
    source.luau support.function.luau
         ^
         source.luau punctuation.arguments.begin.luau
          ^^^^^^^^^^^^^^^^^^^^^^^^
          source.luau variable.other.constant.luau
                                  ^
                                  source.luau punctuation.separator.arguments.luau
                                   ^
                                   source.luau
                                    ^
                                    source.luau constant.numeric.decimal.luau
                                     ^
                                     source.luau punctuation.arguments.end.luau
>  end
 ^^
 source.luau
   ^^^
   source.luau keyword.control.luau
>  
 ^^^
 source.luau
>  local superClasses: Array<ApiTypes.Class> = superClassMap[class]
 ^^
 source.luau
   ^^^^^
   source.luau storage.modifier.local.luau
        ^
        source.luau
         ^^^^^^^^^^^^
         source.luau variable.other.readwrite.luau
                     ^
                     source.luau keyword.operator.type.luau
                      ^
                      source.luau
                       ^^^^^
                       source.luau entity.name.type.luau
                            ^
                            source.luau keyword.operator.type.luau
                             ^^^^^^^^
                             source.luau entity.name.type.luau
                                     ^
                                     source.luau
                                      ^^^^^
                                      source.luau entity.name.type.luau
                                           ^
                                           source.luau keyword.operator.type.luau
                                            ^
                                            source.luau
                                             ^
                                             source.luau keyword.operator.assignment.luau
                                              ^
                                              source.luau
                                               ^^^^^^^^^^^^^
                                               source.luau variable.other.readwrite.luau
                                                            ^
                                                            source.luau
                                                             ^^^^^
                                                             source.luau variable.other.readwrite.luau
                                                                  ^^
                                                                  source.luau
>  if not superClasses then
 ^^
 source.luau
   ^^
   source.luau keyword.control.luau
     ^
     source.luau
      ^^^
      source.luau keyword.operator.logical.luau keyword.operator.wordlike.luau
         ^
         source.luau
          ^^^^^^^^^^^^
          source.luau variable.other.readwrite.luau
                      ^
                      source.luau
                       ^^^^
                       source.luau keyword.control.luau
>  	error(string.format(CLASS_NOT_REAL_MESSAGE, class), 2)
 ^^^
 source.luau
    ^^^^^
    source.luau support.function.luau
         ^
         source.luau punctuation.arguments.begin.luau
          ^^^^^^^^^^^^^
          source.luau support.function.luau
                       ^
                       source.luau punctuation.arguments.begin.luau
                        ^^^^^^^^^^^^^^^^^^^^^^
                        source.luau variable.other.constant.luau
                                              ^
                                              source.luau punctuation.separator.arguments.luau
                                               ^
                                               source.luau
                                                ^^^^^
                                                source.luau variable.other.readwrite.luau
                                                     ^
                                                     source.luau punctuation.arguments.end.luau
                                                      ^
                                                      source.luau punctuation.separator.arguments.luau
                                                       ^
                                                       source.luau
                                                        ^
                                                        source.luau constant.numeric.decimal.luau
                                                         ^
                                                         source.luau punctuation.arguments.end.luau
>  end
 ^^
 source.luau
   ^^^
   source.luau keyword.control.luau
>  
 ^^^
 source.luau
>  local tagLookup: Dictionary<boolean> = lookupify(tagFilter)
 ^^
 source.luau
   ^^^^^
   source.luau storage.modifier.local.luau
        ^
        source.luau
         ^^^^^^^^^
         source.luau variable.other.readwrite.luau
                  ^
                  source.luau keyword.operator.type.luau
                   ^
                   source.luau
                    ^^^^^^^^^^
                    source.luau entity.name.type.luau
                              ^
                              source.luau keyword.operator.type.luau
                               ^^^^^^^
                               source.luau support.type.primitive.luau
                                      ^
                                      source.luau keyword.operator.type.luau
                                       ^
                                       source.luau
                                        ^
                                        source.luau keyword.operator.assignment.luau
                                         ^
                                         source.luau
                                          ^^^^^^^^^
                                          source.luau entity.name.function.luau
                                                   ^
                                                   source.luau punctuation.arguments.begin.luau
                                                    ^^^^^^^^^
                                                    source.luau variable.other.readwrite.luau
                                                             ^
                                                             source.luau punctuation.arguments.end.luau
>  local securityLookup: Dictionary<boolean> = lookupify(securityFilter)
 ^^
 source.luau
   ^^^^^
   source.luau storage.modifier.local.luau
        ^
        source.luau
         ^^^^^^^^^^^^^^
         source.luau variable.other.readwrite.luau
                       ^
                       source.luau keyword.operator.type.luau
                        ^
                        source.luau
                         ^^^^^^^^^^
                         source.luau entity.name.type.luau
                                   ^
                                   source.luau keyword.operator.type.luau
                                    ^^^^^^^
                                    source.luau support.type.primitive.luau
                                           ^
                                           source.luau keyword.operator.type.luau
                                            ^
                                            source.luau
                                             ^
                                             source.luau keyword.operator.assignment.luau
                                              ^
                                              source.luau
                                               ^^^^^^^^^
                                               source.luau entity.name.function.luau
                                                        ^
                                                        source.luau punctuation.arguments.begin.luau
                                                         ^^^^^^^^^^^^^^
                                                         source.luau variable.other.readwrite.luau
                                                                       ^
                                                                       source.luau punctuation.arguments.end.luau
>  
 ^^^
 source.luau
>  local memberList: Dictionary<ApiTypes.Callback> = {}
 ^^
 source.luau
   ^^^^^
   source.luau storage.modifier.local.luau
        ^
        source.luau
         ^^^^^^^^^^
         source.luau variable.other.readwrite.luau
                   ^
                   source.luau keyword.operator.type.luau
                    ^
                    source.luau
                     ^^^^^^^^^^
                     source.luau entity.name.type.luau
                               ^
                               source.luau keyword.operator.type.luau
                                ^^^^^^^^
                                source.luau entity.name.type.luau
                                        ^
                                        source.luau
                                         ^^^^^^^^
                                         source.luau entity.name.type.luau
                                                 ^
                                                 source.luau keyword.operator.type.luau
                                                  ^
                                                  source.luau
                                                   ^
                                                   source.luau keyword.operator.assignment.luau
                                                    ^
                                                    source.luau
                                                     ^
                                                     source.luau punctuation.table.begin.luau
                                                      ^
                                                      source.luau punctuation.table.end.luau
>  for _, class in ipairs(superClasses) do
 ^^
 source.luau
   ^^^
   source.luau keyword.control.luau
      ^
      source.luau
       ^
       source.luau variable.parameter.luau
        ^^
        source.luau
          ^^^^^
          source.luau variable.parameter.luau
               ^
               source.luau
                ^^
                source.luau keyword.control.luau
                  ^
                  source.luau
                   ^^^^^^
                   source.luau support.function.luau
                         ^
                         source.luau punctuation.arguments.begin.luau
                          ^^^^^^^^^^^^
                          source.luau variable.other.readwrite.luau
                                      ^
                                      source.luau punctuation.arguments.end.luau
                                       ^
                                       source.luau
                                        ^^
                                        source.luau keyword.control.luau
>  	for _, v in ipairs(class.Members) do
 ^^^
 source.luau
    ^^^
    source.luau keyword.control.luau
       ^
       source.luau
        ^
        source.luau variable.parameter.luau
         ^^
         source.luau
           ^
           source.luau variable.parameter.luau
            ^
            source.luau
             ^^
             source.luau keyword.control.luau
               ^
               source.luau
                ^^^^^^
                source.luau support.function.luau
                      ^
                      source.luau punctuation.arguments.begin.luau
                       ^^^^^
                       source.luau variable.other.readwrite.luau
                            ^
                            source.luau
                             ^^^^^^^
                             source.luau variable.other.property.luau
                                    ^
                                    source.luau punctuation.arguments.end.luau
                                     ^
                                     source.luau
                                      ^^
                                      source.luau keyword.control.luau
>  		if v.MemberType ~= "Callback" then continue end
 ^^^^
 source.luau
     ^^
     source.luau keyword.control.luau
       ^
       source.luau
        ^
        source.luau variable.other.readwrite.luau
         ^
         source.luau
          ^^^^^^^^^^
          source.luau variable.other.property.luau
                    ^
                    source.luau
                     ^^
                     source.luau keyword.operator.comparison.luau
                       ^
                       source.luau
                        ^
                        source.luau string.quoted.double.luau
                         ^^^^^^^^
                         source.luau string.quoted.double.luau
                                 ^
                                 source.luau string.quoted.double.luau
                                  ^
                                  source.luau
                                   ^^^^
                                   source.luau keyword.control.luau
                                       ^
                                       source.luau
                                        ^^^^^^^^
                                        source.luau keyword.control.luau
                                                ^
                                                source.luau
                                                 ^^^
                                                 source.luau keyword.control.luau
>  		if filterSecurity(v.Security, securityLookup) then continue end
 ^^^^
 source.luau
     ^^
     source.luau keyword.control.luau
       ^
       source.luau
        ^^^^^^^^^^^^^^
        source.luau entity.name.function.luau
                      ^
                      source.luau punctuation.arguments.begin.luau
                       ^
                       source.luau variable.other.readwrite.luau
                        ^
                        source.luau
                         ^^^^^^^^
                         source.luau variable.other.property.luau
                                 ^
                                 source.luau punctuation.separator.arguments.luau
                                  ^
                                  source.luau
                                   ^^^^^^^^^^^^^^
                                   source.luau variable.other.readwrite.luau
                                                 ^
                                                 source.luau punctuation.arguments.end.luau
                                                  ^
                                                  source.luau
                                                   ^^^^
                                                   source.luau keyword.control.luau
                                                       ^
                                                       source.luau
                                                        ^^^^^^^^
                                                        source.luau keyword.control.luau
                                                                ^
                                                                source.luau
                                                                 ^^^
                                                                 source.luau keyword.control.luau
>  		if filterTags(v.Tags, tagLookup) then continue end
 ^^^^
 source.luau
     ^^
     source.luau keyword.control.luau
       ^
       source.luau
        ^^^^^^^^^^
        source.luau entity.name.function.luau
                  ^
                  source.luau punctuation.arguments.begin.luau
                   ^
                   source.luau variable.other.readwrite.luau
                    ^
                    source.luau
                     ^^^^
                     source.luau variable.other.property.luau
                         ^
                         source.luau punctuation.separator.arguments.luau
                          ^
                          source.luau
                           ^^^^^^^^^
                           source.luau variable.other.readwrite.luau
                                    ^
                                    source.luau punctuation.arguments.end.luau
                                     ^
                                     source.luau
                                      ^^^^
                                      source.luau keyword.control.luau
                                          ^
                                          source.luau
                                           ^^^^^^^^
                                           source.luau keyword.control.luau
                                                   ^
                                                   source.luau
                                                    ^^^
                                                    source.luau keyword.control.luau
>  		
 ^^^^^
 source.luau
>  		memberList[v.Name] = cloneMember(v)
 ^^^^
 source.luau
     ^^^^^^^^^^
     source.luau variable.other.readwrite.luau
               ^
               source.luau
                ^
                source.luau variable.other.readwrite.luau
                 ^
                 source.luau
                  ^^^^
                  source.luau variable.other.property.luau
                      ^^
                      source.luau
                        ^
                        source.luau keyword.operator.assignment.luau
                         ^
                         source.luau
                          ^^^^^^^^^^^
                          source.luau entity.name.function.luau
                                     ^
                                     source.luau punctuation.arguments.begin.luau
                                      ^
                                      source.luau variable.other.readwrite.luau
                                       ^
                                       source.luau punctuation.arguments.end.luau
>  	end
 ^^^
 source.luau
    ^^^
    source.luau keyword.control.luau
>  end
 ^^
 source.luau
   ^^^
   source.luau keyword.control.luau
>  
 ^^^
 source.luau
>  return memberList
 ^^
 source.luau
   ^^^^^^
   source.luau keyword.control.luau
         ^
         source.luau
          ^^^^^^^^^^
          source.luau variable.other.readwrite.luau
>end
 ^^^
 source.luau keyword.control.luau
>
 ^
 source.luau
>function API.getSuperclasses(class: string): Array<string>
 ^^^^^^^^
 source.luau meta.function.luau keyword.control.luau
         ^
         source.luau meta.function.luau
          ^^^
          source.luau meta.function.luau entity.name.function.luau
             ^
             source.luau meta.function.luau
              ^^^^^^^^^^^^^^^
              source.luau meta.function.luau entity.name.function.luau
                             ^
                             source.luau meta.function.luau meta.parameter.luau punctuation.definition.parameters.begin.luau
                              ^^^^^
                              source.luau meta.function.luau meta.parameter.luau variable.parameter.function.luau
                                   ^
                                   source.luau meta.function.luau meta.parameter.luau keyword.operator.type.luau
                                    ^
                                    source.luau meta.function.luau meta.parameter.luau
                                     ^^^^^^
                                     source.luau meta.function.luau meta.parameter.luau support.type.primitive.luau
                                           ^
                                           source.luau meta.function.luau meta.parameter.luau punctuation.definition.parameters.end.luau
                                            ^
                                            source.luau
                                             ^
                                             source.luau
                                              ^^^^^
                                              source.luau entity.name.type.luau
                                                   ^
                                                   source.luau keyword.operator.type.luau
                                                    ^^^^^^
                                                    source.luau support.type.primitive.luau
                                                          ^
                                                          source.luau keyword.operator.type.luau
>  if not dump then
 ^^
 source.luau
   ^^
   source.luau keyword.control.luau
     ^
     source.luau
      ^^^
      source.luau keyword.operator.logical.luau keyword.operator.wordlike.luau
         ^
         source.luau
          ^^^^
          source.luau variable.other.readwrite.luau
              ^
              source.luau
               ^^^^
               source.luau keyword.control.luau
>  	error(MODULE_NOT_READY_MESSAGE, 2)
 ^^^
 source.luau
    ^^^^^
    source.luau support.function.luau
         ^
         source.luau punctuation.arguments.begin.luau
          ^^^^^^^^^^^^^^^^^^^^^^^^
          source.luau variable.other.constant.luau
                                  ^
                                  source.luau punctuation.separator.arguments.luau
                                   ^
                                   source.luau
                                    ^
                                    source.luau constant.numeric.decimal.luau
                                     ^
                                     source.luau punctuation.arguments.end.luau
>  end
 ^^
 source.luau
   ^^^
   source.luau keyword.control.luau
>  
 ^^^
 source.luau
>  local superClasses: Array<ApiTypes.Class> = superClassMap[class]
 ^^
 source.luau
   ^^^^^
   source.luau storage.modifier.local.luau
        ^
        source.luau
         ^^^^^^^^^^^^
         source.luau variable.other.readwrite.luau
                     ^
                     source.luau keyword.operator.type.luau
                      ^
                      source.luau
                       ^^^^^
                       source.luau entity.name.type.luau
                            ^
                            source.luau keyword.operator.type.luau
                             ^^^^^^^^
                             source.luau entity.name.type.luau
                                     ^
                                     source.luau
                                      ^^^^^
                                      source.luau entity.name.type.luau
                                           ^
                                           source.luau keyword.operator.type.luau
                                            ^
                                            source.luau
                                             ^
                                             source.luau keyword.operator.assignment.luau
                                              ^
                                              source.luau
                                               ^^^^^^^^^^^^^
                                               source.luau variable.other.readwrite.luau
                                                            ^
                                                            source.luau
                                                             ^^^^^
                                                             source.luau variable.other.readwrite.luau
                                                                  ^^
                                                                  source.luau
>  if not superClasses then
 ^^
 source.luau
   ^^
   source.luau keyword.control.luau
     ^
     source.luau
      ^^^
      source.luau keyword.operator.logical.luau keyword.operator.wordlike.luau
         ^
         source.luau
          ^^^^^^^^^^^^
          source.luau variable.other.readwrite.luau
                      ^
                      source.luau
                       ^^^^
                       source.luau keyword.control.luau
>  	error(string.format(CLASS_NOT_REAL_MESSAGE, class), 2)
 ^^^
 source.luau
    ^^^^^
    source.luau support.function.luau
         ^
         source.luau punctuation.arguments.begin.luau
          ^^^^^^^^^^^^^
          source.luau support.function.luau
                       ^
                       source.luau punctuation.arguments.begin.luau
                        ^^^^^^^^^^^^^^^^^^^^^^
                        source.luau variable.other.constant.luau
                                              ^
                                              source.luau punctuation.separator.arguments.luau
                                               ^
                                               source.luau
                                                ^^^^^
                                                source.luau variable.other.readwrite.luau
                                                     ^
                                                     source.luau punctuation.arguments.end.luau
                                                      ^
                                                      source.luau punctuation.separator.arguments.luau
                                                       ^
                                                       source.luau
                                                        ^
                                                        source.luau constant.numeric.decimal.luau
                                                         ^
                                                         source.luau punctuation.arguments.end.luau
>  end
 ^^
 source.luau
   ^^^
   source.luau keyword.control.luau
>  
 ^^^
 source.luau
>  local list = {}
 ^^
 source.luau
   ^^^^^
   source.luau storage.modifier.local.luau
        ^
        source.luau
         ^^^^
         source.luau variable.other.readwrite.luau
             ^
             source.luau
              ^
              source.luau keyword.operator.assignment.luau
               ^
               source.luau
                ^
                source.luau punctuation.table.begin.luau
                 ^
                 source.luau punctuation.table.end.luau
>  for i, class in ipairs(superClasses) do
 ^^
 source.luau
   ^^^
   source.luau keyword.control.luau
      ^
      source.luau
       ^
       source.luau variable.parameter.luau
        ^^
        source.luau
          ^^^^^
          source.luau variable.parameter.luau
               ^
               source.luau
                ^^
                source.luau keyword.control.luau
                  ^
                  source.luau
                   ^^^^^^
                   source.luau support.function.luau
                         ^
                         source.luau punctuation.arguments.begin.luau
                          ^^^^^^^^^^^^
                          source.luau variable.other.readwrite.luau
                                      ^
                                      source.luau punctuation.arguments.end.luau
                                       ^
                                       source.luau
                                        ^^
                                        source.luau keyword.control.luau
>  	list[i] = class.Name
 ^^^
 source.luau
    ^^^^
    source.luau variable.other.readwrite.luau
        ^
        source.luau
         ^
         source.luau variable.other.readwrite.luau
          ^^
          source.luau
            ^
            source.luau keyword.operator.assignment.luau
             ^
             source.luau
              ^^^^^
              source.luau variable.other.readwrite.luau
                   ^
                   source.luau
                    ^^^^
                    source.luau variable.other.property.luau
>  end
 ^^
 source.luau
   ^^^
   source.luau keyword.control.luau
>  
 ^^^
 source.luau
>  return list
 ^^
 source.luau
   ^^^^^^
   source.luau keyword.control.luau
         ^
         source.luau
          ^^^^
          source.luau variable.other.readwrite.luau
>end
 ^^^
 source.luau keyword.control.luau
>
 ^
 source.luau
>function API.isDeprecated(class: string, member: string?): boolean
 ^^^^^^^^
 source.luau meta.function.luau keyword.control.luau
         ^
         source.luau meta.function.luau
          ^^^
          source.luau meta.function.luau entity.name.function.luau
             ^
             source.luau meta.function.luau
              ^^^^^^^^^^^^
              source.luau meta.function.luau entity.name.function.luau
                          ^
                          source.luau meta.function.luau meta.parameter.luau punctuation.definition.parameters.begin.luau
                           ^^^^^
                           source.luau meta.function.luau meta.parameter.luau variable.parameter.function.luau
                                ^
                                source.luau meta.function.luau meta.parameter.luau keyword.operator.type.luau
                                 ^
                                 source.luau meta.function.luau meta.parameter.luau
                                  ^^^^^^
                                  source.luau meta.function.luau meta.parameter.luau support.type.primitive.luau
                                        ^
                                        source.luau meta.function.luau meta.parameter.luau punctuation.separator.arguments.luau
                                         ^
                                         source.luau meta.function.luau meta.parameter.luau
                                          ^^^^^^
                                          source.luau meta.function.luau meta.parameter.luau variable.parameter.function.luau
                                                ^
                                                source.luau meta.function.luau meta.parameter.luau keyword.operator.type.luau
                                                 ^
                                                 source.luau meta.function.luau meta.parameter.luau
                                                  ^^^^^^
                                                  source.luau meta.function.luau meta.parameter.luau support.type.primitive.luau
                                                        ^
                                                        source.luau meta.function.luau meta.parameter.luau keyword.operator.type.luau
                                                         ^
                                                         source.luau meta.function.luau meta.parameter.luau punctuation.definition.parameters.end.luau
                                                          ^
                                                          source.luau
                                                           ^
                                                           source.luau
                                                            ^^^^^^^
                                                            source.luau support.type.primitive.luau
>  if not dump then
 ^^
 source.luau
   ^^
   source.luau keyword.control.luau
     ^
     source.luau
      ^^^
      source.luau keyword.operator.logical.luau keyword.operator.wordlike.luau
         ^
         source.luau
          ^^^^
          source.luau variable.other.readwrite.luau
              ^
              source.luau
               ^^^^
               source.luau keyword.control.luau
>  	error(MODULE_NOT_READY_MESSAGE, 2)
 ^^^
 source.luau
    ^^^^^
    source.luau support.function.luau
         ^
         source.luau punctuation.arguments.begin.luau
          ^^^^^^^^^^^^^^^^^^^^^^^^
          source.luau variable.other.constant.luau
                                  ^
                                  source.luau punctuation.separator.arguments.luau
                                   ^
                                   source.luau
                                    ^
                                    source.luau constant.numeric.decimal.luau
                                     ^
                                     source.luau punctuation.arguments.end.luau
>  end
 ^^
 source.luau
   ^^^
   source.luau keyword.control.luau
>  
 ^^^
 source.luau
>  local classTable: ApiTypes.Class = classMap[class]
 ^^
 source.luau
   ^^^^^
   source.luau storage.modifier.local.luau
        ^
        source.luau
         ^^^^^^^^^^
         source.luau variable.other.readwrite.luau
                   ^
                   source.luau keyword.operator.type.luau
                    ^
                    source.luau
                     ^^^^^^^^
                     source.luau entity.name.type.luau
                             ^
                             source.luau
                              ^^^^^
                              source.luau entity.name.type.luau
                                   ^
                                   source.luau
                                    ^
                                    source.luau keyword.operator.assignment.luau
                                     ^
                                     source.luau
                                      ^^^^^^^^
                                      source.luau variable.other.readwrite.luau
                                              ^
                                              source.luau
                                               ^^^^^
                                               source.luau variable.other.readwrite.luau
                                                    ^^
                                                    source.luau
>  if not classTable then
 ^^
 source.luau
   ^^
   source.luau keyword.control.luau
     ^
     source.luau
      ^^^
      source.luau keyword.operator.logical.luau keyword.operator.wordlike.luau
         ^
         source.luau
          ^^^^^^^^^^
          source.luau variable.other.readwrite.luau
                    ^
                    source.luau
                     ^^^^
                     source.luau keyword.control.luau
>  	error(string.format(CLASS_NOT_REAL_MESSAGE, class), 2)
 ^^^
 source.luau
    ^^^^^
    source.luau support.function.luau
         ^
         source.luau punctuation.arguments.begin.luau
          ^^^^^^^^^^^^^
          source.luau support.function.luau
                       ^
                       source.luau punctuation.arguments.begin.luau
                        ^^^^^^^^^^^^^^^^^^^^^^
                        source.luau variable.other.constant.luau
                                              ^
                                              source.luau punctuation.separator.arguments.luau
                                               ^
                                               source.luau
                                                ^^^^^
                                                source.luau variable.other.readwrite.luau
                                                     ^
                                                     source.luau punctuation.arguments.end.luau
                                                      ^
                                                      source.luau punctuation.separator.arguments.luau
                                                       ^
                                                       source.luau
                                                        ^
                                                        source.luau constant.numeric.decimal.luau
                                                         ^
                                                         source.luau punctuation.arguments.end.luau
>  end
 ^^
 source.luau
   ^^^
   source.luau keyword.control.luau
>  
 ^^^
 source.luau
>  if member then
 ^^
 source.luau
   ^^
   source.luau keyword.control.luau
     ^
     source.luau
      ^^^^^^
      source.luau variable.other.readwrite.luau
            ^
            source.luau
             ^^^^
             source.luau keyword.control.luau
>  	local members = API.getMembers(class, {"Deprecated"})
 ^^^
 source.luau
    ^^^^^
    source.luau storage.modifier.local.luau
         ^
         source.luau
          ^^^^^^^
          source.luau variable.other.readwrite.luau
                 ^
                 source.luau
                  ^
                  source.luau keyword.operator.assignment.luau
                   ^
                   source.luau
                    ^^^
                    source.luau variable.other.constant.luau
                       ^
                       source.luau
                        ^^^^^^^^^^
                        source.luau entity.name.function.luau
                                  ^
                                  source.luau punctuation.arguments.begin.luau
                                   ^^^^^
                                   source.luau variable.other.readwrite.luau
                                        ^
                                        source.luau punctuation.separator.arguments.luau
                                         ^
                                         source.luau
                                          ^
                                          source.luau punctuation.table.begin.luau
                                           ^
                                           source.luau string.quoted.double.luau
                                            ^^^^^^^^^^
                                            source.luau string.quoted.double.luau
                                                      ^
                                                      source.luau string.quoted.double.luau
                                                       ^
                                                       source.luau punctuation.table.end.luau
                                                        ^
                                                        source.luau punctuation.arguments.end.luau
>  	if members[member] then
 ^^^
 source.luau
    ^^
    source.luau keyword.control.luau
      ^
      source.luau
       ^^^^^^^
       source.luau variable.other.readwrite.luau
              ^
              source.luau
               ^^^^^^
               source.luau variable.other.readwrite.luau
                     ^^
                     source.luau
                       ^^^^
                       source.luau keyword.control.luau
>  		return true
 ^^^^
 source.luau
     ^^^^^^
     source.luau keyword.control.luau
           ^
           source.luau
            ^^^^
            source.luau constant.language.boolean.true.luau
>  	else
 ^^^
 source.luau
    ^^^^
    source.luau keyword.control.luau
>  		return false
 ^^^^
 source.luau
     ^^^^^^
     source.luau keyword.control.luau
           ^
           source.luau
            ^^^^^
            source.luau constant.language.boolean.false.luau
>  	end
 ^^^
 source.luau
    ^^^
    source.luau keyword.control.luau
>  else
 ^^
 source.luau
   ^^^^
   source.luau keyword.control.luau
>  	local tags: typeof(classTable.Tags) = classTable.Tags
 ^^^
 source.luau
    ^^^^^
    source.luau storage.modifier.local.luau
         ^
         source.luau
          ^^^^
          source.luau variable.other.readwrite.luau
              ^
              source.luau keyword.operator.type.luau
               ^
               source.luau
                ^^^^^^
                source.luau support.function.luau
                      ^
                      source.luau punctuation.arguments.begin.typeof.luau
                       ^^^^^^^^^^
                       source.luau variable.other.readwrite.luau
                                 ^
                                 source.luau
                                  ^^^^
                                  source.luau variable.other.property.luau
                                      ^
                                      source.luau punctuation.arguments.end.typeof.luau
                                       ^
                                       source.luau
                                        ^
                                        source.luau keyword.operator.assignment.luau
                                         ^
                                         source.luau
                                          ^^^^^^^^^^
                                          source.luau variable.other.readwrite.luau
                                                    ^
                                                    source.luau
                                                     ^^^^
                                                     source.luau variable.other.property.luau
>  	if tags then
 ^^^
 source.luau
    ^^
    source.luau keyword.control.luau
      ^
      source.luau
       ^^^^
       source.luau variable.other.readwrite.luau
           ^
           source.luau
            ^^^^
            source.luau keyword.control.luau
>  		if table.find(tags, "Deprecated") then
 ^^^^
 source.luau
     ^^
     source.luau keyword.control.luau
       ^
       source.luau
        ^^^^^^^^^^
        source.luau support.function.luau
                  ^
                  source.luau punctuation.arguments.begin.luau
                   ^^^^
                   source.luau variable.other.readwrite.luau
                       ^
                       source.luau punctuation.separator.arguments.luau
                        ^
                        source.luau
                         ^
                         source.luau string.quoted.double.luau
                          ^^^^^^^^^^
                          source.luau string.quoted.double.luau
                                    ^
                                    source.luau string.quoted.double.luau
                                     ^
                                     source.luau punctuation.arguments.end.luau
                                      ^
                                      source.luau
                                       ^^^^
                                       source.luau keyword.control.luau
>  			return true
 ^^^^^
 source.luau
      ^^^^^^
      source.luau keyword.control.luau
            ^
            source.luau
             ^^^^
             source.luau constant.language.boolean.true.luau
>  		end
 ^^^^
 source.luau
     ^^^
     source.luau keyword.control.luau
>  	end
 ^^^
 source.luau
    ^^^
    source.luau keyword.control.luau
>  end
 ^^
 source.luau
   ^^^
   source.luau keyword.control.luau
>  return false
 ^^
 source.luau
   ^^^^^^
   source.luau keyword.control.luau
         ^
         source.luau
          ^^^^^
          source.luau constant.language.boolean.false.luau
>end
 ^^^
 source.luau keyword.control.luau
>
 ^
 source.luau
>function API.isService(class: string): boolean
 ^^^^^^^^
 source.luau meta.function.luau keyword.control.luau
         ^
         source.luau meta.function.luau
          ^^^
          source.luau meta.function.luau entity.name.function.luau
             ^
             source.luau meta.function.luau
              ^^^^^^^^^
              source.luau meta.function.luau entity.name.function.luau
                       ^
                       source.luau meta.function.luau meta.parameter.luau punctuation.definition.parameters.begin.luau
                        ^^^^^
                        source.luau meta.function.luau meta.parameter.luau variable.parameter.function.luau
                             ^
                             source.luau meta.function.luau meta.parameter.luau keyword.operator.type.luau
                              ^
                              source.luau meta.function.luau meta.parameter.luau
                               ^^^^^^
                               source.luau meta.function.luau meta.parameter.luau support.type.primitive.luau
                                     ^
                                     source.luau meta.function.luau meta.parameter.luau punctuation.definition.parameters.end.luau
                                      ^
                                      source.luau
                                       ^
                                       source.luau
                                        ^^^^^^^
                                        source.luau support.type.primitive.luau
>  if not dump then
 ^^
 source.luau
   ^^
   source.luau keyword.control.luau
     ^
     source.luau
      ^^^
      source.luau keyword.operator.logical.luau keyword.operator.wordlike.luau
         ^
         source.luau
          ^^^^
          source.luau variable.other.readwrite.luau
              ^
              source.luau
               ^^^^
               source.luau keyword.control.luau
>  	error(MODULE_NOT_READY_MESSAGE, 2)
 ^^^
 source.luau
    ^^^^^
    source.luau support.function.luau
         ^
         source.luau punctuation.arguments.begin.luau
          ^^^^^^^^^^^^^^^^^^^^^^^^
          source.luau variable.other.constant.luau
                                  ^
                                  source.luau punctuation.separator.arguments.luau
                                   ^
                                   source.luau
                                    ^
                                    source.luau constant.numeric.decimal.luau
                                     ^
                                     source.luau punctuation.arguments.end.luau
>  end
 ^^
 source.luau
   ^^^
   source.luau keyword.control.luau
>  
 ^^^
 source.luau
>  local classTable: ApiTypes.Class = classMap[class]
 ^^
 source.luau
   ^^^^^
   source.luau storage.modifier.local.luau
        ^
        source.luau
         ^^^^^^^^^^
         source.luau variable.other.readwrite.luau
                   ^
                   source.luau keyword.operator.type.luau
                    ^
                    source.luau
                     ^^^^^^^^
                     source.luau entity.name.type.luau
                             ^
                             source.luau
                              ^^^^^
                              source.luau entity.name.type.luau
                                   ^
                                   source.luau
                                    ^
                                    source.luau keyword.operator.assignment.luau
                                     ^
                                     source.luau
                                      ^^^^^^^^
                                      source.luau variable.other.readwrite.luau
                                              ^
                                              source.luau
                                               ^^^^^
                                               source.luau variable.other.readwrite.luau
                                                    ^^
                                                    source.luau
>  if not classTable then
 ^^
 source.luau
   ^^
   source.luau keyword.control.luau
     ^
     source.luau
      ^^^
      source.luau keyword.operator.logical.luau keyword.operator.wordlike.luau
         ^
         source.luau
          ^^^^^^^^^^
          source.luau variable.other.readwrite.luau
                    ^
                    source.luau
                     ^^^^
                     source.luau keyword.control.luau
>  	error(string.format(CLASS_NOT_REAL_MESSAGE, class), 2)
 ^^^
 source.luau
    ^^^^^
    source.luau support.function.luau
         ^
         source.luau punctuation.arguments.begin.luau
          ^^^^^^^^^^^^^
          source.luau support.function.luau
                       ^
                       source.luau punctuation.arguments.begin.luau
                        ^^^^^^^^^^^^^^^^^^^^^^
                        source.luau variable.other.constant.luau
                                              ^
                                              source.luau punctuation.separator.arguments.luau
                                               ^
                                               source.luau
                                                ^^^^^
                                                source.luau variable.other.readwrite.luau
                                                     ^
                                                     source.luau punctuation.arguments.end.luau
                                                      ^
                                                      source.luau punctuation.separator.arguments.luau
                                                       ^
                                                       source.luau
                                                        ^
                                                        source.luau constant.numeric.decimal.luau
                                                         ^
                                                         source.luau punctuation.arguments.end.luau
>  end
 ^^
 source.luau
   ^^^
   source.luau keyword.control.luau
>  
 ^^^
 source.luau
>  local tags: typeof(classTable.Tags) = classTable.Tags
 ^^
 source.luau
   ^^^^^
   source.luau storage.modifier.local.luau
        ^
        source.luau
         ^^^^
         source.luau variable.other.readwrite.luau
             ^
             source.luau keyword.operator.type.luau
              ^
              source.luau
               ^^^^^^
               source.luau support.function.luau
                     ^
                     source.luau punctuation.arguments.begin.typeof.luau
                      ^^^^^^^^^^
                      source.luau variable.other.readwrite.luau
                                ^
                                source.luau
                                 ^^^^
                                 source.luau variable.other.property.luau
                                     ^
                                     source.luau punctuation.arguments.end.typeof.luau
                                      ^
                                      source.luau
                                       ^
                                       source.luau keyword.operator.assignment.luau
                                        ^
                                        source.luau
                                         ^^^^^^^^^^
                                         source.luau variable.other.readwrite.luau
                                                   ^
                                                   source.luau
                                                    ^^^^
                                                    source.luau variable.other.property.luau
>  if tags then
 ^^
 source.luau
   ^^
   source.luau keyword.control.luau
     ^
     source.luau
      ^^^^
      source.luau variable.other.readwrite.luau
          ^
          source.luau
           ^^^^
           source.luau keyword.control.luau
>  	if table.find(tags, "Service") then
 ^^^
 source.luau
    ^^
    source.luau keyword.control.luau
      ^
      source.luau
       ^^^^^^^^^^
       source.luau support.function.luau
                 ^
                 source.luau punctuation.arguments.begin.luau
                  ^^^^
                  source.luau variable.other.readwrite.luau
                      ^
                      source.luau punctuation.separator.arguments.luau
                       ^
                       source.luau
                        ^
                        source.luau string.quoted.double.luau
                         ^^^^^^^
                         source.luau string.quoted.double.luau
                                ^
                                source.luau string.quoted.double.luau
                                 ^
                                 source.luau punctuation.arguments.end.luau
                                  ^
                                  source.luau
                                   ^^^^
                                   source.luau keyword.control.luau
>  		return true
 ^^^^
 source.luau
     ^^^^^^
     source.luau keyword.control.luau
           ^
           source.luau
            ^^^^
            source.luau constant.language.boolean.true.luau
>  	end
 ^^^
 source.luau
    ^^^
    source.luau keyword.control.luau
>  end
 ^^
 source.luau
   ^^^
   source.luau keyword.control.luau
>  return false
 ^^
 source.luau
   ^^^^^^
   source.luau keyword.control.luau
         ^
         source.luau
          ^^^^^
          source.luau constant.language.boolean.false.luau
>end
 ^^^
 source.luau keyword.control.luau
>
 ^
 source.luau
>function API.getClasses(filter: Array<string>?): Array<string>
 ^^^^^^^^
 source.luau meta.function.luau keyword.control.luau
         ^
         source.luau meta.function.luau
          ^^^
          source.luau meta.function.luau entity.name.function.luau
             ^
             source.luau meta.function.luau
              ^^^^^^^^^^
              source.luau meta.function.luau entity.name.function.luau
                        ^
                        source.luau meta.function.luau meta.parameter.luau punctuation.definition.parameters.begin.luau
                         ^^^^^^
                         source.luau meta.function.luau meta.parameter.luau variable.parameter.function.luau
                               ^
                               source.luau meta.function.luau meta.parameter.luau keyword.operator.type.luau
                                ^
                                source.luau meta.function.luau meta.parameter.luau
                                 ^^^^^
                                 source.luau meta.function.luau meta.parameter.luau entity.name.type.luau
                                      ^
                                      source.luau meta.function.luau meta.parameter.luau keyword.operator.type.luau
                                       ^^^^^^
                                       source.luau meta.function.luau meta.parameter.luau support.type.primitive.luau
                                             ^
                                             source.luau meta.function.luau meta.parameter.luau keyword.operator.type.luau
                                              ^
                                              source.luau meta.function.luau meta.parameter.luau keyword.operator.type.luau
                                               ^
                                               source.luau meta.function.luau meta.parameter.luau punctuation.definition.parameters.end.luau
                                                ^
                                                source.luau
                                                 ^
                                                 source.luau
                                                  ^^^^^
                                                  source.luau entity.name.type.luau
                                                       ^
                                                       source.luau keyword.operator.type.luau
                                                        ^^^^^^
                                                        source.luau support.type.primitive.luau
                                                              ^
                                                              source.luau keyword.operator.type.luau
>  if not dump then
 ^^
 source.luau
   ^^
   source.luau keyword.control.luau
     ^
     source.luau
      ^^^
      source.luau keyword.operator.logical.luau keyword.operator.wordlike.luau
         ^
         source.luau
          ^^^^
          source.luau variable.other.readwrite.luau
              ^
              source.luau
               ^^^^
               source.luau keyword.control.luau
>  	error(MODULE_NOT_READY_MESSAGE, 2)
 ^^^
 source.luau
    ^^^^^
    source.luau support.function.luau
         ^
         source.luau punctuation.arguments.begin.luau
          ^^^^^^^^^^^^^^^^^^^^^^^^
          source.luau variable.other.constant.luau
                                  ^
                                  source.luau punctuation.separator.arguments.luau
                                   ^
                                   source.luau
                                    ^
                                    source.luau constant.numeric.decimal.luau
                                     ^
                                     source.luau punctuation.arguments.end.luau
>  end
 ^^
 source.luau
   ^^^
   source.luau keyword.control.luau
>  local classList: Array<string> = {}
 ^^
 source.luau
   ^^^^^
   source.luau storage.modifier.local.luau
        ^
        source.luau
         ^^^^^^^^^
         source.luau variable.other.readwrite.luau
                  ^
                  source.luau keyword.operator.type.luau
                   ^
                   source.luau
                    ^^^^^
                    source.luau entity.name.type.luau
                         ^
                         source.luau keyword.operator.type.luau
                          ^^^^^^
                          source.luau support.type.primitive.luau
                                ^
                                source.luau keyword.operator.type.luau
                                 ^
                                 source.luau
                                  ^
                                  source.luau keyword.operator.assignment.luau
                                   ^
                                   source.luau
                                    ^
                                    source.luau punctuation.table.begin.luau
                                     ^
                                     source.luau punctuation.table.end.luau
>  
 ^^^
 source.luau
>  local tagLookup: Dictionary<boolean> = lookupify(filter)
 ^^
 source.luau
   ^^^^^
   source.luau storage.modifier.local.luau
        ^
        source.luau
         ^^^^^^^^^
         source.luau variable.other.readwrite.luau
                  ^
                  source.luau keyword.operator.type.luau
                   ^
                   source.luau
                    ^^^^^^^^^^
                    source.luau entity.name.type.luau
                              ^
                              source.luau keyword.operator.type.luau
                               ^^^^^^^
                               source.luau support.type.primitive.luau
                                      ^
                                      source.luau keyword.operator.type.luau
                                       ^
                                       source.luau
                                        ^
                                        source.luau keyword.operator.assignment.luau
                                         ^
                                         source.luau
                                          ^^^^^^^^^
                                          source.luau entity.name.function.luau
                                                   ^
                                                   source.luau punctuation.arguments.begin.luau
                                                    ^^^^^^
                                                    source.luau variable.other.readwrite.luau
                                                          ^
                                                          source.luau punctuation.arguments.end.luau
>  
 ^^^
 source.luau
>  local classCount = 1
 ^^
 source.luau
   ^^^^^
   source.luau storage.modifier.local.luau
        ^
        source.luau
         ^^^^^^^^^^
         source.luau variable.other.readwrite.luau
                   ^
                   source.luau
                    ^
                    source.luau keyword.operator.assignment.luau
                     ^
                     source.luau
                      ^
                      source.luau constant.numeric.decimal.luau
>  
 ^^^
 source.luau
>  for _, v in ipairs(dump.Classes) do
 ^^
 source.luau
   ^^^
   source.luau keyword.control.luau
      ^
      source.luau
       ^
       source.luau variable.parameter.luau
        ^^
        source.luau
          ^
          source.luau variable.parameter.luau
           ^
           source.luau
            ^^
            source.luau keyword.control.luau
              ^
              source.luau
               ^^^^^^
               source.luau support.function.luau
                     ^
                     source.luau punctuation.arguments.begin.luau
                      ^^^^
                      source.luau variable.other.readwrite.luau
                          ^
                          source.luau
                           ^^^^^^^
                           source.luau variable.other.property.luau
                                  ^
                                  source.luau punctuation.arguments.end.luau
                                   ^
                                   source.luau
                                    ^^
                                    source.luau keyword.control.luau
>  	if filterTags(v.Tags, tagLookup) then continue end
 ^^^
 source.luau
    ^^
    source.luau keyword.control.luau
      ^
      source.luau
       ^^^^^^^^^^
       source.luau entity.name.function.luau
                 ^
                 source.luau punctuation.arguments.begin.luau
                  ^
                  source.luau variable.other.readwrite.luau
                   ^
                   source.luau
                    ^^^^
                    source.luau variable.other.property.luau
                        ^
                        source.luau punctuation.separator.arguments.luau
                         ^
                         source.luau
                          ^^^^^^^^^
                          source.luau variable.other.readwrite.luau
                                   ^
                                   source.luau punctuation.arguments.end.luau
                                    ^
                                    source.luau
                                     ^^^^
                                     source.luau keyword.control.luau
                                         ^
                                         source.luau
                                          ^^^^^^^^
                                          source.luau keyword.control.luau
                                                  ^
                                                  source.luau
                                                   ^^^
                                                   source.luau keyword.control.luau
>  	
 ^^^^
 source.luau
>  	classList[classCount] = v.Name
 ^^^
 source.luau
    ^^^^^^^^^
    source.luau variable.other.readwrite.luau
             ^
             source.luau
              ^^^^^^^^^^
              source.luau variable.other.readwrite.luau
                        ^^
                        source.luau
                          ^
                          source.luau keyword.operator.assignment.luau
                           ^
                           source.luau
                            ^
                            source.luau variable.other.readwrite.luau
                             ^
                             source.luau
                              ^^^^
                              source.luau variable.other.property.luau
>  	classCount += 1
 ^^^
 source.luau
    ^^^^^^^^^^
    source.luau variable.other.readwrite.luau
              ^
              source.luau
               ^^
               source.luau keyword.operator.assignment.luau
                 ^
                 source.luau
                  ^
                  source.luau constant.numeric.decimal.luau
>  end
 ^^
 source.luau
   ^^^
   source.luau keyword.control.luau
>  
 ^^^
 source.luau
>  return classList
 ^^
 source.luau
   ^^^^^^
   source.luau keyword.control.luau
         ^
         source.luau
          ^^^^^^^^^
          source.luau variable.other.readwrite.luau
>end
 ^^^
 source.luau keyword.control.luau
>
 ^
 source.luau
>function API.getEnums(filter: Array<string>?): Array<string>
 ^^^^^^^^
 source.luau meta.function.luau keyword.control.luau
         ^
         source.luau meta.function.luau
          ^^^
          source.luau meta.function.luau entity.name.function.luau
             ^
             source.luau meta.function.luau
              ^^^^^^^^
              source.luau meta.function.luau entity.name.function.luau
                      ^
                      source.luau meta.function.luau meta.parameter.luau punctuation.definition.parameters.begin.luau
                       ^^^^^^
                       source.luau meta.function.luau meta.parameter.luau variable.parameter.function.luau
                             ^
                             source.luau meta.function.luau meta.parameter.luau keyword.operator.type.luau
                              ^
                              source.luau meta.function.luau meta.parameter.luau
                               ^^^^^
                               source.luau meta.function.luau meta.parameter.luau entity.name.type.luau
                                    ^
                                    source.luau meta.function.luau meta.parameter.luau keyword.operator.type.luau
                                     ^^^^^^
                                     source.luau meta.function.luau meta.parameter.luau support.type.primitive.luau
                                           ^
                                           source.luau meta.function.luau meta.parameter.luau keyword.operator.type.luau
                                            ^
                                            source.luau meta.function.luau meta.parameter.luau keyword.operator.type.luau
                                             ^
                                             source.luau meta.function.luau meta.parameter.luau punctuation.definition.parameters.end.luau
                                              ^
                                              source.luau
                                               ^
                                               source.luau
                                                ^^^^^
                                                source.luau entity.name.type.luau
                                                     ^
                                                     source.luau keyword.operator.type.luau
                                                      ^^^^^^
                                                      source.luau support.type.primitive.luau
                                                            ^
                                                            source.luau keyword.operator.type.luau
>  if not dump then
 ^^
 source.luau
   ^^
   source.luau keyword.control.luau
     ^
     source.luau
      ^^^
      source.luau keyword.operator.logical.luau keyword.operator.wordlike.luau
         ^
         source.luau
          ^^^^
          source.luau variable.other.readwrite.luau
              ^
              source.luau
               ^^^^
               source.luau keyword.control.luau
>  	error(MODULE_NOT_READY_MESSAGE, 2)
 ^^^
 source.luau
    ^^^^^
    source.luau support.function.luau
         ^
         source.luau punctuation.arguments.begin.luau
          ^^^^^^^^^^^^^^^^^^^^^^^^
          source.luau variable.other.constant.luau
                                  ^
                                  source.luau punctuation.separator.arguments.luau
                                   ^
                                   source.luau
                                    ^
                                    source.luau constant.numeric.decimal.luau
                                     ^
                                     source.luau punctuation.arguments.end.luau
>  end
 ^^
 source.luau
   ^^^
   source.luau keyword.control.luau
>  local enumList: Array<string> = {}
 ^^
 source.luau
   ^^^^^
   source.luau storage.modifier.local.luau
        ^
        source.luau
         ^^^^^^^^
         source.luau variable.other.readwrite.luau
                 ^
                 source.luau keyword.operator.type.luau
                  ^
                  source.luau
                   ^^^^^
                   source.luau entity.name.type.luau
                        ^
                        source.luau keyword.operator.type.luau
                         ^^^^^^
                         source.luau support.type.primitive.luau
                               ^
                               source.luau keyword.operator.type.luau
                                ^
                                source.luau
                                 ^
                                 source.luau keyword.operator.assignment.luau
                                  ^
                                  source.luau
                                   ^
                                   source.luau punctuation.table.begin.luau
                                    ^
                                    source.luau punctuation.table.end.luau
>  
 ^^^
 source.luau
>  local tagLookup: Dictionary<boolean> = lookupify(filter)
 ^^
 source.luau
   ^^^^^
   source.luau storage.modifier.local.luau
        ^
        source.luau
         ^^^^^^^^^
         source.luau variable.other.readwrite.luau
                  ^
                  source.luau keyword.operator.type.luau
                   ^
                   source.luau
                    ^^^^^^^^^^
                    source.luau entity.name.type.luau
                              ^
                              source.luau keyword.operator.type.luau
                               ^^^^^^^
                               source.luau support.type.primitive.luau
                                      ^
                                      source.luau keyword.operator.type.luau
                                       ^
                                       source.luau
                                        ^
                                        source.luau keyword.operator.assignment.luau
                                         ^
                                         source.luau
                                          ^^^^^^^^^
                                          source.luau entity.name.function.luau
                                                   ^
                                                   source.luau punctuation.arguments.begin.luau
                                                    ^^^^^^
                                                    source.luau variable.other.readwrite.luau
                                                          ^
                                                          source.luau punctuation.arguments.end.luau
>  
 ^^^
 source.luau
>  local enumCount = 1
 ^^
 source.luau
   ^^^^^
   source.luau storage.modifier.local.luau
        ^
        source.luau
         ^^^^^^^^^
         source.luau variable.other.readwrite.luau
                  ^
                  source.luau
                   ^
                   source.luau keyword.operator.assignment.luau
                    ^
                    source.luau
                     ^
                     source.luau constant.numeric.decimal.luau
>  
 ^^^
 source.luau
>  for _, v in ipairs(dump.Enums) do
 ^^
 source.luau
   ^^^
   source.luau keyword.control.luau
      ^
      source.luau
       ^
       source.luau variable.parameter.luau
        ^^
        source.luau
          ^
          source.luau variable.parameter.luau
           ^
           source.luau
            ^^
            source.luau keyword.control.luau
              ^
              source.luau
               ^^^^^^
               source.luau support.function.luau
                     ^
                     source.luau punctuation.arguments.begin.luau
                      ^^^^
                      source.luau variable.other.readwrite.luau
                          ^
                          source.luau
                           ^^^^^
                           source.luau variable.other.property.luau
                                ^
                                source.luau punctuation.arguments.end.luau
                                 ^
                                 source.luau
                                  ^^
                                  source.luau keyword.control.luau
>  	if filterTags(v.Tags, tagLookup) then continue end
 ^^^
 source.luau
    ^^
    source.luau keyword.control.luau
      ^
      source.luau
       ^^^^^^^^^^
       source.luau entity.name.function.luau
                 ^
                 source.luau punctuation.arguments.begin.luau
                  ^
                  source.luau variable.other.readwrite.luau
                   ^
                   source.luau
                    ^^^^
                    source.luau variable.other.property.luau
                        ^
                        source.luau punctuation.separator.arguments.luau
                         ^
                         source.luau
                          ^^^^^^^^^
                          source.luau variable.other.readwrite.luau
                                   ^
                                   source.luau punctuation.arguments.end.luau
                                    ^
                                    source.luau
                                     ^^^^
                                     source.luau keyword.control.luau
                                         ^
                                         source.luau
                                          ^^^^^^^^
                                          source.luau keyword.control.luau
                                                  ^
                                                  source.luau
                                                   ^^^
                                                   source.luau keyword.control.luau
>  	
 ^^^^
 source.luau
>  	enumList[enumCount] = v.Name
 ^^^
 source.luau
    ^^^^^^^^
    source.luau variable.other.readwrite.luau
            ^
            source.luau
             ^^^^^^^^^
             source.luau variable.other.readwrite.luau
                      ^^
                      source.luau
                        ^
                        source.luau keyword.operator.assignment.luau
                         ^
                         source.luau
                          ^
                          source.luau variable.other.readwrite.luau
                           ^
                           source.luau
                            ^^^^
                            source.luau variable.other.property.luau
>  	enumCount += 1
 ^^^
 source.luau
    ^^^^^^^^^
    source.luau variable.other.readwrite.luau
             ^
             source.luau
              ^^
              source.luau keyword.operator.assignment.luau
                ^
                source.luau
                 ^
                 source.luau constant.numeric.decimal.luau
>  end
 ^^
 source.luau
   ^^^
   source.luau keyword.control.luau
>  
 ^^^
 source.luau
>  return enumList
 ^^
 source.luau
   ^^^^^^
   source.luau keyword.control.luau
         ^
         source.luau
          ^^^^^^^^
          source.luau variable.other.readwrite.luau
>end
 ^^^
 source.luau keyword.control.luau
>
 ^
 source.luau
>export type Member = ApiTypes.Member
 ^^^^^^
 source.luau storage.modifier.visibility.luau
       ^
       source.luau
        ^^^^
        source.luau storage.type.luau
            ^
            source.luau
             ^^^^^^
             source.luau entity.name.type.luau
                   ^
                   source.luau
                    ^
                    source.luau keyword.operator.assignment.luau
                     ^
                     source.luau
                      ^^^^^^^^
                      source.luau entity.name.type.luau
                              ^
                              source.luau
                               ^^^^^^
                               source.luau entity.name.type.luau
>export type Property = ApiTypes.Property
 ^^^^^^
 source.luau storage.modifier.visibility.luau
       ^
       source.luau
        ^^^^
        source.luau storage.type.luau
            ^
            source.luau
             ^^^^^^^^
             source.luau entity.name.type.luau
                     ^
                     source.luau
                      ^
                      source.luau keyword.operator.assignment.luau
                       ^
                       source.luau
                        ^^^^^^^^
                        source.luau entity.name.type.luau
                                ^
                                source.luau
                                 ^^^^^^^^
                                 source.luau entity.name.type.luau
>export type Function = ApiTypes.Function
 ^^^^^^
 source.luau storage.modifier.visibility.luau
       ^
       source.luau
        ^^^^
        source.luau storage.type.luau
            ^
            source.luau
             ^^^^^^^^
             source.luau entity.name.type.luau
                     ^
                     source.luau
                      ^
                      source.luau keyword.operator.assignment.luau
                       ^
                       source.luau
                        ^^^^^^^^
                        source.luau entity.name.type.luau
                                ^
                                source.luau
                                 ^^^^^^^^
                                 source.luau entity.name.type.luau
>export type Event = ApiTypes.Event
 ^^^^^^
 source.luau storage.modifier.visibility.luau
       ^
       source.luau
        ^^^^
        source.luau storage.type.luau
            ^
            source.luau
             ^^^^^
             source.luau entity.name.type.luau
                  ^
                  source.luau
                   ^
                   source.luau keyword.operator.assignment.luau
                    ^
                    source.luau
                     ^^^^^^^^
                     source.luau entity.name.type.luau
                             ^
                             source.luau
                              ^^^^^
                              source.luau entity.name.type.luau
>export type Callback = ApiTypes.Callback
 ^^^^^^
 source.luau storage.modifier.visibility.luau
       ^
       source.luau
        ^^^^
        source.luau storage.type.luau
            ^
            source.luau
             ^^^^^^^^
             source.luau entity.name.type.luau
                     ^
                     source.luau
                      ^
                      source.luau keyword.operator.assignment.luau
                       ^
                       source.luau
                        ^^^^^^^^
                        source.luau entity.name.type.luau
                                ^
                                source.luau
                                 ^^^^^^^^
                                 source.luau entity.name.type.luau
>
 ^
 source.luau
>return API
 ^^^^^^
 source.luau keyword.control.luau
       ^
       source.luau
        ^^^
        source.luau variable.other.constant.luau
>
 ^
 source.luau