original file
-----------------------------------
-- https://github.com/JohnnyMorganz/StyLua/issues/405
do
  for _,v in ipairs({
  	Kind.SELECTION_sET,
  	Kind.DIRECTIVE,
  	Kind.OEPRATION_DEFINITION,
  	Kind.INLINE_FRAGMENT,
  	Kind.FRAGMENT_DEFINITION,
  	Kind.ARGUMENT,
  }) do
  end
end

do
  for _,v in ipairs {
  	Kind.SELECTION_sET,
  	Kind.DIRECTIVE,
  	Kind.OEPRATION_DEFINITION,
  	Kind.INLINE_FRAGMENT,
  	Kind.FRAGMENT_DEFINITION,
  	Kind.ARGUMENT,
  } do
  end
end

-- These cases should not hug:
do
  for _,v in ipairs({
  	Kind.SELECTION_sET,
  	Kind.DIRECTIVE,
  	Kind.OEPRATION_DEFINITION,
  	Kind.INLINE_FRAGMENT,
  	Kind.FRAGMENT_DEFINITION,
  	Kind.ARGUMENT,
  }) -- comment
  do
  end
end

do
  for _,v in ipairs(foo and {
  	Kind.SELECTION_sET,
  	Kind.DIRECTIVE,
  	Kind.OEPRATION_DEFINITION,
  	Kind.INLINE_FRAGMENT,
  	Kind.FRAGMENT_DEFINITION,
  	Kind.ARGUMENT,
  } or bar)
  do
  end
end

do
  for _,v in call(function()
  	return { test, another }
  end) do
  end
end

do
  for _,v in call({
  	Kind.SELECTION_sET,
  	Kind.DIRECTIVE,
  	Kind.OEPRATION_DEFINITION,
  	Kind.INLINE_FRAGMENT,
  	Kind.FRAGMENT_DEFINITION,
  	Kind.ARGUMENT,
  }), anotherThing do
  end
end

do
  for _,v in call({
  	Kind.SELECTION_sET,
  	Kind.DIRECTIVE,
  	Kind.OEPRATION_DEFINITION,
  	Kind.INLINE_FRAGMENT,
  	Kind.FRAGMENT_DEFINITION,
  	Kind.ARGUMENT,
  }, "failure case") do
  end
end

do
  for _,v in call({
  	Kind.SELECTION_sET,
  	Kind.DIRECTIVE,
  	Kind.OEPRATION_DEFINITION,
  	Kind.INLINE_FRAGMENT,
  	Kind.FRAGMENT_DEFINITION,
  	Kind.ARGUMENT,
  })(true) do
  end
end

do
  for _,v in x.y.z.call({
  	Kind.SELECTION_sET,
  	Kind.DIRECTIVE,
  	Kind.OEPRATION_DEFINITION,
  	Kind.INLINE_FRAGMENT,
  	Kind.FRAGMENT_DEFINITION,
  	Kind.ARGUMENT,
  }) do
  end
end

do
  for _,v in foo and call({
  	Kind.SELECTION_sET,
  	Kind.DIRECTIVE,
  	Kind.OEPRATION_DEFINITION,
  	Kind.INLINE_FRAGMENT,
  	Kind.FRAGMENT_DEFINITION,
  	Kind.ARGUMENT,
  }) or otherCall() do
  end
end

do
  for _,v in (foo({
  	Kind.SELECTION_sET,
  	Kind.DIRECTIVE,
  	Kind.OEPRATION_DEFINITION,
  	Kind.INLINE_FRAGMENT,
  	Kind.FRAGMENT_DEFINITION,
  	Kind.ARGUMENT,
  }) or true) do
  end
end

do
  for _,v in "thissssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss" do
  end
end

-----------------------------------

>-- https://github.com/JohnnyMorganz/StyLua/issues/405
 ^^
 source.luau comment.line.double-dash.luau
   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   source.luau comment.line.double-dash.luau
>do
 ^^
 source.luau keyword.control.luau
>  for _,v in ipairs({
 ^^
 source.luau
   ^^^
   source.luau keyword.control.luau
      ^
      source.luau
       ^
       source.luau variable.parameter.luau
        ^
        source.luau
         ^
         source.luau variable.parameter.luau
          ^
          source.luau
           ^^
           source.luau keyword.control.luau
             ^
             source.luau
              ^^^^^^
              source.luau support.function.luau
                    ^
                    source.luau punctuation.arguments.begin.luau
                     ^
                     source.luau punctuation.table.begin.luau
>  	Kind.SELECTION_sET,
 ^^^
 source.luau
    ^^^^
    source.luau variable.other.readwrite.luau
        ^
        source.luau
         ^^^^^^^^^^^^^
         source.luau variable.other.property.luau
                      ^
                      source.luau punctuation.separator.fields.luau
>  	Kind.DIRECTIVE,
 ^^^
 source.luau
    ^^^^
    source.luau variable.other.readwrite.luau
        ^
        source.luau
         ^^^^^^^^^
         source.luau variable.other.property.luau
                  ^
                  source.luau punctuation.separator.fields.luau
>  	Kind.OEPRATION_DEFINITION,
 ^^^
 source.luau
    ^^^^
    source.luau variable.other.readwrite.luau
        ^
        source.luau
         ^^^^^^^^^^^^^^^^^^^^
         source.luau variable.other.property.luau
                             ^
                             source.luau punctuation.separator.fields.luau
>  	Kind.INLINE_FRAGMENT,
 ^^^
 source.luau
    ^^^^
    source.luau variable.other.readwrite.luau
        ^
        source.luau
         ^^^^^^^^^^^^^^^
         source.luau variable.other.property.luau
                        ^
                        source.luau punctuation.separator.fields.luau
>  	Kind.FRAGMENT_DEFINITION,
 ^^^
 source.luau
    ^^^^
    source.luau variable.other.readwrite.luau
        ^
        source.luau
         ^^^^^^^^^^^^^^^^^^^
         source.luau variable.other.property.luau
                            ^
                            source.luau punctuation.separator.fields.luau
>  	Kind.ARGUMENT,
 ^^^
 source.luau
    ^^^^
    source.luau variable.other.readwrite.luau
        ^
        source.luau
         ^^^^^^^^
         source.luau variable.other.property.luau
                 ^
                 source.luau punctuation.separator.fields.luau
>  }) do
 ^^
 source.luau
   ^
   source.luau punctuation.table.end.luau
    ^
    source.luau punctuation.arguments.end.luau
     ^
     source.luau
      ^^
      source.luau keyword.control.luau
>  end
 ^^
 source.luau
   ^^^
   source.luau keyword.control.luau
>end
 ^^^
 source.luau keyword.control.luau
>
 ^
 source.luau
>do
 ^^
 source.luau keyword.control.luau
>  for _,v in ipairs {
 ^^
 source.luau
   ^^^
   source.luau keyword.control.luau
      ^
      source.luau
       ^
       source.luau variable.parameter.luau
        ^
        source.luau
         ^
         source.luau variable.parameter.luau
          ^
          source.luau
           ^^
           source.luau keyword.control.luau
             ^
             source.luau
              ^^^^^^
              source.luau support.function.luau
                    ^
                    source.luau
                     ^
                     source.luau punctuation.table.begin.luau
>  	Kind.SELECTION_sET,
 ^^^
 source.luau
    ^^^^
    source.luau variable.other.readwrite.luau
        ^
        source.luau
         ^^^^^^^^^^^^^
         source.luau variable.other.property.luau
                      ^
                      source.luau punctuation.separator.fields.luau
>  	Kind.DIRECTIVE,
 ^^^
 source.luau
    ^^^^
    source.luau variable.other.readwrite.luau
        ^
        source.luau
         ^^^^^^^^^
         source.luau variable.other.property.luau
                  ^
                  source.luau punctuation.separator.fields.luau
>  	Kind.OEPRATION_DEFINITION,
 ^^^
 source.luau
    ^^^^
    source.luau variable.other.readwrite.luau
        ^
        source.luau
         ^^^^^^^^^^^^^^^^^^^^
         source.luau variable.other.property.luau
                             ^
                             source.luau punctuation.separator.fields.luau
>  	Kind.INLINE_FRAGMENT,
 ^^^
 source.luau
    ^^^^
    source.luau variable.other.readwrite.luau
        ^
        source.luau
         ^^^^^^^^^^^^^^^
         source.luau variable.other.property.luau
                        ^
                        source.luau punctuation.separator.fields.luau
>  	Kind.FRAGMENT_DEFINITION,
 ^^^
 source.luau
    ^^^^
    source.luau variable.other.readwrite.luau
        ^
        source.luau
         ^^^^^^^^^^^^^^^^^^^
         source.luau variable.other.property.luau
                            ^
                            source.luau punctuation.separator.fields.luau
>  	Kind.ARGUMENT,
 ^^^
 source.luau
    ^^^^
    source.luau variable.other.readwrite.luau
        ^
        source.luau
         ^^^^^^^^
         source.luau variable.other.property.luau
                 ^
                 source.luau punctuation.separator.fields.luau
>  } do
 ^^
 source.luau
   ^
   source.luau punctuation.table.end.luau
    ^
    source.luau
     ^^
     source.luau keyword.control.luau
>  end
 ^^
 source.luau
   ^^^
   source.luau keyword.control.luau
>end
 ^^^
 source.luau keyword.control.luau
>
 ^
 source.luau
>-- These cases should not hug:
 ^^
 source.luau comment.line.double-dash.luau
   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   source.luau comment.line.double-dash.luau
>do
 ^^
 source.luau keyword.control.luau
>  for _,v in ipairs({
 ^^
 source.luau
   ^^^
   source.luau keyword.control.luau
      ^
      source.luau
       ^
       source.luau variable.parameter.luau
        ^
        source.luau
         ^
         source.luau variable.parameter.luau
          ^
          source.luau
           ^^
           source.luau keyword.control.luau
             ^
             source.luau
              ^^^^^^
              source.luau support.function.luau
                    ^
                    source.luau punctuation.arguments.begin.luau
                     ^
                     source.luau punctuation.table.begin.luau
>  	Kind.SELECTION_sET,
 ^^^
 source.luau
    ^^^^
    source.luau variable.other.readwrite.luau
        ^
        source.luau
         ^^^^^^^^^^^^^
         source.luau variable.other.property.luau
                      ^
                      source.luau punctuation.separator.fields.luau
>  	Kind.DIRECTIVE,
 ^^^
 source.luau
    ^^^^
    source.luau variable.other.readwrite.luau
        ^
        source.luau
         ^^^^^^^^^
         source.luau variable.other.property.luau
                  ^
                  source.luau punctuation.separator.fields.luau
>  	Kind.OEPRATION_DEFINITION,
 ^^^
 source.luau
    ^^^^
    source.luau variable.other.readwrite.luau
        ^
        source.luau
         ^^^^^^^^^^^^^^^^^^^^
         source.luau variable.other.property.luau
                             ^
                             source.luau punctuation.separator.fields.luau
>  	Kind.INLINE_FRAGMENT,
 ^^^
 source.luau
    ^^^^
    source.luau variable.other.readwrite.luau
        ^
        source.luau
         ^^^^^^^^^^^^^^^
         source.luau variable.other.property.luau
                        ^
                        source.luau punctuation.separator.fields.luau
>  	Kind.FRAGMENT_DEFINITION,
 ^^^
 source.luau
    ^^^^
    source.luau variable.other.readwrite.luau
        ^
        source.luau
         ^^^^^^^^^^^^^^^^^^^
         source.luau variable.other.property.luau
                            ^
                            source.luau punctuation.separator.fields.luau
>  	Kind.ARGUMENT,
 ^^^
 source.luau
    ^^^^
    source.luau variable.other.readwrite.luau
        ^
        source.luau
         ^^^^^^^^
         source.luau variable.other.property.luau
                 ^
                 source.luau punctuation.separator.fields.luau
>  }) -- comment
 ^^
 source.luau
   ^
   source.luau punctuation.table.end.luau
    ^
    source.luau punctuation.arguments.end.luau
     ^
     source.luau
      ^^
      source.luau comment.line.double-dash.luau
        ^^^^^^^^
        source.luau comment.line.double-dash.luau
>  do
 ^^
 source.luau
   ^^
   source.luau keyword.control.luau
>  end
 ^^
 source.luau
   ^^^
   source.luau keyword.control.luau
>end
 ^^^
 source.luau keyword.control.luau
>
 ^
 source.luau
>do
 ^^
 source.luau keyword.control.luau
>  for _,v in ipairs(foo and {
 ^^
 source.luau
   ^^^
   source.luau keyword.control.luau
      ^
      source.luau
       ^
       source.luau variable.parameter.luau
        ^
        source.luau
         ^
         source.luau variable.parameter.luau
          ^
          source.luau
           ^^
           source.luau keyword.control.luau
             ^
             source.luau
              ^^^^^^
              source.luau support.function.luau
                    ^
                    source.luau punctuation.arguments.begin.luau
                     ^^^
                     source.luau variable.other.readwrite.luau
                        ^
                        source.luau
                         ^^^
                         source.luau keyword.operator.logical.luau keyword.operator.wordlike.luau
                            ^
                            source.luau
                             ^
                             source.luau punctuation.table.begin.luau
>  	Kind.SELECTION_sET,
 ^^^
 source.luau
    ^^^^
    source.luau variable.other.readwrite.luau
        ^
        source.luau
         ^^^^^^^^^^^^^
         source.luau variable.other.property.luau
                      ^
                      source.luau punctuation.separator.fields.luau
>  	Kind.DIRECTIVE,
 ^^^
 source.luau
    ^^^^
    source.luau variable.other.readwrite.luau
        ^
        source.luau
         ^^^^^^^^^
         source.luau variable.other.property.luau
                  ^
                  source.luau punctuation.separator.fields.luau
>  	Kind.OEPRATION_DEFINITION,
 ^^^
 source.luau
    ^^^^
    source.luau variable.other.readwrite.luau
        ^
        source.luau
         ^^^^^^^^^^^^^^^^^^^^
         source.luau variable.other.property.luau
                             ^
                             source.luau punctuation.separator.fields.luau
>  	Kind.INLINE_FRAGMENT,
 ^^^
 source.luau
    ^^^^
    source.luau variable.other.readwrite.luau
        ^
        source.luau
         ^^^^^^^^^^^^^^^
         source.luau variable.other.property.luau
                        ^
                        source.luau punctuation.separator.fields.luau
>  	Kind.FRAGMENT_DEFINITION,
 ^^^
 source.luau
    ^^^^
    source.luau variable.other.readwrite.luau
        ^
        source.luau
         ^^^^^^^^^^^^^^^^^^^
         source.luau variable.other.property.luau
                            ^
                            source.luau punctuation.separator.fields.luau
>  	Kind.ARGUMENT,
 ^^^
 source.luau
    ^^^^
    source.luau variable.other.readwrite.luau
        ^
        source.luau
         ^^^^^^^^
         source.luau variable.other.property.luau
                 ^
                 source.luau punctuation.separator.fields.luau
>  } or bar)
 ^^
 source.luau
   ^
   source.luau punctuation.table.end.luau
    ^
    source.luau
     ^^
     source.luau keyword.operator.logical.luau keyword.operator.wordlike.luau
       ^
       source.luau
        ^^^
        source.luau variable.other.readwrite.luau
           ^
           source.luau punctuation.arguments.end.luau
>  do
 ^^
 source.luau
   ^^
   source.luau keyword.control.luau
>  end
 ^^
 source.luau
   ^^^
   source.luau keyword.control.luau
>end
 ^^^
 source.luau keyword.control.luau
>
 ^
 source.luau
>do
 ^^
 source.luau keyword.control.luau
>  for _,v in call(function()
 ^^
 source.luau
   ^^^
   source.luau keyword.control.luau
      ^
      source.luau
       ^
       source.luau variable.parameter.luau
        ^
        source.luau
         ^
         source.luau variable.parameter.luau
          ^
          source.luau
           ^^
           source.luau keyword.control.luau
             ^
             source.luau
              ^^^^
              source.luau entity.name.function.luau
                  ^
                  source.luau punctuation.arguments.begin.luau
                   ^^^^^^^^
                   source.luau meta.function.luau keyword.control.luau
                           ^
                           source.luau meta.function.luau meta.parameter.luau punctuation.definition.parameters.begin.luau
                            ^
                            source.luau meta.function.luau meta.parameter.luau punctuation.definition.parameters.end.luau
>  	return { test, another }
 ^^^
 source.luau
    ^^^^^^
    source.luau keyword.control.luau
          ^
          source.luau
           ^
           source.luau punctuation.table.begin.luau
            ^
            source.luau
             ^^^^
             source.luau variable.other.readwrite.luau
                 ^
                 source.luau punctuation.separator.fields.luau
                  ^
                  source.luau
                   ^^^^^^^
                   source.luau variable.other.readwrite.luau
                          ^
                          source.luau
                           ^
                           source.luau punctuation.table.end.luau
>  end) do
 ^^
 source.luau
   ^^^
   source.luau keyword.control.luau
      ^
      source.luau punctuation.arguments.end.luau
       ^
       source.luau
        ^^
        source.luau keyword.control.luau
>  end
 ^^
 source.luau
   ^^^
   source.luau keyword.control.luau
>end
 ^^^
 source.luau keyword.control.luau
>
 ^
 source.luau
>do
 ^^
 source.luau keyword.control.luau
>  for _,v in call({
 ^^
 source.luau
   ^^^
   source.luau keyword.control.luau
      ^
      source.luau
       ^
       source.luau variable.parameter.luau
        ^
        source.luau
         ^
         source.luau variable.parameter.luau
          ^
          source.luau
           ^^
           source.luau keyword.control.luau
             ^
             source.luau
              ^^^^
              source.luau entity.name.function.luau
                  ^
                  source.luau punctuation.arguments.begin.luau
                   ^
                   source.luau punctuation.table.begin.luau
>  	Kind.SELECTION_sET,
 ^^^
 source.luau
    ^^^^
    source.luau variable.other.readwrite.luau
        ^
        source.luau
         ^^^^^^^^^^^^^
         source.luau variable.other.property.luau
                      ^
                      source.luau punctuation.separator.fields.luau
>  	Kind.DIRECTIVE,
 ^^^
 source.luau
    ^^^^
    source.luau variable.other.readwrite.luau
        ^
        source.luau
         ^^^^^^^^^
         source.luau variable.other.property.luau
                  ^
                  source.luau punctuation.separator.fields.luau
>  	Kind.OEPRATION_DEFINITION,
 ^^^
 source.luau
    ^^^^
    source.luau variable.other.readwrite.luau
        ^
        source.luau
         ^^^^^^^^^^^^^^^^^^^^
         source.luau variable.other.property.luau
                             ^
                             source.luau punctuation.separator.fields.luau
>  	Kind.INLINE_FRAGMENT,
 ^^^
 source.luau
    ^^^^
    source.luau variable.other.readwrite.luau
        ^
        source.luau
         ^^^^^^^^^^^^^^^
         source.luau variable.other.property.luau
                        ^
                        source.luau punctuation.separator.fields.luau
>  	Kind.FRAGMENT_DEFINITION,
 ^^^
 source.luau
    ^^^^
    source.luau variable.other.readwrite.luau
        ^
        source.luau
         ^^^^^^^^^^^^^^^^^^^
         source.luau variable.other.property.luau
                            ^
                            source.luau punctuation.separator.fields.luau
>  	Kind.ARGUMENT,
 ^^^
 source.luau
    ^^^^
    source.luau variable.other.readwrite.luau
        ^
        source.luau
         ^^^^^^^^
         source.luau variable.other.property.luau
                 ^
                 source.luau punctuation.separator.fields.luau
>  }), anotherThing do
 ^^
 source.luau
   ^
   source.luau punctuation.table.end.luau
    ^
    source.luau punctuation.arguments.end.luau
     ^^
     source.luau
       ^^^^^^^^^^^^
       source.luau variable.other.readwrite.luau
                   ^
                   source.luau
                    ^^
                    source.luau keyword.control.luau
>  end
 ^^
 source.luau
   ^^^
   source.luau keyword.control.luau
>end
 ^^^
 source.luau keyword.control.luau
>
 ^
 source.luau
>do
 ^^
 source.luau keyword.control.luau
>  for _,v in call({
 ^^
 source.luau
   ^^^
   source.luau keyword.control.luau
      ^
      source.luau
       ^
       source.luau variable.parameter.luau
        ^
        source.luau
         ^
         source.luau variable.parameter.luau
          ^
          source.luau
           ^^
           source.luau keyword.control.luau
             ^
             source.luau
              ^^^^
              source.luau entity.name.function.luau
                  ^
                  source.luau punctuation.arguments.begin.luau
                   ^
                   source.luau punctuation.table.begin.luau
>  	Kind.SELECTION_sET,
 ^^^
 source.luau
    ^^^^
    source.luau variable.other.readwrite.luau
        ^
        source.luau
         ^^^^^^^^^^^^^
         source.luau variable.other.property.luau
                      ^
                      source.luau punctuation.separator.fields.luau
>  	Kind.DIRECTIVE,
 ^^^
 source.luau
    ^^^^
    source.luau variable.other.readwrite.luau
        ^
        source.luau
         ^^^^^^^^^
         source.luau variable.other.property.luau
                  ^
                  source.luau punctuation.separator.fields.luau
>  	Kind.OEPRATION_DEFINITION,
 ^^^
 source.luau
    ^^^^
    source.luau variable.other.readwrite.luau
        ^
        source.luau
         ^^^^^^^^^^^^^^^^^^^^
         source.luau variable.other.property.luau
                             ^
                             source.luau punctuation.separator.fields.luau
>  	Kind.INLINE_FRAGMENT,
 ^^^
 source.luau
    ^^^^
    source.luau variable.other.readwrite.luau
        ^
        source.luau
         ^^^^^^^^^^^^^^^
         source.luau variable.other.property.luau
                        ^
                        source.luau punctuation.separator.fields.luau
>  	Kind.FRAGMENT_DEFINITION,
 ^^^
 source.luau
    ^^^^
    source.luau variable.other.readwrite.luau
        ^
        source.luau
         ^^^^^^^^^^^^^^^^^^^
         source.luau variable.other.property.luau
                            ^
                            source.luau punctuation.separator.fields.luau
>  	Kind.ARGUMENT,
 ^^^
 source.luau
    ^^^^
    source.luau variable.other.readwrite.luau
        ^
        source.luau
         ^^^^^^^^
         source.luau variable.other.property.luau
                 ^
                 source.luau punctuation.separator.fields.luau
>  }, "failure case") do
 ^^
 source.luau
   ^
   source.luau punctuation.table.end.luau
    ^
    source.luau punctuation.separator.arguments.luau
     ^
     source.luau
      ^
      source.luau string.quoted.double.luau
       ^^^^^^^^^^^^
       source.luau string.quoted.double.luau
                   ^
                   source.luau string.quoted.double.luau
                    ^
                    source.luau punctuation.arguments.end.luau
                     ^
                     source.luau
                      ^^
                      source.luau keyword.control.luau
>  end
 ^^
 source.luau
   ^^^
   source.luau keyword.control.luau
>end
 ^^^
 source.luau keyword.control.luau
>
 ^
 source.luau
>do
 ^^
 source.luau keyword.control.luau
>  for _,v in call({
 ^^
 source.luau
   ^^^
   source.luau keyword.control.luau
      ^
      source.luau
       ^
       source.luau variable.parameter.luau
        ^
        source.luau
         ^
         source.luau variable.parameter.luau
          ^
          source.luau
           ^^
           source.luau keyword.control.luau
             ^
             source.luau
              ^^^^
              source.luau entity.name.function.luau
                  ^
                  source.luau punctuation.arguments.begin.luau
                   ^
                   source.luau punctuation.table.begin.luau
>  	Kind.SELECTION_sET,
 ^^^
 source.luau
    ^^^^
    source.luau variable.other.readwrite.luau
        ^
        source.luau
         ^^^^^^^^^^^^^
         source.luau variable.other.property.luau
                      ^
                      source.luau punctuation.separator.fields.luau
>  	Kind.DIRECTIVE,
 ^^^
 source.luau
    ^^^^
    source.luau variable.other.readwrite.luau
        ^
        source.luau
         ^^^^^^^^^
         source.luau variable.other.property.luau
                  ^
                  source.luau punctuation.separator.fields.luau
>  	Kind.OEPRATION_DEFINITION,
 ^^^
 source.luau
    ^^^^
    source.luau variable.other.readwrite.luau
        ^
        source.luau
         ^^^^^^^^^^^^^^^^^^^^
         source.luau variable.other.property.luau
                             ^
                             source.luau punctuation.separator.fields.luau
>  	Kind.INLINE_FRAGMENT,
 ^^^
 source.luau
    ^^^^
    source.luau variable.other.readwrite.luau
        ^
        source.luau
         ^^^^^^^^^^^^^^^
         source.luau variable.other.property.luau
                        ^
                        source.luau punctuation.separator.fields.luau
>  	Kind.FRAGMENT_DEFINITION,
 ^^^
 source.luau
    ^^^^
    source.luau variable.other.readwrite.luau
        ^
        source.luau
         ^^^^^^^^^^^^^^^^^^^
         source.luau variable.other.property.luau
                            ^
                            source.luau punctuation.separator.fields.luau
>  	Kind.ARGUMENT,
 ^^^
 source.luau
    ^^^^
    source.luau variable.other.readwrite.luau
        ^
        source.luau
         ^^^^^^^^
         source.luau variable.other.property.luau
                 ^
                 source.luau punctuation.separator.fields.luau
>  })(true) do
 ^^
 source.luau
   ^
   source.luau punctuation.table.end.luau
    ^
    source.luau punctuation.arguments.end.luau
     ^
     source.luau punctuation.arguments.begin.luau
      ^^^^
      source.luau constant.language.boolean.true.luau
          ^
          source.luau punctuation.arguments.end.luau
           ^
           source.luau
            ^^
            source.luau keyword.control.luau
>  end
 ^^
 source.luau
   ^^^
   source.luau keyword.control.luau
>end
 ^^^
 source.luau keyword.control.luau
>
 ^
 source.luau
>do
 ^^
 source.luau keyword.control.luau
>  for _,v in x.y.z.call({
 ^^
 source.luau
   ^^^
   source.luau keyword.control.luau
      ^
      source.luau
       ^
       source.luau variable.parameter.luau
        ^
        source.luau
         ^
         source.luau variable.parameter.luau
          ^
          source.luau
           ^^
           source.luau keyword.control.luau
             ^
             source.luau
              ^
              source.luau variable.other.readwrite.luau
               ^
               source.luau
                ^
                source.luau variable.other.property.luau
                 ^
                 source.luau
                  ^
                  source.luau variable.other.property.luau
                   ^
                   source.luau
                    ^^^^
                    source.luau entity.name.function.luau
                        ^
                        source.luau punctuation.arguments.begin.luau
                         ^
                         source.luau punctuation.table.begin.luau
>  	Kind.SELECTION_sET,
 ^^^
 source.luau
    ^^^^
    source.luau variable.other.readwrite.luau
        ^
        source.luau
         ^^^^^^^^^^^^^
         source.luau variable.other.property.luau
                      ^
                      source.luau punctuation.separator.fields.luau
>  	Kind.DIRECTIVE,
 ^^^
 source.luau
    ^^^^
    source.luau variable.other.readwrite.luau
        ^
        source.luau
         ^^^^^^^^^
         source.luau variable.other.property.luau
                  ^
                  source.luau punctuation.separator.fields.luau
>  	Kind.OEPRATION_DEFINITION,
 ^^^
 source.luau
    ^^^^
    source.luau variable.other.readwrite.luau
        ^
        source.luau
         ^^^^^^^^^^^^^^^^^^^^
         source.luau variable.other.property.luau
                             ^
                             source.luau punctuation.separator.fields.luau
>  	Kind.INLINE_FRAGMENT,
 ^^^
 source.luau
    ^^^^
    source.luau variable.other.readwrite.luau
        ^
        source.luau
         ^^^^^^^^^^^^^^^
         source.luau variable.other.property.luau
                        ^
                        source.luau punctuation.separator.fields.luau
>  	Kind.FRAGMENT_DEFINITION,
 ^^^
 source.luau
    ^^^^
    source.luau variable.other.readwrite.luau
        ^
        source.luau
         ^^^^^^^^^^^^^^^^^^^
         source.luau variable.other.property.luau
                            ^
                            source.luau punctuation.separator.fields.luau
>  	Kind.ARGUMENT,
 ^^^
 source.luau
    ^^^^
    source.luau variable.other.readwrite.luau
        ^
        source.luau
         ^^^^^^^^
         source.luau variable.other.property.luau
                 ^
                 source.luau punctuation.separator.fields.luau
>  }) do
 ^^
 source.luau
   ^
   source.luau punctuation.table.end.luau
    ^
    source.luau punctuation.arguments.end.luau
     ^
     source.luau
      ^^
      source.luau keyword.control.luau
>  end
 ^^
 source.luau
   ^^^
   source.luau keyword.control.luau
>end
 ^^^
 source.luau keyword.control.luau
>
 ^
 source.luau
>do
 ^^
 source.luau keyword.control.luau
>  for _,v in foo and call({
 ^^
 source.luau
   ^^^
   source.luau keyword.control.luau
      ^
      source.luau
       ^
       source.luau variable.parameter.luau
        ^
        source.luau
         ^
         source.luau variable.parameter.luau
          ^
          source.luau
           ^^
           source.luau keyword.control.luau
             ^
             source.luau
              ^^^
              source.luau variable.other.readwrite.luau
                 ^
                 source.luau
                  ^^^
                  source.luau keyword.operator.logical.luau keyword.operator.wordlike.luau
                     ^
                     source.luau
                      ^^^^
                      source.luau entity.name.function.luau
                          ^
                          source.luau punctuation.arguments.begin.luau
                           ^
                           source.luau punctuation.table.begin.luau
>  	Kind.SELECTION_sET,
 ^^^
 source.luau
    ^^^^
    source.luau variable.other.readwrite.luau
        ^
        source.luau
         ^^^^^^^^^^^^^
         source.luau variable.other.property.luau
                      ^
                      source.luau punctuation.separator.fields.luau
>  	Kind.DIRECTIVE,
 ^^^
 source.luau
    ^^^^
    source.luau variable.other.readwrite.luau
        ^
        source.luau
         ^^^^^^^^^
         source.luau variable.other.property.luau
                  ^
                  source.luau punctuation.separator.fields.luau
>  	Kind.OEPRATION_DEFINITION,
 ^^^
 source.luau
    ^^^^
    source.luau variable.other.readwrite.luau
        ^
        source.luau
         ^^^^^^^^^^^^^^^^^^^^
         source.luau variable.other.property.luau
                             ^
                             source.luau punctuation.separator.fields.luau
>  	Kind.INLINE_FRAGMENT,
 ^^^
 source.luau
    ^^^^
    source.luau variable.other.readwrite.luau
        ^
        source.luau
         ^^^^^^^^^^^^^^^
         source.luau variable.other.property.luau
                        ^
                        source.luau punctuation.separator.fields.luau
>  	Kind.FRAGMENT_DEFINITION,
 ^^^
 source.luau
    ^^^^
    source.luau variable.other.readwrite.luau
        ^
        source.luau
         ^^^^^^^^^^^^^^^^^^^
         source.luau variable.other.property.luau
                            ^
                            source.luau punctuation.separator.fields.luau
>  	Kind.ARGUMENT,
 ^^^
 source.luau
    ^^^^
    source.luau variable.other.readwrite.luau
        ^
        source.luau
         ^^^^^^^^
         source.luau variable.other.property.luau
                 ^
                 source.luau punctuation.separator.fields.luau
>  }) or otherCall() do
 ^^
 source.luau
   ^
   source.luau punctuation.table.end.luau
    ^
    source.luau punctuation.arguments.end.luau
     ^
     source.luau
      ^^
      source.luau keyword.operator.logical.luau keyword.operator.wordlike.luau
        ^
        source.luau
         ^^^^^^^^^
         source.luau entity.name.function.luau
                  ^
                  source.luau punctuation.arguments.begin.luau
                   ^
                   source.luau punctuation.arguments.end.luau
                    ^
                    source.luau
                     ^^
                     source.luau keyword.control.luau
>  end
 ^^
 source.luau
   ^^^
   source.luau keyword.control.luau
>end
 ^^^
 source.luau keyword.control.luau
>
 ^
 source.luau
>do
 ^^
 source.luau keyword.control.luau
>  for _,v in (foo({
 ^^
 source.luau
   ^^^
   source.luau keyword.control.luau
      ^
      source.luau
       ^
       source.luau variable.parameter.luau
        ^
        source.luau
         ^
         source.luau variable.parameter.luau
          ^
          source.luau
           ^^
           source.luau keyword.control.luau
             ^
             source.luau
              ^
              source.luau punctuation.arguments.begin.luau
               ^^^
               source.luau entity.name.function.luau
                  ^
                  source.luau punctuation.arguments.begin.luau
                   ^
                   source.luau punctuation.table.begin.luau
>  	Kind.SELECTION_sET,
 ^^^
 source.luau
    ^^^^
    source.luau variable.other.readwrite.luau
        ^
        source.luau
         ^^^^^^^^^^^^^
         source.luau variable.other.property.luau
                      ^
                      source.luau punctuation.separator.fields.luau
>  	Kind.DIRECTIVE,
 ^^^
 source.luau
    ^^^^
    source.luau variable.other.readwrite.luau
        ^
        source.luau
         ^^^^^^^^^
         source.luau variable.other.property.luau
                  ^
                  source.luau punctuation.separator.fields.luau
>  	Kind.OEPRATION_DEFINITION,
 ^^^
 source.luau
    ^^^^
    source.luau variable.other.readwrite.luau
        ^
        source.luau
         ^^^^^^^^^^^^^^^^^^^^
         source.luau variable.other.property.luau
                             ^
                             source.luau punctuation.separator.fields.luau
>  	Kind.INLINE_FRAGMENT,
 ^^^
 source.luau
    ^^^^
    source.luau variable.other.readwrite.luau
        ^
        source.luau
         ^^^^^^^^^^^^^^^
         source.luau variable.other.property.luau
                        ^
                        source.luau punctuation.separator.fields.luau
>  	Kind.FRAGMENT_DEFINITION,
 ^^^
 source.luau
    ^^^^
    source.luau variable.other.readwrite.luau
        ^
        source.luau
         ^^^^^^^^^^^^^^^^^^^
         source.luau variable.other.property.luau
                            ^
                            source.luau punctuation.separator.fields.luau
>  	Kind.ARGUMENT,
 ^^^
 source.luau
    ^^^^
    source.luau variable.other.readwrite.luau
        ^
        source.luau
         ^^^^^^^^
         source.luau variable.other.property.luau
                 ^
                 source.luau punctuation.separator.fields.luau
>  }) or true) do
 ^^
 source.luau
   ^
   source.luau punctuation.table.end.luau
    ^
    source.luau punctuation.arguments.end.luau
     ^
     source.luau
      ^^
      source.luau keyword.operator.logical.luau keyword.operator.wordlike.luau
        ^
        source.luau
         ^^^^
         source.luau constant.language.boolean.true.luau
             ^
             source.luau punctuation.arguments.end.luau
              ^
              source.luau
               ^^
               source.luau keyword.control.luau
>  end
 ^^
 source.luau
   ^^^
   source.luau keyword.control.luau
>end
 ^^^
 source.luau keyword.control.luau
>
 ^
 source.luau
>do
 ^^
 source.luau keyword.control.luau
>  for _,v in "thissssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss" do
 ^^
 source.luau
   ^^^
   source.luau keyword.control.luau
      ^
      source.luau
       ^
       source.luau variable.parameter.luau
        ^
        source.luau
         ^
         source.luau variable.parameter.luau
          ^
          source.luau
           ^^
           source.luau keyword.control.luau
             ^
             source.luau
              ^
              source.luau string.quoted.double.luau
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
               source.luau string.quoted.double.luau
                                                                                                                            ^
                                                                                                                            source.luau string.quoted.double.luau
                                                                                                                             ^
                                                                                                                             source.luau
                                                                                                                              ^^
                                                                                                                              source.luau keyword.control.luau
>  end
 ^^
 source.luau
   ^^^
   source.luau keyword.control.luau
>end
 ^^^
 source.luau keyword.control.luau
>
 ^
 source.luau