original file
-----------------------------------
-- https://github.com/JohnnyMorganz/StyLua/issues/504
local x = {
  FragmentDefinition = function(ref)
  	local name, typeCondition, variableDefinitions, directives, selectionSet =
  		ref.name, ref.typeCondition, ref.variableDefinitions, ref.directives, ref.selectionSet
  	return
  	-- Note: fragment variable definitions are experimental and may be changed
  	-- or removed in the future.
  		("fragment %s%s "):format(
  			tostring(name),
  			tostring(wrap("(", join(variableDefinitions, ", "), ")"))
  		) .. ("on %s %s"):format(
  			tostring(typeCondition),
  			tostring(wrap("", join(directives, " "), " "))
  		) .. tostring(selectionSet)
        end,
}

-----------------------------------

>-- https://github.com/JohnnyMorganz/StyLua/issues/504
 ^^
 source.luau comment.line.double-dash.luau
   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   source.luau comment.line.double-dash.luau
>local x = {
 ^^^^^
 source.luau storage.modifier.local.luau
      ^
      source.luau
       ^
       source.luau variable.other.readwrite.luau
        ^
        source.luau
         ^
         source.luau keyword.operator.assignment.luau
          ^
          source.luau
           ^
           source.luau punctuation.table.begin.luau
>  FragmentDefinition = function(ref)
 ^^
 source.luau
   ^^^^^^^^^^^^^^^^^^
   source.luau variable.other.readwrite.luau
                     ^
                     source.luau
                      ^
                      source.luau keyword.operator.assignment.luau
                       ^
                       source.luau
                        ^^^^^^^^
                        source.luau meta.function.luau keyword.control.luau
                                ^
                                source.luau meta.function.luau meta.parameter.luau punctuation.definition.parameters.begin.luau
                                 ^^^
                                 source.luau meta.function.luau meta.parameter.luau variable.parameter.function.luau
                                    ^
                                    source.luau meta.function.luau meta.parameter.luau punctuation.definition.parameters.end.luau
>  	local name, typeCondition, variableDefinitions, directives, selectionSet =
 ^^^
 source.luau
    ^^^^^
    source.luau storage.modifier.local.luau
         ^
         source.luau
          ^^^^
          source.luau variable.other.readwrite.luau
              ^^
              source.luau
                ^^^^^^^^^^^^^
                source.luau variable.other.readwrite.luau
                             ^^
                             source.luau
                               ^^^^^^^^^^^^^^^^^^^
                               source.luau variable.other.readwrite.luau
                                                  ^^
                                                  source.luau
                                                    ^^^^^^^^^^
                                                    source.luau variable.other.readwrite.luau
                                                              ^^
                                                              source.luau
                                                                ^^^^^^^^^^^^
                                                                source.luau variable.other.readwrite.luau
                                                                            ^
                                                                            source.luau
                                                                             ^
                                                                             source.luau keyword.operator.assignment.luau
>  		ref.name, ref.typeCondition, ref.variableDefinitions, ref.directives, ref.selectionSet
 ^^^^
 source.luau
     ^^^
     source.luau variable.other.readwrite.luau
        ^
        source.luau
         ^^^^
         source.luau variable.other.property.luau
             ^
             source.luau punctuation.separator.fields.luau
              ^
              source.luau
               ^^^
               source.luau variable.other.readwrite.luau
                  ^
                  source.luau
                   ^^^^^^^^^^^^^
                   source.luau variable.other.property.luau
                                ^
                                source.luau punctuation.separator.fields.luau
                                 ^
                                 source.luau
                                  ^^^
                                  source.luau variable.other.readwrite.luau
                                     ^
                                     source.luau
                                      ^^^^^^^^^^^^^^^^^^^
                                      source.luau variable.other.property.luau
                                                         ^
                                                         source.luau punctuation.separator.fields.luau
                                                          ^
                                                          source.luau
                                                           ^^^
                                                           source.luau variable.other.readwrite.luau
                                                              ^
                                                              source.luau
                                                               ^^^^^^^^^^
                                                               source.luau variable.other.property.luau
                                                                         ^
                                                                         source.luau punctuation.separator.fields.luau
                                                                          ^
                                                                          source.luau
                                                                           ^^^
                                                                           source.luau variable.other.readwrite.luau
                                                                              ^
                                                                              source.luau
                                                                               ^^^^^^^^^^^^
                                                                               source.luau variable.other.property.luau
>  	return
 ^^^
 source.luau
    ^^^^^^
    source.luau keyword.control.luau
>  	-- Note: fragment variable definitions are experimental and may be changed
 ^^^
 source.luau
    ^^
    source.luau comment.line.double-dash.luau
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
      source.luau comment.line.double-dash.luau
>  	-- or removed in the future.
 ^^^
 source.luau
    ^^
    source.luau comment.line.double-dash.luau
      ^^^^^^^^^^^^^^^^^^^^^^^^^^
      source.luau comment.line.double-dash.luau
>  		("fragment %s%s "):format(
 ^^^^
 source.luau
     ^
     source.luau punctuation.arguments.begin.luau
      ^
      source.luau string.quoted.double.luau
       ^^^^^^^^^^^^^^
       source.luau string.quoted.double.luau
                     ^
                     source.luau string.quoted.double.luau
                      ^
                      source.luau punctuation.arguments.end.luau
                       ^
                       source.luau
                        ^^^^^^
                        source.luau entity.name.function.luau
                              ^
                              source.luau punctuation.arguments.begin.luau
>  			tostring(name),
 ^^^^^
 source.luau
      ^^^^^^^^
      source.luau support.function.luau
              ^
              source.luau punctuation.arguments.begin.luau
               ^^^^
               source.luau variable.other.readwrite.luau
                   ^
                   source.luau punctuation.arguments.end.luau
                    ^
                    source.luau punctuation.separator.arguments.luau
>  			tostring(wrap("(", join(variableDefinitions, ", "), ")"))
 ^^^^^
 source.luau
      ^^^^^^^^
      source.luau support.function.luau
              ^
              source.luau punctuation.arguments.begin.luau
               ^^^^
               source.luau entity.name.function.luau
                   ^
                   source.luau punctuation.arguments.begin.luau
                    ^
                    source.luau string.quoted.double.luau
                     ^
                     source.luau string.quoted.double.luau
                      ^
                      source.luau string.quoted.double.luau
                       ^
                       source.luau punctuation.separator.arguments.luau
                        ^
                        source.luau
                         ^^^^
                         source.luau entity.name.function.luau
                             ^
                             source.luau punctuation.arguments.begin.luau
                              ^^^^^^^^^^^^^^^^^^^
                              source.luau variable.other.readwrite.luau
                                                 ^
                                                 source.luau punctuation.separator.arguments.luau
                                                  ^
                                                  source.luau
                                                   ^
                                                   source.luau string.quoted.double.luau
                                                    ^^
                                                    source.luau string.quoted.double.luau
                                                      ^
                                                      source.luau string.quoted.double.luau
                                                       ^
                                                       source.luau punctuation.arguments.end.luau
                                                        ^
                                                        source.luau punctuation.separator.arguments.luau
                                                         ^
                                                         source.luau
                                                          ^
                                                          source.luau string.quoted.double.luau
                                                           ^
                                                           source.luau string.quoted.double.luau
                                                            ^
                                                            source.luau string.quoted.double.luau
                                                             ^
                                                             source.luau punctuation.arguments.end.luau
                                                              ^
                                                              source.luau punctuation.arguments.end.luau
>  		) .. ("on %s %s"):format(
 ^^^^
 source.luau
     ^
     source.luau punctuation.arguments.end.luau
      ^
      source.luau
       ^^
       source.luau keyword.operator.other.luau
         ^
         source.luau
          ^
          source.luau punctuation.arguments.begin.luau
           ^
           source.luau string.quoted.double.luau
            ^^^^^^^^
            source.luau string.quoted.double.luau
                    ^
                    source.luau string.quoted.double.luau
                     ^
                     source.luau punctuation.arguments.end.luau
                      ^
                      source.luau
                       ^^^^^^
                       source.luau entity.name.function.luau
                             ^
                             source.luau punctuation.arguments.begin.luau
>  			tostring(typeCondition),
 ^^^^^
 source.luau
      ^^^^^^^^
      source.luau support.function.luau
              ^
              source.luau punctuation.arguments.begin.luau
               ^^^^^^^^^^^^^
               source.luau variable.other.readwrite.luau
                            ^
                            source.luau punctuation.arguments.end.luau
                             ^
                             source.luau punctuation.separator.arguments.luau
>  			tostring(wrap("", join(directives, " "), " "))
 ^^^^^
 source.luau
      ^^^^^^^^
      source.luau support.function.luau
              ^
              source.luau punctuation.arguments.begin.luau
               ^^^^
               source.luau entity.name.function.luau
                   ^
                   source.luau punctuation.arguments.begin.luau
                    ^
                    source.luau string.quoted.double.luau
                     ^
                     source.luau string.quoted.double.luau
                      ^
                      source.luau punctuation.separator.arguments.luau
                       ^
                       source.luau
                        ^^^^
                        source.luau entity.name.function.luau
                            ^
                            source.luau punctuation.arguments.begin.luau
                             ^^^^^^^^^^
                             source.luau variable.other.readwrite.luau
                                       ^
                                       source.luau punctuation.separator.arguments.luau
                                        ^
                                        source.luau
                                         ^
                                         source.luau string.quoted.double.luau
                                          ^
                                          source.luau string.quoted.double.luau
                                           ^
                                           source.luau string.quoted.double.luau
                                            ^
                                            source.luau punctuation.arguments.end.luau
                                             ^
                                             source.luau punctuation.separator.arguments.luau
                                              ^
                                              source.luau
                                               ^
                                               source.luau string.quoted.double.luau
                                                ^
                                                source.luau string.quoted.double.luau
                                                 ^
                                                 source.luau string.quoted.double.luau
                                                  ^
                                                  source.luau punctuation.arguments.end.luau
                                                   ^
                                                   source.luau punctuation.arguments.end.luau
>  		) .. tostring(selectionSet)
 ^^^^
 source.luau
     ^
     source.luau punctuation.arguments.end.luau
      ^
      source.luau
       ^^
       source.luau keyword.operator.other.luau
         ^
         source.luau
          ^^^^^^^^
          source.luau support.function.luau
                  ^
                  source.luau punctuation.arguments.begin.luau
                   ^^^^^^^^^^^^
                   source.luau variable.other.readwrite.luau
                               ^
                               source.luau punctuation.arguments.end.luau
>        end,
 ^^^^^^^^
 source.luau
         ^^^
         source.luau keyword.control.luau
            ^
            source.luau punctuation.separator.fields.luau
>}
 ^
 source.luau punctuation.table.end.luau
>
 ^
 source.luau